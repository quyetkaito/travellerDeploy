import { App } from 'vue';
import { DeepReadonly } from '@vue/reactivity';
import { Ref } from 'vue';
import { UnwrapNestedRefs } from '@vue/reactivity';

/**
 * Creates a I18n instance that can be used by a Vue app.
 *
 * @param options - {@link I18nOptions}
 */
export declare function createI18n(options?: I18nOptions): I18n;

/**
 * I18n instance
 */
export declare type I18n = {
    current: DeepReadonly<UnwrapNestedRefs<Ref<string>>>;
    options: DeepReadonly<UnwrapNestedRefs<I18nOptions>>;
    setLocaleMessage(locale: I18nLocale, messages: I18nLocaleMessages): void;
    getLocaleMessage(locale: I18nLocale): I18nLocaleMessages;
    changeLocale(locale: I18nLocale): void;
    install(app: App): void;
    t(key: string, values?: I18nValues): string;
    t(key: string, locale?: I18nLocale): string;
};

/**
 * I18n locale
 */
export declare type I18nLocale = string;

/**
 * I18n locale message
 */
export declare type I18nLocaleMessage = string;

/**
 * I18n locale message object
 */
export declare type I18nLocaleMessageObject = {
    [k: string]: I18nLocaleMessageObject | I18nLocaleMessage;
};

/**
 * I18n locale messages
 */
export declare type I18nLocaleMessages = {
    [k: string]: I18nLocaleMessageObject | I18nLocaleMessage;
};

/**
 * I18n locales
 */
export declare type I18nLocales = UnwrapNestedRefs<{
    [k: string]: I18nLocaleMessages;
}>;

/**
 * I18n options
 */
export declare type I18nOptions = {
    locale?: string;
    fallbackLocale?: string;
    messages?: {
        [locale: string]: I18nLocaleMessages;
    };
};

/**
 * I18n value
 */
export declare type I18nValue = number | string;

/**
 * I18n value object
 */
export declare type I18nValueObject = {
    [k: string]: I18nValue;
};

/**
 * I18n values
 */
export declare type I18nValues = I18nValue[] | I18nValueObject;

/**
 * Returns the i18n instance.
 */
export declare function useI18n(): I18n;

export { }

declare module '@vue/runtime-core' {
  export interface ComponentCustomProperties {
    $t(key: string, values?: I18nValues): string
    $t(key: string, locale: I18nLocale): string
  }
}

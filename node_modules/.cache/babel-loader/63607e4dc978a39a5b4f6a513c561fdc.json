{"ast":null,"code":"import { toDisplayString as _toDisplayString, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"title\"];\nconst _hoisted_2 = {\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"flex align-y-center\"\n};\nconst _hoisted_4 = [\"type\", \"name\", \"maxlength\", \"disabled\", \"tabindex\", \"value\", \"placeholder\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"flex align-y-center\"\n};\nconst _hoisted_6 = [\"placeholder\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"label\", {\n    for: \"\",\n    class: \"m-label\",\n    title: $props.labelTextFull\n  }, [_createTextVNode(_toDisplayString($props.labelText) + \" \", 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"span\", {\n    class: \"require-mark\"\n  }, _toDisplayString($props.requiredSymbol), 513\n  /* TEXT, NEED_PATCH */\n  ), [[_vShow, $props.required]])], 8\n  /* PROPS */\n  , _hoisted_1), [[_vShow, $props.isHasLabel]]), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Nếu là input bình thường \"), !$props.isTextArea ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"input\", {\n    ref: \"input\",\n    type: $props.type,\n    name: $props.name,\n    maxlength: $props.maxlength,\n    disabled: $props.disabled,\n    tabindex: $props.tabindex,\n    class: _normalizeClass([\"m-input\", {\n      'm-input-icon': $props.isHasIcon,\n      error: $props.isError,\n      'text-align-right': $props.isNumberInput //căn phải nếu là số\n\n    }]),\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.sendChange && $options.sendChange(...args)),\n    style: _normalizeStyle({\n      height: $props.height + 'px',\n      style: $props.style\n    }),\n    placeholder: $props.placeholder,\n    onBlur: _cache[1] || (_cache[1] = $event => _ctx.$emit('blur', $event)),\n    onChange: _cache[2] || (_cache[2] = $event => _ctx.$emit('onChange', $props.modelValue))\n  }, null, 46\n  /* CLASS, STYLE, PROPS, HYDRATE_EVENTS */\n  , _hoisted_4), _withDirectives(_createElementVNode(\"div\", {\n    class: \"m-search m-icon m-icon-16 m-icon-search\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('findData'))\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vShow, $props.isHasIcon]])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Nếu là textarea \"), $props.isTextArea ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"textarea\", {\n    ref: \"input\",\n    class: \"m-input m-textarea\",\n    placeholder: $props.placeholder,\n    style: _normalizeStyle({\n      height: $props.height + 'px!important',\n      style: $props.style\n    }),\n    onInput: _cache[4] || (_cache[4] = (...args) => $options.sendChange && $options.sendChange(...args)),\n    value: $props.modelValue,\n    onChange: _cache[5] || (_cache[5] = $event => _ctx.$emit('onChange', $props.modelValue))\n  }, null, 44\n  /* STYLE, PROPS, HYDRATE_EVENTS */\n  , _hoisted_6)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;;EAMSA,KAA0B,EAA1B;IAAA;EAAA;;;;EAEEC,KAAK,EAAC;;;;;EA6BNA,KAAK,EAAC;;;;uBApCfC,oBAgDM,KAhDN,EAgDM,IAhDN,EAgDM,iBA/CJC,oBAGQ,OAHR,EAGQ;IAHDC,GAAG,EAAC,EAGH;IAHMH,KAAK,EAAC,SAGZ;IAH2CI,KAAK,EAAEC;EAGlD,CAHR,qCACKA,oBAAY,KACf;EAAA;qBAAAH,oBAAsE,MAAtE,EAAsE;IAAhEF,KAAK,EAAC;EAA0D,CAAtE,EAA0BM,iBAAqBD,qBAArB,CAA1B,EAA6D;EAAA;EAA7D,GAA6D,UAA1BA,gBAA0B,GAF/D;;EAAA,yBAAsCA,oBA+ClC,EA3CJH,oBA0CM,KA1CN,cA0CM,CAzCJK,iDAyCI,GAxCoCF,mCAAxCJ,oBA0BM,KA1BN,cA0BM,CAzBJC,oBAmBE,OAnBF,EAmBE;IAlBAM,GAAG,EAAC,OAkBJ;IAjBCC,IAAI,EAAEJ,WAiBP;IAhBCK,IAAI,EAAEL,WAgBP;IAfCM,SAAS,EAAEN,gBAeZ;IAdCO,QAAQ,EAAEP,eAcX;IAbCQ,QAAQ,EAAER,eAaX;IAZAL,KAAK,mBAAC,SAAD,EAAU;sBAI8BK,gBAJ9B;aAI6DA,cAJ7D;0BAIuGA,oBAJvG,CAIoH;;IAJpH,CAAV,EAYL;IAXCS,KAAK,EAAET,iBAWR;IAVCU,OAAK,yCAAEC,mDAAF,CAUN;IATCjB,KAAK;MAAAkB,QAAYZ,gBAAM,IAAlB;MAAkBN,OAASM;IAA3B,EASN;IAHCa,WAAW,EAAEb,kBAGd;IAFCc,MAAI,sCAAEC,WAAK,MAAL,EAAcC,MAAd,CAAF,CAEL;IADCC,QAAM,sCAAEF,WAAK,UAAL,EAAkBf,iBAAlB,CAAF;EACP,CAnBF;;EAAA,aAyBI,kBALJH,oBAIO,KAJP,EAIO;IAHLF,KAAK,EAAC,yCAGD;IADJuB,OAAK,sCAAEH,WAAK,UAAL,CAAF;EACD,CAJP;;EAAA,aAEUf,mBAGN,CA1BN,sCAwCI,EAZJE,wCAYI,EAXmCF,mCAAvCJ,oBAUM,KAVN,cAUM,CATJC,oBAQE,UARF,EAQE;IAPAM,GAAG,EAAC,OAOJ;IANAR,KAAK,EAAC,oBAMN;IALCkB,WAAW,EAAEb,kBAKd;IAJCN,KAAK;MAAAkB,QAAYZ,gBAAM,cAAlB;MAAkBN,OAAmBM;IAArC,EAIN;IAHCU,OAAK,yCAAEC,mDAAF,CAGN;IAFCF,KAAK,EAAET,iBAER;IADCiB,QAAM,sCAAEF,WAAK,UAAL,EAAkBf,iBAAlB,CAAF;EACP,CARF;;EAAA,aASI,CAVN,sCAWI,CA1CN,CA2CI,CAhDN","names":["style","class","_createElementBlock","_createElementVNode","for","title","$props","_toDisplayString","_createCommentVNode","ref","type","name","maxlength","disabled","tabindex","value","onInput","$options","height","placeholder","onBlur","_ctx","$event","onChange","onClick"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\components\\m-input\\MInput.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"\" class=\"m-label\" v-show=\"isHasLabel\" :title=\"labelTextFull\">\r\n      {{ labelText }}\r\n      <span class=\"require-mark\" v-show=\"required\">{{requiredSymbol}}</span>\r\n    </label>\r\n    <div style=\"position: relative\">\r\n      <!-- Nếu là input bình thường -->\r\n      <div class=\"flex align-y-center\" v-if=\"!isTextArea\">\r\n        <input\r\n          ref=\"input\"\r\n          :type=\"type\"\r\n          :name=\"name\"\r\n          :maxlength=\"maxlength\"\r\n          :disabled=\"disabled\"\r\n          :tabindex=\"tabindex\"\r\n          class=\"m-input\"\r\n          :value=\"modelValue\"\r\n          @input=\"sendChange\"\r\n          :style=\"{ height: height + 'px', style }\"\r\n          v-bind:class=\"{\r\n            'm-input-icon': isHasIcon,\r\n            error: isError,\r\n            'text-align-right': isNumberInput, //căn phải nếu là số\r\n          }\"\r\n          :placeholder=\"placeholder\"\r\n          @blur=\"$emit('blur', $event)\"\r\n          @change=\"$emit('onChange', modelValue)\"\r\n        />\r\n        <div\r\n          class=\"m-search m-icon m-icon-16 m-icon-search\"\r\n          v-show=\"isHasIcon\"\r\n          @click=\"$emit('findData')\"\r\n        ></div>\r\n      </div>\r\n\r\n      <!-- Nếu là textarea -->\r\n      <div class=\"flex align-y-center\" v-if=\"isTextArea\">\r\n        <textarea\r\n          ref=\"input\"\r\n          class=\"m-input m-textarea\"\r\n          :placeholder=\"placeholder\"\r\n          :style=\"{ height: height + 'px!important', style }\"\r\n          @input=\"sendChange\"\r\n          :value=\"modelValue\"\r\n          @change=\"$emit('onChange', modelValue)\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as base from \"@/script/base\";\r\n\r\nexport default {\r\n  name: \"MInput\",\r\n  emits: [\"update:modelValue\", \"checkBlur\", \"blur\", \"onChange\"],\r\n  data() {\r\n    return {\r\n      full: \"width:100%\",\r\n    };\r\n  },\r\n  props: {\r\n    //input có label hay không?\r\n    isHasLabel: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    //label của input là gì\r\n    labelText: {\r\n      type: String,\r\n      default: \"label-text\",\r\n    },\r\n    //label đầy đủ của input là gì\r\n    labelTextFull: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    //hiện title khi hover cho label viết tắt\r\n    labelTitle: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    //loại input\r\n    type: {\r\n      type: String,\r\n      default: \"text\",\r\n    },\r\n    //placeholder của input\r\n    placeholder: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    //input này có bắt buộc không?\r\n    required: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //kí hiệu bắt buộc là gì?\r\n    requiredSymbol:{\r\n      type: String,\r\n      default: \"*\",\r\n    },\r\n    //input này có icon không?\r\n    isHasIcon: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //chiều rộng là bao nhiêu? mặc định 100% chiều dài phần tử cha\r\n    width: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    //chiều cao của input là bao nhiêu?\r\n    height: {\r\n      type: [Number,String],\r\n      default: 40,\r\n    },\r\n    //số ký tự có thể nhập là bao nhiêu?\r\n    maxlength: {\r\n      type: Number,\r\n      default: 255,\r\n    },\r\n    //giá trị khởi tạo cho input\r\n    modelValue: {\r\n      type: [String, Number],\r\n      default: \"\",\r\n    },\r\n    //thêm class lỗi nếu lỗi\r\n    isError: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //có phải input dạng số hay không?\r\n    isNumberInput: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //có phải input dạng text area không?\r\n    isTextArea: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //name của input\r\n    name: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    //input có bị disabled ko?\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //binding nhiều style\r\n    style:{\r\n      type: [String,Object],\r\n      default: null\r\n    },\r\n    tabindex:{\r\n      type: [Number,String],\r\n      default:null\r\n    }\r\n  },\r\n  methods: {\r\n    /**----------------------------------\r\n     * Hàm gửi dữ liệu tới component cha\r\n     * và xử lý dữ liệu.\r\n     * Author: quyetkaito (25/02/2022)\r\n    -------------------------------------*/\r\n    sendChange(event) {\r\n      try {\r\n        //khi nhập thì bỏ error border\r\n        this.removeError();\r\n        //nếu là dạng số thì format\r\n        if (this.isNumberInput) {\r\n          //gọi hàm format định dạng số ngay khi nhập liệu từ base\r\n          this.onNumberInput(event);\r\n        }\r\n        this.$emit(\"onChange\", true);\r\n        this.$emit(\"update:modelValue\", event.target.value);\r\n      } catch (error) {\r\n        //log ra lỗi\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**-----------------------------------------------------------\r\n * Hàm thực hiện format định dạng số ngay trong khi nhập liệu.\r\n * @param {Event} event \r\n * Author: quyetkaito (27/03/2022).\r\n -----------------------------------*/\r\n    onNumberInput(event) {\r\n      try {\r\n        //lấy ra giá trị của ô input hiện tại\r\n        let value = event.target.value;\r\n        // console.log(\"ô input hiện tại: \", value);\r\n        if (event.data == \",\") {\r\n          //nếu người dùng nhập dấu ',' và không có dấu ',' nào đã tồn tại => đang nhập số thập phân\r\n          if ((value.match(/,/g) || []).length <= 1) {\r\n            // console.log(\"chưa phải số thập phân\");\r\n            return; //cho nhập liệu tiếp\r\n          }\r\n        }\r\n        //format số\r\n        event.target.value = base.formatCurrency(value);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**--------------------------------\r\n     * Hàm dùng để focus vào input.\r\n     * Author: quyetkaito (03/03/2022)\r\n    ----------------------------------*/  \r\n    focus: function () {\r\n      this.$nextTick(function () {\r\n        this.$refs.input.focus()\r\n      });\r\n    },\r\n\r\n    /**------------------------------------\r\n     * Hàm dùng để thêm css lỗi cho input.\r\n     * Author: quyetkaito (03/03/2022)\r\n    --------------------------------------*/\r\n    addError: function () {\r\n      this.$refs.input.classList.add(\"error\");\r\n      this.$refs.input.setAttribute(\r\n        \"title\",\r\n        `${this.labelText} không được bỏ trống`\r\n      );\r\n    },\r\n\r\n    /**--------------------------\r\n     * Hàm thêm border đỏ cho input\r\n     * Author: quyetkaito (20/03/2022)\r\n     -------------------------*/\r\n    addRedBorder: function () {\r\n      this.$refs.input.classList.add(\"error\");\r\n    },\r\n\r\n    /**------------------------------------\r\n     * Hàm dùng để bỏ css lỗi cho input.\r\n     * Author: quyetkaito (03/03/2022)\r\n    --------------------------------------*/\r\n    removeError: function () {\r\n      this.$refs.input.classList.remove(\"error\");\r\n      this.$refs.input.setAttribute(\"title\", \"\");\r\n    },\r\n\r\n    /**-------------------------------\r\n     * Hàm lấy ra label của input.\r\n     * Author: quyetkaito (03/03/2022)\r\n     ---------------------------------*/\r\n    getLabel: function () {\r\n      return this.labelText;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"@/style/common/input.css\");\r\n</style>"]},"metadata":{},"sourceType":"module"}
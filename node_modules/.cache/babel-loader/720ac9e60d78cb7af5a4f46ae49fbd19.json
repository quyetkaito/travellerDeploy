{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"paging-action flex align-y-center\"\n};\nconst _hoisted_2 = {\n  class: \"paging-number-group flex align-center\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"prev-button\",\n    style: _normalizeStyle([$props.currentPage == 1 ? {\n      opacity: '50%',\n      cursor: 'default'\n    } : {\n      opacity: '100%'\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => $options.prevPageClick())\n  }, \" Trước \", 4), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pages, (page, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"m-paging-number\", {\n        active: page === $props.currentPage\n      }]),\n      key: index,\n      onClick: $event => $options.numberPageClick(page)\n    }, _toDisplayString(page), 11, _hoisted_3);\n  }), 128))]), _createElementVNode(\"div\", {\n    class: \"next-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.nextPageClick()),\n    style: _normalizeStyle([$props.currentPage == $props.totalPage ? {\n      opacity: '50%',\n      cursor: 'default'\n    } : {\n      opacity: '100%'\n    }])\n  }, \" Sau \", 4)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EAYJA,KAAK,EAAC;;;;uBAZbC,oBAkCM,KAlCN,cAkCM,CAjCJC,oBAUM,KAVN,EAUM;IATJF,KAAK,EAAC,aASF;IARHG,KAAK,mBAAaC,sBAAW,CAAX;;;KAAA;;KAAb,EAQF;IAHHC,OAAK,sCAAEC,wBAAF;EAGF,CAVN,EAQC,SARD,EAUA,CAVA,CAiCI,EAtBJJ,oBAUM,KAVN,cAUM,oBATJD,oBAQMM,SARN,EAQM,IARN,EAQMC,YALoBF,cAKpB,EALyB,CAArBG,IAAqB,EAAfC,KAAe,KAAV;yBAHrBT,oBAQM,KARN,EAQM;MAPJD,KAAK,mBAAC,iBAAD,EAAkB;QAAAW,QACLF,IAAI,KAAKL;MADJ,CAAlB,EAOD;MAJHQ,GAAG,EAAEF,KAIF;MAHHL,OAAK,YAAEC,yBAAgBG,IAAhB;IAGJ,CARN,mBAOKA,KAPL,EAOS,EAPT,EAOSI,UAPT;GAQM,CARN,MASI,EAVN,CAsBI,EAXJX,oBAUM,KAVN,EAUM;IATJF,KAAK,EAAC,aASF;IARHK,OAAK,sCAAEC,wBAAF,CAQF;IAPHH,KAAK,mBAAaC,sBAAeA,gBAAf;;;KAAA;;KAAb;EAOF,CAVN,EAQC,OARD,EAUA,CAVA,CAWI,CAlCN","names":["class","_createElementBlock","_createElementVNode","style","$props","onClick","$options","_Fragment","_renderList","page","index","active","key","_hoisted_3"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\components\\m-pagination\\MPagination.vue"],"sourcesContent":["<template>\r\n  <div class=\"paging-action flex align-y-center\">\r\n    <div\r\n      class=\"prev-button\"\r\n      :style=\"[\r\n        currentPage == 1\r\n          ? { opacity: '50%', cursor: 'default' }\r\n          : { opacity: '100%' },\r\n      ]\"\r\n      @click=\"prevPageClick()\"\r\n    >\r\n      Trước\r\n    </div>\r\n    <div class=\"paging-number-group flex align-center\">\r\n      <div\r\n        class=\"m-paging-number\"\r\n        :class=\"{ active: page === currentPage }\"\r\n        v-for=\"(page, index) in pages\"\r\n        :key=\"index\"\r\n        @click=\"numberPageClick(page)\"\r\n      >\r\n        {{ page }}\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"next-button\"\r\n      @click=\"nextPageClick()\"\r\n      :style=\"[\r\n        currentPage == totalPage\r\n          ? { opacity: '50%', cursor: 'default' }\r\n          : { opacity: '100%' },\r\n      ]\"\r\n    >\r\n      Sau\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    //tổng số trang\r\n    totalPage: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    //trang hiện tại\r\n    currentPage: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    //số bản ghi trên 1 trang\r\n    pageSize: {\r\n      type: [Number,String],\r\n      default: 10,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n\r\n    };\r\n  },\r\n  methods: {\r\n    /**-------------------------------------\r\n     * Hàm xử lý khi click vào nút [Trước].\r\n     * Author: quyetkaito (13/03/2022)\r\n     ---------------------------------------*/\r\n    prevPageClick() {\r\n      if(this.currentPage == 1) return; //nếu là trang đầu rồi thì ko làm gì cả.\r\n      let page = this.currentPage;\r\n      if (page > 1) {\r\n        page--;\r\n        this.$emit(\"changeCurrentPage\", page);\r\n      }\r\n    },\r\n\r\n    /**-------------------------------------\r\n     * Hàm xử lý khi click vào nút [Sau].\r\n     * Author: quyetkaito (13/03/2022)\r\n     ---------------------------------------*/\r\n    nextPageClick() {\r\n      if(this.currentPage == this.totalPage) return; //nếu là trang cuối rồi thì ko làm gì cả.\r\n      let page = this.currentPage;\r\n      if (page < this.totalPage) {\r\n        page++;\r\n        this.$emit(\"changeCurrentPage\", page);\r\n      }\r\n    },\r\n\r\n    /**-------------------------------------\r\n     * Hàm xử lý khi click vào số trang.\r\n     * @param {Number} page - trang cần chuyền đến.\r\n     * Author: quyetkaito (13/03/2022)\r\n     ---------------------------------------*/\r\n    numberPageClick(page) {\r\n      if (!isNaN(page)) {\r\n        this.$emit(\"changeCurrentPage\", page);\r\n      }\r\n    },\r\n\r\n    /**--------------------------------------------\r\n     * Thực hiện tính toán các trang được hiển thị\r\n     * Author: quyetkaito (13/03/2022)\r\n    ----------------------------------------------*/\r\n    pagination(c, m) {\r\n      var current = c, //trang hiện tại\r\n        last = m; //trang cuối\r\n\r\n      var delta = 1; //số trang hiển thị cạnh trang hiện tại       \r\n      if(current==1||current==this.totalPage) delta = 2; \r\n      var left = current - delta, //số bên trái trang hiện tại\r\n        right = current + delta + 1, //số bên phải trang hiện tại\r\n        range = [], //dãy số ở giữa\r\n        rangeWithDots = [], //dãy số có cả chấm\r\n        l;\r\n      \r\n      for (let i = 1; i <= last; i++) {\r\n        if (i == 1 || i == last || (i >= left && i < right)) {\r\n          range.push(i); //push các số vào\r\n        }\r\n      }\r\n\r\n      for (let i of range) {\r\n        if (l) {\r\n          if (i - l === 2) {\r\n            rangeWithDots.push(l + 1);\r\n          } else if (i - l !== 1) {\r\n            rangeWithDots.push(\"...\");\r\n          }\r\n        }\r\n        rangeWithDots.push(i);\r\n        l = i;\r\n      }\r\n      return rangeWithDots;\r\n    },\r\n  },\r\n  computed: {\r\n    // Số trang được visible\r\n    pages() {\r\n      return this.pagination(this.currentPage, this.totalPage);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"/src/style/common/paging.css\");\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-43340258\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"dashboard-view\"\n};\nconst _hoisted_2 = {\n  class: \"chart-row w-full\"\n};\nconst _hoisted_3 = {\n  class: \"chart-card\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"chart-description\"\n}, \"Biểu đồ thống kê danh mục phổ biến hiện tại \", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"w-full flex chart-row\"\n};\nconst _hoisted_6 = {\n  class: \"chart-card w-2/3\"\n};\nconst _hoisted_7 = {\n  class: \"chart-card w-1/3\"\n};\nconst _hoisted_8 = {\n  class: \"chart-row\"\n};\nconst _hoisted_9 = {\n  class: \"chart-card w-1/3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n\n  const _component_LineChart = _resolveComponent(\"LineChart\");\n\n  const _component_PieChart = _resolveComponent(\"PieChart\");\n\n  const _component_DoughnutChart = _resolveComponent(\"DoughnutChart\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_BarChart, {\n    chartData: _ctx.categoryData,\n    height: 200\n  }, null, 8\n  /* PROPS */\n  , [\"chartData\"]), _hoisted_4])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_LineChart, {\n    chartData: _ctx.postData,\n    height: 300\n  }, null, 8\n  /* PROPS */\n  , [\"chartData\"])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_PieChart, {\n    chartData: _ctx.testData,\n    height: 300\n  }, null, 8\n  /* PROPS */\n  , [\"chartData\"])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_DoughnutChart, {\n    chartData: _ctx.testData\n  }, null, 8\n  /* PROPS */\n  , [\"chartData\"])])])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gEAEPC,oBACM,KADN,EACM;EADDD,KAAK,EAAC;AACL,CADN,EAA+B,8CAA/B,EACA;AAAA;AADA;;;EAIHA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EAIVA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;;;;;;;;;uBAjBnBE,oBAqBM,KArBN,cAqBM,CApBFD,oBAMM,KANN,cAMM,CALFA,oBAIM,KAJN,cAIM,CAHFE,aAAmDC,mBAAnD,EAAmD;IAAxCC,SAAS,EAAEC,iBAA6B;IAAdC,MAAM,EAAE;EAAM,CAAnD;;EAAA,gBAGE,EAFFC,UAEE,CAJN,CAKE,CANN,CAoBE,EAbFP,oBAOM,KAPN,cAOM,CANFA,oBAEM,KAFN,cAEM,CADFE,aAAiDM,oBAAjD,EAAiD;IAArCJ,SAAS,EAAEC,aAA0B;IAAfC,MAAM,EAAE;EAAO,CAAjD;;EAAA,gBACE,CAFN,CAME,EAHFN,oBAEM,KAFN,cAEM,CADFE,aAAgDO,mBAAhD,EAAgD;IAArCL,SAAS,EAAEC,aAA0B;IAAfC,MAAM,EAAE;EAAO,CAAhD;;EAAA,gBACE,CAFN,CAGE,CAPN,CAaE,EALFN,oBAIM,KAJN,cAIM,CAHFA,oBAEM,KAFN,cAEM,CADFE,aAAuCQ,wBAAvC,EAAuC;IAAvBN,SAAS,EAAEC;EAAY,CAAvC,EAAmC,IAAnC,EAAmC;EAAA;EAAnC,EAAmC,aAAnC,CACE,CAFN,CAGE,CAJN,CAKE,CArBN","names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_BarChart","chartData","_ctx","height","_hoisted_4","_component_LineChart","_component_PieChart","_component_DoughnutChart"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\dashboard\\DashboardView.vue"],"sourcesContent":["<template>\r\n<div class=\"dashboard-view\">\r\n    <div class=\"chart-row w-full\">\r\n        <div class=\"chart-card\">\r\n            <BarChart :chartData=\"categoryData\" :height=\"200\"/>\r\n            <div class=\"chart-description\">Biểu đồ thống kê danh mục phổ biến hiện tại\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"w-full flex chart-row\">    \r\n        <div class=\"chart-card w-2/3\">\r\n            <LineChart :chartData=\"postData\" :height=\"300\" />\r\n        </div>\r\n        <div class=\"chart-card w-1/3\">\r\n            <PieChart :chartData=\"testData\" :height=\"300\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"chart-row\">\r\n        <div class=\"chart-card w-1/3\">\r\n            <DoughnutChart :chartData=\"testData\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\nimport { DoughnutChart, BarChart, LineChart, PieChart } from 'vue-chart-3';\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport CategoryAPI from \"@/api/CategoryAPI\"\r\nimport PostAPI from \"@/api/PostAPI\"\r\nconst randomNum = () => Math.floor(Math.random() * (235 - 52 + 1) + 52);\r\nconst randomRGB = () => `rgb(${randomNum()}, ${randomNum()}, ${randomNum()})`;\r\nChart.register(...registerables);\r\n\r\nexport default defineComponent({\r\n  name: 'DashboardView',\r\n  /* eslint-disable */\r\n  components: { DoughnutChart , BarChart, LineChart, PieChart},\r\n  data() {\r\n    return {\r\n        categoryData: [],\r\n        postData: [],\r\n    }\r\n  },\r\n  setup() {\r\n    const testData = {\r\n      labels: ['Paris', 'Nîmes', 'Toulon', 'Perpignan', 'Autre'],\r\n      datasets: [\r\n        {\r\n          label: \"Biểu đồ test\",\r\n          data: [30, 40, 60, 70, 150],\r\n          backgroundColor: ['#77CEFF', '#0079AF', '#123E6B', '#97B0C4', '#A5C8ED'],\r\n        },\r\n      ],\r\n    };\r\n\r\n    return { testData };\r\n  },\r\n  mounted(){\r\n    this.getData();\r\n  },\r\n  methods:{\r\n    async getData(){\r\n        await this.getDataCategory();\r\n        await this.getDataPost();\r\n    },\r\n\r\n    async getDataPost(fromDate, toDate){\r\n        try {            \r\n            if(!fromDate) fromDate = \"2022-01-01\";\r\n            if(!toDate) toDate = '2022-12-31'\r\n            let res = await PostAPI.request(PostAPI.urlName+`/get_data_chart?from_date=${fromDate}&to_date=${toDate}`, 'GET');\r\n            if(res && res.data){\r\n                debugger\r\n                if(res.data.length > 0){\r\n                    let t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12;\r\n                    t1=t2=t3=t4=t5=t6=t7=t8=t9=t10=t11=t12 = 0;\r\n                    res.data.forEach(element => {\r\n                         if(element.posted_date){\r\n                            switch (new Date(element.posted_date).getMonth()+1) {\r\n                                case 1:\r\n                                    t1++;\r\n                                    break;\r\n                                case 2:\r\n                                    t2++;\r\n                                    break;\r\n                                    case 3:\r\n                                    t3++;\r\n                                    break;\r\n                                    case 4:\r\n                                    t4++;\r\n                                    break;\r\n                                    case 5:\r\n                                    t5++;\r\n                                    break;\r\n                                    case 6:\r\n                                    t6++;\r\n                                    break;\r\n                                    case 7:\r\n                                    t7++;\r\n                                    break;\r\n                                    case 8:\r\n                                    t8++;\r\n                                    break;\r\n                                    case 9:\r\n                                    t9++;\r\n                                    break;\r\n                                    case 10:\r\n                                    t10++;\r\n                                    break;\r\n                                    case 11:\r\n                                    t11++;\r\n                                    break;\r\n                                    case 12:\r\n                                    t12++;\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                         }                          \r\n                    });                                        \r\n                    this.postData = {                   \r\n                        labels: [1,2,3,4,5,6,7,8,9,10,11,12], //theo tháng\r\n                        datasets:[{\r\n                            label: 'Dữ liệu bài viết được đăng theo tháng',\r\n                            data: [t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12]                        \r\n                        }                        \r\n                        ],\r\n                        options: {\r\n                            maintainAspectRatio: false,\r\n                            scales: {x: { title: { display: true, text: 'seconds' }}}\r\n                        }\r\n\r\n                    }\r\n                    debugger\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    },\r\n\r\n     async getDataCategory(){\r\n        try {\r\n            let res = await CategoryAPI.request(CategoryAPI.urlName+\"/common_category\", 'GET');\r\n            if(res && res.data){\r\n                this.categoryData = {\r\n                    labels: res.data.map(x=>x.category_name),\r\n                    datasets:[{\r\n                        label: 'Dữ liệu danh mục được sử dụng',\r\n                        data: res.data.map(x=>x.amount),\r\n                        backgroundColor: [...Array(res.data.length)].map(x=>randomRGB())\r\n                    }                        \r\n                    ],\r\n                    // options: {\r\n                    //     maintainAspectRatio: false,\r\n                    // }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n     }\r\n  }\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.dashboard-view{\r\n    .chart-row{\r\n        // height: 200px;\r\n    }\r\n    .chart-card{\r\n        padding: 10px;\r\n         @apply shadow-sm;\r\n        border-radius: 5px;\r\n        background-color: #ffffff;\r\n        border: 2px solid #C7BFB7;    \r\n        margin: 10px;          \r\n        \r\n        .chart-description{\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            font-style: italic;\r\n        }\r\n    }\r\n    \r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
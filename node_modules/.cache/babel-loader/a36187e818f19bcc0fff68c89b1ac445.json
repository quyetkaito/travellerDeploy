{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"m-checkbox\"\n};\nconst _hoisted_2 = [\"checked\", \"name\"];\nconst _hoisted_3 = [\"title\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Checkbox \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    ref: \"mCheckbox\",\n    checked: $props.modelValue,\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.checked)),\n    name: $props.name\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _withDirectives(_createElementVNode(\"div\", {\n    class: \"checkbox-label\",\n    title: $props.labelTextFull,\n    onClick: _cache[1] || (_cache[1] = $event => $options.doCheck())\n  }, _toDisplayString($props.labelText), 9\n  /* TEXT, PROPS */\n  , _hoisted_3), [[_vShow, $props.showLabel]])])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAEOA,KAAK,EAAC;;;;;6DADXC,mCACAC,oBAiBM,KAjBN,cAiBM,CAhBJA,oBAME,OANF,EAME;IALAC,IAAI,EAAC,UAKL;IAJAC,GAAG,EAAC,WAIJ;IAHCC,OAAO,EAAEC,iBAGV;IAFCC,QAAM,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcL,OAAzC,CAAF,CAEP;IADCM,IAAI,EAAEL;EACP,CANF;;EAAA,aAgBI,kBATJJ,oBAQM,KARN,EAQM;IAPJF,KAAK,EAAC,gBAOF;IALHY,KAAK,EAAEN,oBAKJ;IAJHO,OAAK,sCAAEC,kBAAF;EAIF,CARN,mBAOKR,iBAPL,EAOc;EAAA;EAPd,EAOcS,UAPd,GAOc,UALJT,iBAKI,EAEV,CAjBN","names":["class","_createCommentVNode","_createElementVNode","type","ref","checked","$props","onChange","_ctx","$event","target","name","title","onClick","$options","_hoisted_3"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\components\\m-checkbox\\MCheckbox.vue"],"sourcesContent":["<template>\r\n  <!-- Checkbox -->\r\n  <div class=\"m-checkbox\">\r\n    <input\r\n      type=\"checkbox\"\r\n      ref=\"mCheckbox\"\r\n      :checked=\"modelValue\"\r\n      @change=\"$emit('update:modelValue', $event.target.checked)\"\r\n      :name=\"name\"\r\n    />\r\n    <div\r\n      class=\"checkbox-label\"\r\n      v-show=\"showLabel\"\r\n      :title=\"labelTextFull\"\r\n      @click=\"doCheck()\"\r\n    >\r\n    \r\n      {{ labelText }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  emits:[\"update:modelValue\"],\r\n  props: {\r\n    //label của checkbox là gì?\r\n    labelText: {\r\n      type: String,\r\n      default: \"label-checkbox\",\r\n    },\r\n    //label đầy đủ nếu có viết tắt là gì?\r\n    labelTextFull: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    //có label hay không?\r\n    showLabel: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    //value cho checkbox\r\n    modelValue:{\r\n      type:Boolean,\r\n      default:false,\r\n    },\r\n    //name cho checkbox\r\n    name:{\r\n      type:String,\r\n      default:\"\",\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    /**--------------------------------------------\r\n     * Hàm thực hiện thay đổi trạng thái checkbox\r\n     * Author: quyetkaito (07/03/2022)\r\n     ----------------------------------------------*/\r\n    doCheck: function () {\r\n      if (this.$refs.mCheckbox.checked == true) {\r\n        this.$refs.mCheckbox.checked = false;\r\n        this.$refs.mCheckbox.focus();\r\n        this.$emit('update:modelValue', false)\r\n      } else {\r\n        this.$refs.mCheckbox.checked = true;\r\n        this.$refs.mCheckbox.focus();\r\n        this.$emit('update:modelValue', true)\r\n      }\r\n    },\r\n\r\n    /**--------------------------------------------------\r\n     * Hàm thực hiện lấy trạng thái checked của checkbox.\r\n     * Author: quyetkaito (29/03/2022)\r\n    ----------------------------------------------------- */\r\n    getStatus: function () {\r\n      if (this.$refs.mCheckbox.checked == true) return true;\r\n      return false;\r\n    },\r\n\r\n  \r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"/src/style/common/checkbox.css\");\r\n</style>"]},"metadata":{},"sourceType":"module"}
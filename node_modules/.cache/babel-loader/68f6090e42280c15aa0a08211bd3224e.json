{"ast":null,"code":"import PostAPI from \"@/api/PostAPI\";\nimport CommentAPI from \"@/api/CommentAPI\";\nimport 'vue3-carousel/dist/carousel.css';\nimport { Carousel, Slide, Pagination, Navigation } from 'vue3-carousel';\nimport ImageViewFull from \"@/views/post/ImageViewFull.vue\";\nexport default {\n  emits: [\"removeItem\"],\n  components: {\n    /* eslint-disable vue/no-unused-components */\n    Carousel,\n    Slide,\n    Pagination,\n    Navigation,\n    \"image-view-full\": ImageViewFull\n  },\n  props: {\n    post: {\n      type: Object,\n      default: () => {}\n    },\n    listComment: {\n      type: Array,\n      default: () => []\n    },\n    listCategory: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  data() {\n    return {\n      isLiked: false,\n      editMode: 'View',\n      post_temp: this.post ? this.post : {},\n      newComment: \"\",\n      listComment_temp: this.listComment ? this.listComment : [],\n      userID: this.$session.get('UserID'),\n      userAvatar: this.$session.get(\"UserAvatar\"),\n      fullName: this.$session.get('FullName'),\n      listPostImage: this.post.post_image ? JSON.parse(this.post.post_image) : [],\n      //listPostImage: [\"https://picsum.photos/200/300\", \"https://picsum.photos/id/237/200/300\"]        \n      editCommentMode: false,\n      commentContent: '',\n      // vmodel cho chỉnh sửa comment\n      currentComment: {},\n      isExpand: false\n    };\n  },\n\n  methods: {\n    /**\r\n    * Hàm thu gọn nội dung bài viết\r\n    * @created : quyetkaito 06/11/2022\r\n    */\n    collapseContent() {\n      this.isExpand = false;\n    },\n\n    /**\r\n    * Hàm mở rộng nội dung bài viết\r\n    * @created : quyetkaito 06/11/2022\r\n    */\n    expandContent() {\n      this.isExpand = true;\n    },\n\n    /**\r\n     * hàm hủy chỉnh sửa comment\r\n     */\n    cancelEditComment() {\n      this.listComment_temp.unshift(this.currentComment);\n      this.editCommentMode = false;\n    },\n\n    /**\r\n    * Hàm chỉnh sửa comment\r\n    * @created : quyetkaito 28/10/2022\r\n    * @param {Object} comment : comment đang chỉnh sửa\r\n    */\n    editComment(comment) {\n      if (comment) {\n        let me = this; //chuyển thành dạng input\n\n        me.editCommentMode = true;\n        me.commentContent = comment.comment_content;\n        me.$nextTick(() => {\n          me.$refs.inputCommentEdit.focus();\n        });\n        me.currentComment = comment; //bỏ comment đó trong list hiện tại đi\n\n        this.listComment_temp.splice(this.listComment_temp.indexOf(comment), 1);\n      }\n    },\n\n    async updateComment() {\n      let me = this;\n      me.editCommentMode = false;\n      let obj = {\n        comment_id: me.currentComment.comment_id,\n        comment_content: me.commentContent,\n        //nội dung\n        post_id: me.post.post_id,\n        //id bài viết\n        user_id: me.userID,\n        modified_date: me.$commonFunc.setTimeZone(new Date()),\n        full_name: me.fullName,\n        user_avatar_img: me.userAvatar,\n        created_date: me.currentComment.created_date\n      }; //gọi api post comment này     \n\n      try {\n        let res = await CommentAPI.request(CommentAPI.urlName, 'PUT', obj);\n\n        if (res && res.data) {\n          debugger;\n\n          if (res.data.StatusCode == 200) {\n            console.log(\"Bình luận thành công\"); //clear text ở ô bình luận\n\n            this.newComment = \"\"; //push một đối tượng comment vào ô bình luận\n\n            let newObj = Object.assign({\n              comment_id: res.data.Data.comment_id\n            }, obj);\n            this.listComment_temp.unshift(newObj); //callback để lấy thông tin id\n          } else {\n            console.log(\"Bình luận thất bại\");\n            console.log(res.data.DevMsg);\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    /**\r\n     * Like bình luận\r\n     */\n    likeComment() {\n      //đổi text thành màu xanh\n      let me = this; // this.$refs.mMessage.showConfirm(\"hí\");\n    },\n\n    /**\r\n     * Xóa bình luận\r\n     */\n    async deleteComment(comment) {\n      if (comment) {\n        try {\n          let me = this;\n\n          if (confirm(\"Bạn có chắc chắn muốn xóa\")) {\n            let res = await CommentAPI.request(CommentAPI.urlName, 'DELETE', [comment.comment_id]);\n\n            if (res && res.data && res.data.StatusCode == 200) {\n              console.log(\"xóa bình luận thành công\"); //loại bỏ comment khỏi bài viết này                            \n\n              this.listComment_temp.splice(this.listComment_temp.indexOf(comment), 1);\n            }\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n\n    /**\r\n    * Phóng to ảnh khi bấm vào\r\n    * @param {Link} src : link ảnh\r\n    * @created : quyetkaito 23/10/2022\r\n    */\n    zoomImage(src) {\n      //bản chất là mở một postcard full màn hình\n      if (src) {\n        this.$refs.imageViewer.show(src);\n      }\n    },\n\n    /**\r\n    * Binding image source\r\n    * @created : quyetkaito 16/10/2022\r\n    */\n    getSrc(src) {\n      if (src) {\n        return src;\n      } else {\n        return require(\"@/assets/img/default-avatar.jpg\");\n      }\n    },\n\n    getListSrc() {},\n\n    handleTyping() {\n      //thực hiện resize text-area\n      let textarea = this.$refs.inputComment;\n      textarea.style.height = textarea.scrollHeight;\n    },\n\n    handleCancel() {\n      this.editMode = 'View';\n    },\n\n    checkLogin() {\n      if (this.$session.get('UserID')) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    /**\r\n    * Hàm xủ lý khi enter ở ô input bình luận\r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    async enterComment() {\n      let me = this;\n\n      if (!me.checkLogin()) {\n        this.$store.commit('showInfo', {\n          message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"\n        });\n        return;\n      }\n\n      if (me.newComment) {\n        let obj = {\n          comment_content: me.newComment,\n          //nội dung\n          post_id: me.post.post_id,\n          //id bài viết\n          user_id: me.$session.get('UserID'),\n          full_name: me.$session.get('FullName'),\n          user_avatar_img: me.$session.get('UserAvatar')\n        }; //gọi api post comment này     \n\n        try {\n          let res = await CommentAPI.request(CommentAPI.urlName, 'POST', obj);\n\n          if (res && res.data) {\n            if (res.data.StatusCode == 201) {\n              console.log(\"Bình luận thành công\"); //clear text ở ô bình luận\n\n              this.newComment = \"\"; //push một đối tượng comment vào ô bình luận\n\n              let newObj = Object.assign(res.data.Data, obj);\n              this.listComment_temp.unshift(newObj); //callback để lấy thông tin id\n            } else {\n              console.log(\"Bình luận thất bại\");\n              console.log(res.data.DevMsg);\n            }\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n\n    /**\r\n    * Xử lý khi click vào nút bình luận\r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    commentClick() {\n      //show ra danh sách bình luận. lúc này mới gọi api cho chuẩn\n      //focus vào ô viết bình luận\n      this.$refs.inputComment.focus();\n    },\n\n    /**\r\n    * Xử lý chỉnh sửa bài viết\r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    async handleEdit() {\n      let me = this; // this.editMode = 'Edit';\n      // me.$nextTick(()=>{\n      //     this.$refs.postContent.focus();\n      // })            \n      //đổi sang dùng popup, gọi tới post list yêu cầu hiển thị popup\n\n      this.$parent.openPostEdit(this.post, this.listCategory);\n    },\n\n    async handleSave() {\n      let me = this;\n\n      if (me.post_temp) {\n        try {\n          let res = await PostAPI.request(PostAPI.urlName, 'PUT', me.post_temp);\n\n          if (res && res.data) {\n            if (res.data.StatusCode == 200) {\n              console.log(\"Câp nhật thành công\");\n              this.editMode = 'View';\n            } else {\n              console.error(\"Cập nhật thất bại.\", res.data.DevMsg);\n            }\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n\n    /**\r\n    * Hàm xử lý khi bấm nút like\r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    async handleLike() {\n      let me = this;\n      this.isLiked = !this.isLiked;\n\n      if (!this.isLiked) {\n        if (this.$refs.buttonLike) {\n          this.$refs.buttonLike.classList.remove('liked');\n\n          if (this.post_temp.like_count > 0) {\n            this.post_temp.like_count -= 1;\n            await me.handleSave();\n          }\n        }\n      } else {\n        if (this.$refs.buttonLike) {\n          this.$refs.buttonLike.classList.add('liked');\n          this.post_temp.like_count += 1;\n          await me.handleSave();\n        }\n      }\n    },\n\n    /**\r\n    * Hàm thực hiện xóa \r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    async handleDelete() {\n      if (confirm(\"Bạn có chắc chắn muốn xóa bài viết này?\")) {\n        let me = this;\n\n        if (me.post.post_id) {\n          try {\n            let res = await PostAPI.request(PostAPI.urlName + `/${me.post.post_id}`, 'DELETE');\n\n            if (res && res.data) {\n              if (res.data.StatusCode == 200) {\n                console.log(\"Xóa thành công:\", me.post.post_id);\n                this.$parent.loadData();\n                me.$emit('removeItem', me.post);\n              } else {\n                console.error(\"Xóa không thành công:\", me.post.post_id);\n              }\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["PostAPI","CommentAPI","Carousel","Slide","Pagination","Navigation","ImageViewFull","emits","components","props","post","type","Object","default","listComment","Array","listCategory","data","isLiked","editMode","post_temp","newComment","listComment_temp","userID","$session","get","userAvatar","fullName","listPostImage","post_image","JSON","parse","editCommentMode","commentContent","currentComment","isExpand","methods","collapseContent","expandContent","cancelEditComment","unshift","editComment","comment","me","comment_content","$nextTick","$refs","inputCommentEdit","focus","splice","indexOf","updateComment","obj","comment_id","post_id","user_id","modified_date","$commonFunc","setTimeZone","Date","full_name","user_avatar_img","created_date","res","request","urlName","StatusCode","console","log","newObj","assign","Data","DevMsg","error","likeComment","deleteComment","confirm","zoomImage","src","imageViewer","show","getSrc","require","getListSrc","handleTyping","textarea","inputComment","style","height","scrollHeight","handleCancel","checkLogin","enterComment","$store","commit","message","commentClick","handleEdit","$parent","openPostEdit","handleSave","handleLike","buttonLike","classList","remove","like_count","add","handleDelete","loadData","$emit"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"m-card post-card\">\r\n    <div class=\"post__header flex\">\r\n        <div class=\"author-info flex\">\r\n            <div class=\"post-author-image rounded-full\"><img :src=\"getSrc(post.user_avatar_img)\" alt=\"\" class=\"img-author rounded-full\"></div>\r\n            <div>\r\n                <div class=\"post-author\">{{post.author_name}}</div>\r\n                <div class=\"post-date\">{{$commonFunc.formatDateTime(post.posted_date)}}</div> <!--nếu là ngày hôm nay thì hiện giờ, nếu khác thì hiện ngày tháng-->\r\n            </div>\r\n        </div>\r\n        <div class=\"collapse-button flex align-center\" v-if=\"isExpand\" @click=\"collapseContent\">Thu gọn nội dung</div>\r\n        <div class=\"flex align-center\" v-if=\"userID == post.author\">\r\n            <i class=\"fas fa-edit edit_icon mr-1\" @click=\"handleEdit\" v-if=\"editMode!='Edit'\"></i>\r\n            <i class=\"fas fa-trash-alt trash-icon action_icon\" style=\"color: red;\" @click=\"handleDelete\"></i>\r\n            <div class=\"m-icon m-icon-24 m-extension\" title=\"tính năng mở rộng\"></div>            \r\n        </div>\r\n    </div>\r\n    <div class=\"post__content\">\r\n        <div class=\"post_category flex\">            \r\n            <!-- <div class=\"post-category-item\">Tây Bắc</div> -->\r\n            <div class=\"post-category-item\" v-for=\"(category, index) in listCategory\" :key=\"index\">{{category.category_name}}</div>\r\n        </div>\r\n        <div v-if=\"editMode!='Edit'\" class=\"post-content-text\" style=\"white-space: pre-wrap;\" :class=\"{'non-max-height': isExpand}\">{{post.post_content}}</div>\r\n        <div class=\"expand-button\" @click=\"expandContent\" v-if=\"!isExpand && post.post_content.length > 500\">Đọc tiếp</div>\r\n         <div class=\"collapse-button\" v-if=\"isExpand\" @click=\"collapseContent\">Thu gọn</div>\r\n        <div v-if=\"editMode=='Edit'\">\r\n            <textarea ref=\"postContent\" name=\"postContent\" class=\"post-content-editor\" v-model=\"post_temp.post_content\"></textarea>    \r\n        </div>        \r\n    </div>\r\n    <div class=\"m-card-gray-bottom post__image\" v-if=\"listPostImage.length > 0\">\r\n        <Carousel :items-to-show=\"1\">\r\n            <slide v-for=\"image in listPostImage\" :key=\"image\">                                        \r\n                <img :src=\"getSrc(image)\" alt=\"\" class=\"img-slide\" @dblclick=\"zoomImage(image)\" title=\"click đúp để xem ảnh to\">      \r\n            </slide>                  \r\n            <template #addons>\r\n            <navigation v-if=\"listPostImage.length > 1\" />\r\n            <pagination v-if=\"listPostImage.length > 1\" />\r\n            </template>\r\n        </Carousel>\r\n    </div>  \r\n    <div class=\"post__action_counter flex\">\r\n        <div class=\"flex\">\r\n            <div class=\"m-icon-like m-icon-24\"></div>\r\n            <div class=\"reaction-counter\">{{post_temp.like_count >0 ? post_temp.like_count : 'Bày tỏ cảm xúc'}}</div>\r\n        </div>\r\n        <div class=\"flex\">\r\n            <div class=\"comment-counter\" @click=\"commentClick\">{{listComment_temp.length}} bình luận</div>\r\n            <div class=\"share-counter\">2 lượt chia sẻ</div>\r\n        </div>        \r\n    </div>\r\n    <div class=\"post_action\">\r\n        <div class=\"flex\" v-if=\"editMode!='Edit'\">\r\n            <div class=\"button-action button-like w-1/3 p-1 flex align-center\" @click=\"handleLike()\">\r\n                <div class=\"m-like mr-1\" v-if=\"!isLiked\"></div>\r\n                <div class=\"m-liked mr-1\" v-if=\"isLiked\"></div>\r\n                <div ref=\"buttonLike\" class=\"button-like-text\" :class=\"{'liked': isLiked}\">Thích</div>\r\n            </div>\r\n            <div class=\"button-action button-comment w-1/3 p-1 flex align-center\" @click=\"commentClick\">\r\n                <div class=\"m-fb-icon m-comment m-icon-24 mr-1\"></div>\r\n                <div>Bình luận</div>\r\n            </div>\r\n            <div class=\"button-action button-share w-1/3 p-1 flex align-center\">\r\n                <div class=\"m-fb-icon m-share m-icon-24 mr-1\"></div>\r\n                <div>Chia sẻ</div>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"editMode == 'Edit'\">\r\n            <div class=\"flex\">\r\n                <m-button\r\n                    ref=\"buttonSave\"\r\n                    type=\"info\"\r\n                    text=\"Lưu\"\r\n                    class=\"button-save mr-2\"\r\n                    @click=\"handleSave\"\r\n                />\r\n                <m-button\r\n                    ref=\"buttonSave\"\r\n                    type=\"secondary\"\r\n                    text=\"Hủy\"\r\n                    class=\"button-save\"\r\n                    @click=\"handleCancel\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"post__comment\" v-if=\"editMode!='Edit'\">\r\n        <div class=\"comment-write flex align-center\">            \r\n            <input                 \r\n                ref=\"inputComment\" \r\n                v-model=\"newComment\"\r\n                type=\"text\"\r\n                class=\"input-comment\"\r\n                placeholder=\"Viết bình luận...\"\r\n                @keyup.enter=\"enterComment\"\r\n                @keyup=\"handleTyping\"/>\r\n        </div>\r\n        <div class=\"comment-write flex align-center\" v-if=\"editCommentMode\">  \r\n            <div class=\"user-avatar rounded-full mr-2\">\r\n                <img :src=\"getSrc(userAvatar)\" alt=\"\" class=\"comment-avatar rounded-full\">\r\n            </div>         \r\n            <input                 \r\n                ref=\"inputCommentEdit\" \r\n                v-model=\"commentContent\"\r\n                type=\"text\"\r\n                class=\"input-comment\"\r\n                placeholder=\"Viết bình luận...\"\r\n                @keyup.enter=\"updateComment\"\r\n                @keyup=\"handleTyping\"/>\r\n            <div class=\"btn-cancel\" @click=\"cancelEditComment\">Hủy bỏ</div>\r\n        </div>\r\n        <div class=\"comment-list\">\r\n            <div class=\"comment-item flex\" v-for=\"comment in listComment_temp\" v-bind:key=\"comment.comment_id\">\r\n                <div class=\"user-avatar rounded-full\">\r\n                    <img :src=\"getSrc(comment.user_avatar_img)\" alt=\"\" class=\"comment-avatar rounded-full\">\r\n                </div>\r\n                <div>\r\n                    <div class=\"comment-box ml-1\">\r\n                        <div class=\"user-name\">{{comment.full_name? comment.full_name : 'Ẩn danh'}}</div>\r\n                        <div class=\"user-comment\">{{comment.comment_content}}</div>\r\n                    </div>\r\n                    <div class=\"comment-action flex\">\r\n                        <div class=\"btn-like-comment mr-2\" @click=\"likeComment\">Thích</div>\r\n                        <div class=\"btn-reply mr-3\">Phản hồi</div>\r\n                        <div class=\"btn-reply mr-3\" @click=\"editComment(comment)\" v-if=\"userID == comment.user_id\">Chỉnh sửa</div>\r\n                        <div class=\"btn-reply mr-3\" @click=\"deleteComment(comment)\" v-if=\"userID == post.author\">Xóa</div>\r\n                        <!-- <div class=\"comment-time\">{{$commonFunc.formatDateTime(comment.created_date)}}</div> -->\r\n                        <div class=\"comment-time\">{{$commonFunc.formatDateTime(comment.modified_date)}}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"\"></div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n  </div>  \r\n  <m-message ref=\"mMessage\"/>\r\n  <image-view-full ref=\"imageViewer\"/>\r\n</template>\r\n\r\n<script>\r\nimport PostAPI from \"@/api/PostAPI\";\r\nimport CommentAPI from \"@/api/CommentAPI\"\r\nimport 'vue3-carousel/dist/carousel.css'\r\nimport { Carousel, Slide, Pagination, Navigation } from 'vue3-carousel';\r\nimport ImageViewFull from \"@/views/post/ImageViewFull.vue\";\r\nexport default {\r\n    emits:[\r\n        \"removeItem\"\r\n    ],\r\n    components:{\r\n        /* eslint-disable vue/no-unused-components */        \r\n        Carousel,        \r\n        Slide,        \r\n        Pagination,        \r\n        Navigation,\r\n        \"image-view-full\": ImageViewFull,\r\n    },\r\n    props:{\r\n        post:{\r\n            type: Object,\r\n            default: ()=>{}\r\n        },\r\n        listComment:{\r\n            type: Array,\r\n            default: ()=>[]\r\n        },\r\n        listCategory:{\r\n            type: Array,\r\n            default: ()=>[]\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLiked: false,\r\n            editMode: 'View',\r\n            post_temp: this.post ? this.post : {},\r\n            newComment: \"\",\r\n            listComment_temp: this.listComment? this.listComment : [],\r\n            userID: this.$session.get('UserID'),\r\n            userAvatar: this.$session.get(\"UserAvatar\"),\r\n            fullName: this.$session.get('FullName'),\r\n            listPostImage: this.post.post_image? JSON.parse(this.post.post_image) : [],            \r\n            //listPostImage: [\"https://picsum.photos/200/300\", \"https://picsum.photos/id/237/200/300\"]        \r\n            editCommentMode: false,    \r\n            commentContent: '', // vmodel cho chỉnh sửa comment\r\n            currentComment: {},\r\n            isExpand: false,            \r\n        }\r\n    },\r\n    methods:{\r\n        /**\r\n        * Hàm thu gọn nội dung bài viết\r\n        * @created : quyetkaito 06/11/2022\r\n        */\r\n        collapseContent(){\r\n            this.isExpand = false;\r\n        },\r\n\r\n        /**\r\n        * Hàm mở rộng nội dung bài viết\r\n        * @created : quyetkaito 06/11/2022\r\n        */\r\n        expandContent(){\r\n            this.isExpand = true;\r\n        },\r\n\r\n        /**\r\n         * hàm hủy chỉnh sửa comment\r\n         */\r\n        cancelEditComment(){\r\n            this.listComment_temp.unshift(this.currentComment);\r\n            this.editCommentMode = false;\r\n        },\r\n\r\n        /**\r\n        * Hàm chỉnh sửa comment\r\n        * @created : quyetkaito 28/10/2022\r\n        * @param {Object} comment : comment đang chỉnh sửa\r\n        */\r\n        editComment(comment){\r\n            if(comment){\r\n                let me = this;\r\n                //chuyển thành dạng input\r\n                me.editCommentMode = true;\r\n                me.commentContent = comment.comment_content;                \r\n                me.$nextTick(()=>{\r\n                    me.$refs.inputCommentEdit.focus();\r\n                });\r\n                me.currentComment = comment;\r\n                //bỏ comment đó trong list hiện tại đi\r\n                this.listComment_temp.splice(this.listComment_temp.indexOf(comment), 1);\r\n            }\r\n        },\r\n\r\n        async updateComment(){\r\n            let me = this;\r\n            me.editCommentMode = false;\r\n            let obj = {\r\n                comment_id: me.currentComment.comment_id,\r\n                comment_content: me.commentContent, //nội dung\r\n                post_id: me.post.post_id, //id bài viết\r\n                user_id: me.userID,   \r\n                modified_date: me.$commonFunc.setTimeZone(new Date()),  \r\n                full_name: me.fullName,   \r\n                user_avatar_img: me.userAvatar,\r\n                created_date: me.currentComment.created_date,            \r\n            };\r\n            //gọi api post comment này     \r\n            try {\r\n                let res = await CommentAPI.request(CommentAPI.urlName, 'PUT', obj);\r\n                if(res && res.data){\r\n                    debugger\r\n                    if(res.data.StatusCode == 200){\r\n                        console.log(\"Bình luận thành công\");\r\n                        //clear text ở ô bình luận\r\n                        this.newComment = \"\";\r\n                        //push một đối tượng comment vào ô bình luận\r\n                        let newObj = Object.assign({comment_id: res.data.Data.comment_id}, obj); \r\n                        this.listComment_temp.unshift(newObj); //callback để lấy thông tin id\r\n                    }else{\r\n                        console.log(\"Bình luận thất bại\");\r\n                        console.log(res.data.DevMsg);\r\n                    }\r\n                }                    \r\n            } catch (error) {\r\n                console.error(error);\r\n            }       \r\n        },\r\n\r\n        /**\r\n         * Like bình luận\r\n         */\r\n        likeComment(){\r\n            //đổi text thành màu xanh\r\n            let me = this;            \r\n            // this.$refs.mMessage.showConfirm(\"hí\");\r\n        },\r\n\r\n        /**\r\n         * Xóa bình luận\r\n         */\r\n        async deleteComment(comment){\r\n            if(comment){\r\n                try {\r\n                    let me = this;\r\n                    if(confirm(\"Bạn có chắc chắn muốn xóa\")){\r\n                        let res = await CommentAPI.request(CommentAPI.urlName, 'DELETE', [comment.comment_id]);\r\n                        if(res && res.data && res.data.StatusCode == 200){                            \r\n                            console.log(\"xóa bình luận thành công\");\r\n                            //loại bỏ comment khỏi bài viết này                            \r\n                            this.listComment_temp.splice(this.listComment_temp.indexOf(comment), 1);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Phóng to ảnh khi bấm vào\r\n        * @param {Link} src : link ảnh\r\n        * @created : quyetkaito 23/10/2022\r\n        */\r\n        zoomImage(src){\r\n            //bản chất là mở một postcard full màn hình\r\n            if(src){\r\n                this.$refs.imageViewer.show(src);\r\n            }\r\n        },\r\n        /**\r\n        * Binding image source\r\n        * @created : quyetkaito 16/10/2022\r\n        */\r\n        getSrc(src){\r\n            if(src){\r\n                return src;\r\n            }else{\r\n                return require(\"@/assets/img/default-avatar.jpg\");\r\n            }\r\n        },\r\n\r\n        getListSrc(){\r\n\r\n        },\r\n\r\n        handleTyping(){\r\n            //thực hiện resize text-area\r\n            let textarea = this.$refs.inputComment;\r\n            textarea.style.height = textarea.scrollHeight; \r\n        },\r\n        handleCancel(){\r\n            this.editMode = 'View';\r\n        },\r\n\r\n        checkLogin(){\r\n            if(this.$session.get('UserID')){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Hàm xủ lý khi enter ở ô input bình luận\r\n        * @created : quyetkaito 15/10/2022\r\n        */\r\n        async enterComment(){\r\n            let me = this;\r\n            if(!me.checkLogin()){\r\n                this.$store.commit('showInfo', {message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"})\r\n                return;\r\n            }\r\n            if(me.newComment){\r\n                let obj = {\r\n                    comment_content: me.newComment, //nội dung\r\n                    post_id: me.post.post_id, //id bài viết\r\n                    user_id: me.$session.get('UserID'),   \r\n                    full_name: me.$session.get('FullName'),   \r\n                    user_avatar_img: me.$session.get('UserAvatar'),            \r\n                };\r\n                //gọi api post comment này     \r\n                try {\r\n                    let res = await CommentAPI.request(CommentAPI.urlName, 'POST', obj);\r\n                    if(res && res.data){\r\n                        if(res.data.StatusCode == 201){\r\n                            console.log(\"Bình luận thành công\");\r\n                            //clear text ở ô bình luận\r\n                            this.newComment = \"\";\r\n                            //push một đối tượng comment vào ô bình luận\r\n                            let newObj = Object.assign(res.data.Data, obj); \r\n                            this.listComment_temp.unshift(newObj); //callback để lấy thông tin id\r\n                        }else{\r\n                            console.log(\"Bình luận thất bại\");\r\n                            console.log(res.data.DevMsg);\r\n                        }\r\n                    }                    \r\n                } catch (error) {\r\n                    console.error(error);\r\n                }           \r\n            }\r\n        },\r\n\r\n        /**\r\n        * Xử lý khi click vào nút bình luận\r\n        * @created : quyetkaito 15/10/2022\r\n        */\r\n        commentClick(){\r\n            //show ra danh sách bình luận. lúc này mới gọi api cho chuẩn\r\n            //focus vào ô viết bình luận\r\n            this.$refs.inputComment.focus();\r\n        },\r\n\r\n        /**\r\n        * Xử lý chỉnh sửa bài viết\r\n        * @created : quyetkaito 15/10/2022\r\n        */\r\n        async handleEdit(){\r\n            let me =  this;\r\n            // this.editMode = 'Edit';\r\n            // me.$nextTick(()=>{\r\n            //     this.$refs.postContent.focus();\r\n            // })            \r\n            //đổi sang dùng popup, gọi tới post list yêu cầu hiển thị popup\r\n            this.$parent.openPostEdit(this.post, this.listCategory);\r\n        },\r\n\r\n        async handleSave(){\r\n            let me = this;\r\n            if(me.post_temp){\r\n                try {\r\n                    let res = await PostAPI.request(PostAPI.urlName, 'PUT', me.post_temp);\r\n                    if(res && res.data){\r\n                        if(res.data.StatusCode == 200){\r\n                            console.log(\"Câp nhật thành công\");\r\n                            this.editMode = 'View';\r\n                        }else{\r\n                            console.error(\"Cập nhật thất bại.\", res.data.DevMsg);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error)\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Hàm xử lý khi bấm nút like\r\n        * @created : quyetkaito 15/10/2022\r\n        */\r\n        async handleLike(){\r\n            let me = this;\r\n            this.isLiked  = !this.isLiked;\r\n            if(!this.isLiked){\r\n                if(this.$refs.buttonLike){\r\n                    this.$refs.buttonLike.classList.remove('liked'); \r\n                    if(this.post_temp.like_count > 0){\r\n                        this.post_temp.like_count -= 1;\r\n                        await me.handleSave();                   \r\n                    }\r\n                }\r\n            }else{\r\n                if(this.$refs.buttonLike){\r\n                    this.$refs.buttonLike.classList.add('liked');\r\n                    this.post_temp.like_count += 1;                   \r\n                    await me.handleSave();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n        * Hàm thực hiện xóa \r\n        * @created : quyetkaito 15/10/2022\r\n        */\r\n        async handleDelete(){\r\n            if(confirm(\"Bạn có chắc chắn muốn xóa bài viết này?\")){\r\n                let me = this;\r\n                if(me.post.post_id){\r\n                    try {\r\n                        let res = await PostAPI.request(PostAPI.urlName+`/${me.post.post_id}`, 'DELETE');                        \r\n                        if(res && res.data){\r\n                            if(res.data.StatusCode == 200){\r\n                                console.log(\"Xóa thành công:\", me.post.post_id);\r\n                                this.$parent.loadData();\r\n                                me.$emit('removeItem', me.post);\r\n                            }else{\r\n                                console.error(\"Xóa không thành công:\", me.post.post_id);\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.post-card{\r\n    .post__header{\r\n        justify-content: space-between;\r\n        .author-info{\r\n            align-items: center;\r\n        }\r\n        .post-author-image{\r\n            width: 50px;\r\n            height: 50px;    \r\n            border: 2px solid var(--info-color);\r\n            margin-right: 10px;\r\n    \r\n            .img-author{\r\n                object-fit: cover;\r\n                width: 100%;\r\n                height: 100%;    \r\n            }\r\n        }\r\n        .post-date{\r\n            font-size: 12px;\r\n        }\r\n        .collapse-button{\r\n            color: var(--info-color);\r\n            font-style: italic;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .post__content{\r\n        padding: 5px 10px 10px 10px;\r\n        .post-content-editor{\r\n            width: 100%;\r\n            outline: none;\r\n            min-height: 18px;\r\n        }\r\n        .post-content-text{\r\n            max-height: 145px;\r\n            overflow: hidden;\r\n        }\r\n        .expand-button,\r\n        .collapse-button{\r\n            color: var(--info-color);\r\n            font-style: italic;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    .post__action_counter{\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        justify-content: space-between;\r\n        .reaction-counter{\r\n            margin-left: 5px;\r\n        }\r\n        .share-counter{\r\n        \r\n        }\r\n        .share-counter:hover{\r\n            text-decoration: underline;\r\n            cursor: pointer;\r\n        }\r\n        .comment-counter{\r\n            margin-right: 10px;\r\n        }\r\n        .comment-counter:hover{\r\n            text-decoration: underline;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    \r\n    .post_action{\r\n        .button-action{\r\n            border-radius: 8px;\r\n            text-align: center;\r\n            cursor: pointer;\r\n            padding-top: 10px;\r\n            padding-bottom: 10px;\r\n        }\r\n        .button-action:hover{\r\n            background: #F2F2F2;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n.button-like-text.liked{\r\n    color: var(--info-color);\r\n    font-weight: bold;\r\n}\r\n.post_category .post-category-item{\r\n    border-radius: 3px;\r\n    background: #e5e5e5;\r\n    font-size: 11px;\r\n    cursor: pointer;\r\n    padding: 3px 5px 3px 5px;\r\n    margin-right: 2px;\r\n}\r\n.edit_icon{\r\n    width: 24px;\r\n    height: 24px;      \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    color: var(--info-color);\r\n}\r\n.edit_icon:hover{\r\n    background: #e5e5e5;\r\n    color: var(--info-color);\r\n}\r\n.trash-icon{\r\n    width: 24px;\r\n    height: 24px;\r\n    background: #e5e5e5;    \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n}\r\n.trash-icon:hover{\r\n    background: var(--border-color);\r\n}\r\n\r\n.m-extension{\r\n    width: 24px;\r\n    height: 24px;       \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n}\r\n.post_action .button-save{\r\n    width: 100%!important;\r\n}\r\n.post_action .button-save button{\r\n    width: 100%!important;\r\n}\r\n\r\n.post__comment .comment-write{\r\n    padding-top:5px;\r\n    textarea{\r\n        resize: none;\r\n        height: fit-content;     \r\n        max-height: 100px;\r\n        overflow: auto;\r\n    }\r\n    .btn-cancel{\r\n        margin-left: 8px;\r\n        white-space: nowrap;\r\n        cursor: pointer;\r\n    }\r\n}\r\n.input-comment{\r\n    padding-left: 10px;\r\n    outline: none;    \r\n    height: 36px;\r\n    border-radius: 10px;\r\n    background: #F0F2F5;\r\n    font-size: 15px;\r\n    width: 100%;    \r\n}\r\n.input-comment::placeholder{\r\n    font-size: 15px;\r\n}\r\n.comment-item{\r\n    padding: 10px;\r\n}\r\n.comment-write .user-avatar,\r\n.comment-item .user-avatar{\r\n    width: 40px;\r\n    height: 40px; \r\n    min-width: 40px;   \r\n    min-height: 40px;   \r\n    border: 2px solid var(--info-color);  \r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n}\r\n.comment-write .user-avatar .comment-avatar,\r\n.comment-item .user-avatar .comment-avatar{\r\n    width:100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n}\r\n.comment-box{\r\n    background: #F0F2F5;\r\n    border-radius: 10px;    \r\n    padding: 10px;\r\n}\r\n.comment-box .user-name{\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n}\r\n.comment-box .user-name:hover{\r\n    text-decoration: underline;\r\n}\r\n.comment-item .comment-action{\r\n    margin-left: 10px;\r\n    .btn-like-comment{\r\n        font-size: 13px;\r\n        cursor: pointer;\r\n        font-weight: 500;\r\n    }\r\n    .btn-like-comment:hover{\r\n        text-decoration: underline;\r\n    }\r\n    .btn-reply{\r\n        font-size: 13px;\r\n        cursor: pointer;\r\n        font-weight: 500;\r\n    }\r\n    .btn-reply:hover{\r\n        text-decoration: underline;\r\n    }\r\n    .comment-time{\r\n        font-size: 12px;    \r\n        cursor: pointer;\r\n    }\r\n    .comment-time:hover{\r\n        text-decoration: underline;\r\n    }\r\n}\r\n\r\n.non-max-height{\r\n    max-height: unset!important;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
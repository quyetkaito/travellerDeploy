{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n// import vClickOutside from \"click-outside-vue3\";\nimport * as base from \"@/script/base\";\nexport default {\n  component: {},\n  emits: [\"eUpdate\", \"onDelete\", \"eDoubleClick\", \"eClick\", \"eShowFunc\", \"handleHideFunc\", \"eMultiSelect\", \"eMainButtonClick\" //button chính của function click\n  ],\n  //config của thư viện v-click-outside\n  // directives: {\n  //   clickOutside: vClickOutside.directive,\n  // },\n  //danh sách các prop\n  props: {\n    //list data render ra bảng\n    listData: {\n      type: Object,\n      default: null,\n      required: true //bắt buộc có\n\n    },\n    //list các column của bảng\n    columns: {\n      type: Array,\n      //mảng các object cột\n      default: null,\n      required: true //bắt buộc\n\n    },\n    //số bản ghi trên một trang\n    pageSize: {\n      type: [Number, String],\n      default: null\n    },\n    //loading skeleton có show hay không?\n    isShowSkeleton: {\n      type: Boolean,\n      default: false\n    },\n    //cấu hình cột chức năng\n    tableFunction: {\n      type: Object,\n\n      default() {\n        return {\n          mainButtonText: \"Edit\",\n          mainFunction: \"Edit\",\n          isShow: true\n        };\n      }\n\n    },\n    //có cột checkbox hay không?\n    multiSelect: {\n      type: Boolean,\n      default: true\n    },\n    //các hàng có thể kéo thả để thay đổi vị trí không?\n    isDragable: {\n      type: Boolean,\n      default: false\n    },\n    //bảng này có hiện header không?\n    isHasHeader: {\n      type: Boolean,\n      default: true\n    },\n    //footer có show không?\n    showFooter: {\n      type: Boolean,\n      default: false\n    },\n    //icon loading có show không?\n    isShowLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  //danh sách các data\n  data() {\n    return {\n      isCheckAll: false,\n      //nút check all có đang check hay không?\n      checkedRows: [] //số hàng đang được chọn => (mảng các object)\n\n    };\n  },\n\n  mounted() {},\n\n  watch: {\n    /**----------------------------------------------------------\r\n     * nếu checkedRows thay đổi thì cập nhật lại các hàng dc select\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\n    checkedRows() {\n      this.changeSelected();\n    },\n\n    /**--------------------------------------\r\n     * Nếu đang hiện skeleton thì bỏ check tất cả.\r\n     * Author: quyetkaito (22/-3/2022)\r\n     ---------------------------------*/\n    isShowSkeleton() {\n      this.checkedRows = [];\n    }\n\n  },\n  //các hàm\n  methods: {\n    /**\r\n     * Hàm xử lý sự kiện click trong grid\r\n     * @created : quyetkaito 02/10/2022\r\n     * @param {String} action : hành động\r\n     * @param {Object} object : đối tượng đang thao tác\r\n     */\n    buttonClick(action, object) {\n      if (!action) return;\n\n      switch (action) {\n        case \"View\":\n          this.$emit(\"gridAction\", {\n            object: object,\n            action: 'View'\n          });\n          break;\n\n        case \"Edit\":\n          this.$emit(\"gridAction\", {\n            object: object,\n            action: 'Edit'\n          });\n          break;\n\n        case \"Delete\":\n          this.$emit(\"gridAction\", {\n            object: object,\n            action: 'Delete'\n          });\n          break;\n      }\n    },\n\n    /**\r\n     * Trả về source của image bind động\r\n     * @param src : tên file/ link ảnh\r\n     * @param ext : đuôi file\r\n     * @param type : loại source\r\n     */\n    getImageSrc(src, format, type = \"local\") {\n      try {\n        src = src.toString(); //chuyển về string cho chắc\n\n        if (type == \"link\") {\n          //nếu type là link thì trả về link luôn\n          return src;\n        }\n\n        switch (format) {\n          case \"webp\":\n            return require(`@/assets/${src}.webp`);\n          //phải viết sẵn như này mới ăn, viết kiểu + string thì chết\n\n          case \"png\":\n            return require(`@/assets/${src}.png`);\n\n          default:\n            return null;\n        }\n      } catch (error) {\n        console.log(error);\n        return null;\n      }\n    },\n\n    /**------------------------------------------\r\n    * Xử lý khi button chính trong cột chức năng được click\r\n    * @created : quyetkaito (26/06/2022)\r\n    * @param {Object} object - hàng chứa thông tin đối tượng được click\r\n    ---------------------------------------------*/\n    mainButtonClick(object) {\n      if (object) {\n        this.$emit(\"eMainButtonClick\", object);\n      }\n    },\n\n    /**------------------------------------------\r\n    * Xử lý khi double click vào hàng\r\n    * @param {Object} object : hàng chứa thông tin đối tượng\r\n    * @created : quyetkaito (26/06/2022)\r\n    --------------------------------------------*/\n    handleDoubleClick(object) {\n      if (object) {\n        this.$emit(\"eDoubleClick\", object);\n      }\n    },\n\n    /**---------------------------------------------\r\n     * Thực hiện bỏ dấu checkAll sau khi xóa nhiều.\r\n     * Author: quyetkaito (18/03/2022)\r\n     ---------------------------------*/\n    unCheckAll() {\n      if (this.$refs.selectAll.checked == true) this.$refs.selectAll.checked = false;\n    },\n\n    /**-----------------------------------\r\n     * Hàm show data tương ứng với các cột của header.\r\n     * @param {String} object - object hàng hiện tại.\r\n     * @param {String} column - cấu hình của cột hiện tại\r\n     * Author: quyetkaito (16/03/2022)\r\n     ------------------------------------*/\n    showData(object, column) {\n      //chuyển column key sang snake_case (nếu cần)\n      if (column.key && object) {\n        let objTemp = JSON.parse(JSON.stringify(object));\n        let field = base.camelToUnderscore(column.key); //nếu dữ liệu dạng số\n\n        if (column.dataType && column.dataType == \"number\") {\n          if (objTemp[field]) {\n            return base.formatCurrency(objTemp[field].toString());\n          }\n        } //nếu dữ liệu là ngày tháng\n\n\n        if (column.dataType && column.dataType == \"date\") {\n          return !base.formatDate(objTemp[field], this.$enum.DateFormat).includes(\"NaN\") ? base.formatDate(objTemp[field], this.$enum.DateFormat) : \"\";\n        } //nếu không => trả về data với field tương ứng từ header(dạng text bình thường)\n\n\n        return objTemp[field] ? objTemp[field] : \"\";\n      }\n\n      return \"\";\n    },\n\n    /**----------------------------------------------\r\n     * Hàm emit tới cha danh sách các hàng được chọn.\r\n     * Author: quyetkaito (15/03/2022)\r\n    ------------------------------------*/\n    changeSelected() {\n      // console.log(this.checkedRows);\n      //emit tới cha danh sách đối tượng\n      this.$emit(\"eMultiSelect\", this.checkedRows);\n    },\n\n    /**-------------------------------------------------\r\n     * Hàm xử lý khi click vào nút [Sửa] trên bảng.\r\n     * @param {Object} obj - đối tượng thao tác\r\n     * @param {Number} formMode - trạng thái của form\r\n     * Author: quyetkaito (27/02/2022)\r\n     -----------------------------------------------*/\n    handleEdit(obj) {\n      //emit tới cha nhận sự kiện update\n      this.$emit(\"eUpdate\", {\n        data: obj,\n        formMode: 2\n      }); //emit tới cha đóng function\n\n      this.$emit(\"handleHideFunc\");\n    },\n\n    /**------------------------------------------\r\n    *Xử lý khi 1 hàng được click\r\n    *Author: quyetkaito (13/04/2022)\r\n    --------------------------------------------*/\n    handleClick(object, index) {\n      try {\n        //emit tới cha đối tượng được click\n        this.$emit(\"eClick\", {\n          object,\n          index\n        }); //xóa background cho tất cả các hàng khác, giữ lại hàng đang được click\n\n        this.$refs.mTable.querySelectorAll(`tbody tr`).forEach(e => {\n          e.classList.remove(\"selected\");\n        });\n        this.$refs.mTable.querySelector(`tbody tr:nth-child(${index + 1})`).classList.add(\"selected\");\n      } catch (error) {\n        //log ra lỗi\n        console.error(error);\n      }\n    },\n\n    /**------------------------------------------------\r\n         * Hàm xử lý khi click vào nút [Xóa] trên bảng.\r\n         * @param {Object} obj - đối tượng cần xóa.\r\n         * Author: quyetkaito (27/02/2022)\r\n         ----------------------------------------------*/\n    handleDelete(obj) {\n      this.$emit(\"onDelete\", obj);\n    },\n\n    /**------------------------------------------------------\r\n     * Hàm thực hiện lấy vị trí click để hiện dropdown content.\r\n     * @param {Object} object - đối tượng ứng với hàng.\r\n     * @param {Event} event\r\n     * @param {Number} index - số thứ tự của hàng được chọn\r\n     * Author: quyetkaito (07/03/2022)\r\n     -----------------------------------------------------------*/\n    showOptions(event, object, index) {\n      // console.log(index);\n      // console.log(this.$refs.dropdownArrow[index]);\n      //lấy ra arrow tại hàng đó\n      let arrow = this.$refs.dropdownArrow[index]; //lấy ra vị trí của arrow\n\n      let arrowPosition = arrow.getBoundingClientRect(); //emit tới cha show dropdowncontent hiện tại\n\n      this.$emit(\"eShowFunc\", {\n        object,\n        arrowPosition\n      });\n    },\n\n    /**------------------------------------------------\r\n     * Xử lý đóng table Function khi click ra ngoài bảng\r\n     * Author: quyetkaito (13/03/2022)\r\n    -------------------------------------*/\n    hideOptions() {\n      //emit tới cha ẩn dropdowncontent hiện tại\n      this.$emit(\"handleHideFunc\");\n    },\n\n    /**------------------------------------------\r\n    *CSS cho những hàng đang được chọn\r\n    *@param {Object} selectedRow - hàng đang chọn.\r\n    selectedRow, value\r\n    *Author: quyetkaito (15/04/2022)\r\n    --------------------------------------------*/\n    addSelectedRow(index) {\n      if (this.listData.length > 0) {\n        let allRow = this.$el.querySelectorAll(`tbody tr`);\n        let thisRow = this.$el.querySelector(`tbody tr:nth-child(${index + 1})`);\n\n        if (allRow) {\n          //xóa background cho tất cả các hàng khác, giữ lại hàng đang được click\n          allRow.forEach(e => {\n            e.classList.remove(\"selected\");\n          });\n          if (thisRow) thisRow.classList.add(\"selected\");\n        }\n      }\n    },\n\n    /**------------------------------------------\r\n    *Hàm lấy thông tin 1 hàng của table.\r\n    *@param {Number} index số thứ tự hàng, bắt đầu từ 0\r\n    *Author: quyetkaito (01/05/2022)\r\n    --------------------------------------------*/\n    getRow(index) {\n      return this.listData[index];\n    }\n\n  },\n\n  /**------------------------------------------\r\n  *Tính toán data trong grid.\r\n  *Author: quyetkaito (09/04/2022)\r\n  --------------------------------------------*/\n  computed: {\n    /**-------------------------------------\r\n     * Thực hiện chọn tất cả/ bỏ chọn tất cả\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\n    selectAll: {\n      get: function () {\n        //trả về true nếu listData = số hàng được check, false ngược lại\n        return this.listData ? this.checkedRows.length == this.listData.length && this.listData.length != 0 : false;\n      },\n      //select All\n      set: function (value) {\n        var selected = [];\n\n        try {\n          if (value) {\n            console.log(value); //tạo danh sách các đối tượng được chọn\n\n            this.listData.forEach(function (data) {\n              selected.push(data);\n            });\n          }\n\n          this.checkedRows = selected;\n        } catch (error) {\n          this.checkedRows = selected;\n          console.error(error);\n        }\n      }\n    },\n\n    /**------------------------------\r\n     * Tính toán số lượng các cột skeleton.\r\n     * Author: quyetkaito (27/03/2022)\r\n     --------------------------------*/\n    columnSkeleton() {\n      if (this.multiSelect) {\n        return this.columns.length + 2;\n      } else {\n        return this.columns.length + 1;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["base","component","emits","props","listData","type","Object","default","required","columns","Array","pageSize","Number","String","isShowSkeleton","Boolean","tableFunction","mainButtonText","mainFunction","isShow","multiSelect","isDragable","isHasHeader","showFooter","isShowLoading","data","isCheckAll","checkedRows","mounted","watch","changeSelected","methods","buttonClick","action","object","$emit","getImageSrc","src","format","toString","require","error","console","log","mainButtonClick","handleDoubleClick","unCheckAll","$refs","selectAll","checked","showData","column","key","objTemp","JSON","parse","stringify","field","camelToUnderscore","dataType","formatCurrency","formatDate","$enum","DateFormat","includes","handleEdit","obj","formMode","handleClick","index","mTable","querySelectorAll","forEach","e","classList","remove","querySelector","add","handleDelete","showOptions","event","arrow","dropdownArrow","arrowPosition","getBoundingClientRect","hideOptions","addSelectedRow","length","allRow","$el","thisRow","getRow","computed","get","set","value","selected","push","columnSkeleton"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\components\\m-grid\\MGrid.vue"],"sourcesContent":["<template>\r\n  <table ref=\"mTable\" class=\"m-table\">\r\n    <!-- Table Header -->\r\n    <thead v-if=\"isHasHeader\">\r\n      <tr>\r\n        <th v-if=\"isDragable\" class=\"w-50\"></th>\r\n        <th v-if=\"multiSelect\">\r\n          <div class=\"m-checkbox\">\r\n            <input type=\"checkbox\" v-model=\"selectAll\" ref=\"selectAll\" />\r\n          </div>\r\n        </th>\r\n        <!-- Lấy tên các header để render ra -->\r\n        <th\r\n          v-for=\"(header, index) in columns\"\r\n          :key=\"index\"\r\n          :style=\"`width:${header.width}px!important;min-width:${header.width}px!important;`\"\r\n        >\r\n          <div\r\n            :title=\"header.titleFull\"\r\n            :style=\"`justify-content: ${header.titleAlign}`\"\r\n            v-if=\"header.visible != false\"\r\n          >\r\n            {{ header.title }}\r\n          </div>\r\n        </th>\r\n        <th v-if=\"tableFunction.isShow\">\r\n          <div class=\"justify-end\">chức năng</div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <!-- Table Body -->\r\n    <tbody v-if=\"listData.length !== 0\">\r\n      <tr\r\n        v-for=\"(object, index) in listData\"\r\n        :key=\"index\"\r\n        @dblclick=\"handleDoubleClick(object)\"\r\n        @click=\"handleClick(object, index)\"\r\n      >\r\n        <td v-if=\"isDragable\" class=\"w-50\">\r\n          <div class=\"m-icon m-icon-24 m-drag-grid\"></div>\r\n        </td>\r\n        <td v-if=\"multiSelect\" class=\"w-50\">\r\n          <div class=\"m-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              v-model=\"checkedRows\"\r\n              :value=\"object\"\r\n              @change=\"handleCheckboxChange\"\r\n            />\r\n          </div>\r\n        </td>\r\n        <td\r\n          v-for=\"(column, idx) in columns\"\r\n          :key=\"idx\"\r\n          :style=\"`width:${column.width}px!important;min-width:${column.width}px!important;max-width:300px!important;`\"\r\n        >\r\n          <div\r\n            :style=\"`justify-content: ${column.titleAlign}`\"\r\n            v-if=\"column.visible != false && column.dataType != 'image'\"\r\n          >\r\n            <!-- {{ column.width }} -->\r\n            {{ showData(object, column) }}\r\n          </div>\r\n          <div\r\n            :style=\"`justify-content: ${column.titleAlign}`\"\r\n            v-if=\"column.visible != false && column.dataType == 'image'\"\r\n          >\r\n            <img\r\n              :src=\"getImageSrc(object.src, object.format, object.type)\"\r\n              :alt=\"object.imgAlt\"\r\n              :width=\"object.imgWidth ? object.imgWidth : 50\"\r\n              :height=\"object.imgHeight ? object.imgHeight : 50\"\r\n            />\r\n          </div>\r\n        </td>\r\n        <td v-if=\"tableFunction.isShow\">\r\n          <!-- table function -->\r\n          <!-- <div class=\"m-table-tool flex align-y-center justify-end\">\r\n            <div class=\"m-table-tool__text\" @click=\"mainButtonClick(object)\">\r\n              <button class=\"tool-btn\">{{ tableFunction.mainButtonText }}</button>\r\n            </div>\r\n            <div ref=\"dropdownArrow\" class=\"m-table-tool__icon\">\r\n              <div\r\n                class=\"line flex align-center\"\r\n                @click=\"showOptions($event, object, index)\"\r\n                @doubleClick=\"handleEdit(object)\"\r\n              >\r\n                <div class=\"m-icon m-icon-16 m-arrow-up--blue\"></div>\r\n              </div></div>\r\n          </div> -->\r\n          <!-- hết table function -->\r\n          <!-- chức năng chuyển sang dạng nút -->\r\n          <div class=\"justify-end\">\r\n            <div\r\n              :title=\"$t('View')\"\r\n              class=\"m-icon m-icon-24 m-view view-function\"\r\n              @click=\"buttonClick('View', object)\"\r\n            ></div>\r\n            <div\r\n              :title=\"$t('Edit')\"\r\n              class=\"m-icon m-icon-24 m-edit view-function\"\r\n              @click=\"buttonClick('Edit', object)\"\r\n            ></div>\r\n            <div\r\n              :title=\"$t('Delete')\"\r\n              class=\"m-icon m-icon-16 m-delete view-function\"\r\n              @click=\"buttonClick('Delete', object)\"\r\n            ></div>\r\n            <!-- <div class=\"m-icon m-icon-16 m-delete\"></div>s -->\r\n          </div>\r\n          <!-- hết chức năng  -->\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    <!-- Table body skeleton -->\r\n    <tbody v-if=\"isShowSkeleton && listData.length == 0\" class=\"empty\">\r\n      <tr v-for=\"i in pageSize\" v-bind:key=\"i\">\r\n        <td v-for=\"col in columnSkeleton\" :key=\"col\"><div></div></td>\r\n      </tr>\r\n    </tbody>\r\n    <!-- Ảnh không có dữ liệu -->\r\n    <tbody v-if=\"!isShowSkeleton && listData.length == 0\" class=\"empty\">\r\n      Không có dữ liệu\r\n    </tbody>\r\n    <!-- Table Footer -->\r\n    <tfoot v-if=\"showFooter && listData.length !== 0\" class=\"m-table-footer\">\r\n      <tr>\r\n        <th v-if=\"isDragable\" class=\"w-50\"></th>\r\n        <th v-if=\"multiSelect\" class=\"w-50\"></th>\r\n        <th\r\n          v-for=\"(column, index) in columns\"\r\n          :key=\"index\"\r\n          :style=\"`width:${column.width}px!important;min-width:${column.width}px!important;`\"\r\n        >\r\n          <div v-if=\"index == 0\" class=\"align-center\">Tổng</div>\r\n          <div :class=\"column.align\" v-if=\"index != 0\">\r\n            {{ column.total_amount }}\r\n          </div>\r\n        </th>\r\n        <th v-if=\"isHasFunctionColumn\"></th>\r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n// import vClickOutside from \"click-outside-vue3\";\r\nimport * as base from \"@/script/base\";\r\n\r\nexport default {\r\n  component: {},\r\n  emits: [\r\n    \"eUpdate\",\r\n    \"onDelete\",\r\n    \"eDoubleClick\",\r\n    \"eClick\",\r\n    \"eShowFunc\",\r\n    \"handleHideFunc\",\r\n    \"eMultiSelect\",\r\n    \"eMainButtonClick\", //button chính của function click\r\n  ],\r\n  //config của thư viện v-click-outside\r\n  // directives: {\r\n  //   clickOutside: vClickOutside.directive,\r\n  // },\r\n\r\n  //danh sách các prop\r\n  props: {\r\n    //list data render ra bảng\r\n    listData: {\r\n      type: Object,\r\n      default: null,\r\n      required: true, //bắt buộc có\r\n    },\r\n    //list các column của bảng\r\n    columns: {\r\n      type: Array, //mảng các object cột\r\n      default: null,\r\n      required: true, //bắt buộc\r\n    },\r\n    //số bản ghi trên một trang\r\n    pageSize: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n    //loading skeleton có show hay không?\r\n    isShowSkeleton: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //cấu hình cột chức năng\r\n    tableFunction: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          mainButtonText: \"Edit\",\r\n          mainFunction: \"Edit\",\r\n          isShow: true,\r\n        };\r\n      },\r\n    },\r\n    //có cột checkbox hay không?\r\n    multiSelect: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    //các hàng có thể kéo thả để thay đổi vị trí không?\r\n    isDragable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //bảng này có hiện header không?\r\n    isHasHeader: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    //footer có show không?\r\n    showFooter: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    //icon loading có show không?\r\n    isShowLoading: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  //danh sách các data\r\n  data() {\r\n    return {\r\n      isCheckAll: false, //nút check all có đang check hay không?\r\n      checkedRows: [], //số hàng đang được chọn => (mảng các object)\r\n    };\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n    /**----------------------------------------------------------\r\n     * nếu checkedRows thay đổi thì cập nhật lại các hàng dc select\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\r\n    checkedRows() {\r\n      this.changeSelected();\r\n    },\r\n\r\n    /**--------------------------------------\r\n     * Nếu đang hiện skeleton thì bỏ check tất cả.\r\n     * Author: quyetkaito (22/-3/2022)\r\n     ---------------------------------*/\r\n    isShowSkeleton() {\r\n      this.checkedRows = [];\r\n    },\r\n  },\r\n\r\n  //các hàm\r\n  methods: {\r\n    /**\r\n     * Hàm xử lý sự kiện click trong grid\r\n     * @created : quyetkaito 02/10/2022\r\n     * @param {String} action : hành động\r\n     * @param {Object} object : đối tượng đang thao tác\r\n     */\r\n    buttonClick(action, object) {\r\n      if (!action) return;\r\n      switch (action) {\r\n        case \"View\":\r\n          this.$emit(\"gridAction\", {object: object, action: 'View'});\r\n          break;\r\n        case \"Edit\":\r\n          this.$emit(\"gridAction\", {object: object, action: 'Edit'});\r\n          break;\r\n        case \"Delete\":\r\n          this.$emit(\"gridAction\", {object: object, action: 'Delete'});\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Trả về source của image bind động\r\n     * @param src : tên file/ link ảnh\r\n     * @param ext : đuôi file\r\n     * @param type : loại source\r\n     */\r\n    getImageSrc(src, format, type = \"local\") {\r\n      try {\r\n        src = src.toString(); //chuyển về string cho chắc\r\n        if (type == \"link\") {\r\n          //nếu type là link thì trả về link luôn\r\n          return src;\r\n        }\r\n        switch (format) {\r\n          case \"webp\":\r\n            return require(`@/assets/${src}.webp`); //phải viết sẵn như này mới ăn, viết kiểu + string thì chết\r\n          case \"png\":\r\n            return require(`@/assets/${src}.png`);\r\n\r\n          default:\r\n            return null;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**------------------------------------------\r\n    * Xử lý khi button chính trong cột chức năng được click\r\n    * @created : quyetkaito (26/06/2022)\r\n    * @param {Object} object - hàng chứa thông tin đối tượng được click\r\n    ---------------------------------------------*/\r\n    mainButtonClick(object) {\r\n      if (object) {\r\n        this.$emit(\"eMainButtonClick\", object);\r\n      }\r\n    },\r\n\r\n    /**------------------------------------------\r\n    * Xử lý khi double click vào hàng\r\n    * @param {Object} object : hàng chứa thông tin đối tượng\r\n    * @created : quyetkaito (26/06/2022)\r\n    --------------------------------------------*/\r\n    handleDoubleClick(object) {\r\n      if (object) {\r\n        this.$emit(\"eDoubleClick\", object);\r\n      }\r\n    },\r\n\r\n    /**---------------------------------------------\r\n     * Thực hiện bỏ dấu checkAll sau khi xóa nhiều.\r\n     * Author: quyetkaito (18/03/2022)\r\n     ---------------------------------*/\r\n    unCheckAll() {\r\n      if (this.$refs.selectAll.checked == true)\r\n        this.$refs.selectAll.checked = false;\r\n    },\r\n\r\n    /**-----------------------------------\r\n     * Hàm show data tương ứng với các cột của header.\r\n     * @param {String} object - object hàng hiện tại.\r\n     * @param {String} column - cấu hình của cột hiện tại\r\n     * Author: quyetkaito (16/03/2022)\r\n     ------------------------------------*/\r\n    showData(object, column) {\r\n      //chuyển column key sang snake_case (nếu cần)\r\n      if (column.key && object) {\r\n        let objTemp = JSON.parse(JSON.stringify(object));\r\n        let field = base.camelToUnderscore(column.key);\r\n        //nếu dữ liệu dạng số\r\n        if (column.dataType && column.dataType == \"number\") {\r\n          if (objTemp[field]) {\r\n            return base.formatCurrency(objTemp[field].toString());\r\n          }\r\n        }\r\n        //nếu dữ liệu là ngày tháng\r\n        if (column.dataType && column.dataType == \"date\") {\r\n          return !base\r\n            .formatDate(objTemp[field], this.$enum.DateFormat)\r\n            .includes(\"NaN\")\r\n            ? base.formatDate(objTemp[field], this.$enum.DateFormat)\r\n            : \"\";\r\n        }\r\n        //nếu không => trả về data với field tương ứng từ header(dạng text bình thường)\r\n        return objTemp[field] ? objTemp[field] : \"\";\r\n      }\r\n      return \"\";\r\n    },\r\n\r\n    /**----------------------------------------------\r\n     * Hàm emit tới cha danh sách các hàng được chọn.\r\n     * Author: quyetkaito (15/03/2022)\r\n    ------------------------------------*/\r\n    changeSelected() {\r\n      // console.log(this.checkedRows);\r\n      //emit tới cha danh sách đối tượng\r\n      this.$emit(\"eMultiSelect\", this.checkedRows);\r\n    },\r\n\r\n    /**-------------------------------------------------\r\n     * Hàm xử lý khi click vào nút [Sửa] trên bảng.\r\n     * @param {Object} obj - đối tượng thao tác\r\n     * @param {Number} formMode - trạng thái của form\r\n     * Author: quyetkaito (27/02/2022)\r\n     -----------------------------------------------*/\r\n    handleEdit(obj) {\r\n      //emit tới cha nhận sự kiện update\r\n      this.$emit(\"eUpdate\", { data: obj, formMode: 2 });\r\n      //emit tới cha đóng function\r\n      this.$emit(\"handleHideFunc\");\r\n    },\r\n\r\n    /**------------------------------------------\r\n    *Xử lý khi 1 hàng được click\r\n    *Author: quyetkaito (13/04/2022)\r\n    --------------------------------------------*/\r\n    handleClick(object, index) {\r\n      try {\r\n        //emit tới cha đối tượng được click\r\n        this.$emit(\"eClick\", { object, index });\r\n        //xóa background cho tất cả các hàng khác, giữ lại hàng đang được click\r\n        this.$refs.mTable.querySelectorAll(`tbody tr`).forEach((e) => {\r\n          e.classList.remove(\"selected\");\r\n        });\r\n        this.$refs.mTable\r\n          .querySelector(`tbody tr:nth-child(${index + 1})`)\r\n          .classList.add(\"selected\");\r\n      } catch (error) {\r\n        //log ra lỗi\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    /**------------------------------------------------\r\n         * Hàm xử lý khi click vào nút [Xóa] trên bảng.\r\n         * @param {Object} obj - đối tượng cần xóa.\r\n         * Author: quyetkaito (27/02/2022)\r\n         ----------------------------------------------*/\r\n    handleDelete(obj) {\r\n      this.$emit(\"onDelete\", obj);\r\n    },\r\n\r\n    /**------------------------------------------------------\r\n     * Hàm thực hiện lấy vị trí click để hiện dropdown content.\r\n     * @param {Object} object - đối tượng ứng với hàng.\r\n     * @param {Event} event\r\n     * @param {Number} index - số thứ tự của hàng được chọn\r\n     * Author: quyetkaito (07/03/2022)\r\n     -----------------------------------------------------------*/\r\n    showOptions(event, object, index) {\r\n      // console.log(index);\r\n      // console.log(this.$refs.dropdownArrow[index]);\r\n      //lấy ra arrow tại hàng đó\r\n      let arrow = this.$refs.dropdownArrow[index];\r\n      //lấy ra vị trí của arrow\r\n      let arrowPosition = arrow.getBoundingClientRect();\r\n\r\n      //emit tới cha show dropdowncontent hiện tại\r\n      this.$emit(\"eShowFunc\", { object, arrowPosition });\r\n    },\r\n\r\n    /**------------------------------------------------\r\n     * Xử lý đóng table Function khi click ra ngoài bảng\r\n     * Author: quyetkaito (13/03/2022)\r\n    -------------------------------------*/\r\n    hideOptions() {\r\n      //emit tới cha ẩn dropdowncontent hiện tại\r\n      this.$emit(\"handleHideFunc\");\r\n    },\r\n\r\n    /**------------------------------------------\r\n    *CSS cho những hàng đang được chọn\r\n    *@param {Object} selectedRow - hàng đang chọn.\r\n    selectedRow, value\r\n    *Author: quyetkaito (15/04/2022)\r\n    --------------------------------------------*/\r\n    addSelectedRow(index) {\r\n      if (this.listData.length > 0) {\r\n        let allRow = this.$el.querySelectorAll(`tbody tr`);\r\n        let thisRow = this.$el.querySelector(\r\n          `tbody tr:nth-child(${index + 1})`\r\n        );\r\n        if (allRow) {\r\n          //xóa background cho tất cả các hàng khác, giữ lại hàng đang được click\r\n          allRow.forEach((e) => {\r\n            e.classList.remove(\"selected\");\r\n          });\r\n          if (thisRow) thisRow.classList.add(\"selected\");\r\n        }\r\n      }\r\n    },\r\n\r\n    /**------------------------------------------\r\n    *Hàm lấy thông tin 1 hàng của table.\r\n    *@param {Number} index số thứ tự hàng, bắt đầu từ 0\r\n    *Author: quyetkaito (01/05/2022)\r\n    --------------------------------------------*/\r\n    getRow(index) {\r\n      return this.listData[index];\r\n    },\r\n  },\r\n\r\n  /**------------------------------------------\r\n  *Tính toán data trong grid.\r\n  *Author: quyetkaito (09/04/2022)\r\n  --------------------------------------------*/\r\n  computed: {\r\n    /**-------------------------------------\r\n     * Thực hiện chọn tất cả/ bỏ chọn tất cả\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\r\n    selectAll: {\r\n      get: function () {\r\n        //trả về true nếu listData = số hàng được check, false ngược lại\r\n        return this.listData\r\n          ? this.checkedRows.length == this.listData.length &&\r\n              this.listData.length != 0\r\n          : false;\r\n      },\r\n\r\n      //select All\r\n      set: function (value) {\r\n        var selected = [];\r\n        try {\r\n          if (value) {\r\n            console.log(value);\r\n            //tạo danh sách các đối tượng được chọn\r\n            this.listData.forEach(function (data) {\r\n              selected.push(data);\r\n            });\r\n          }\r\n          this.checkedRows = selected;\r\n        } catch (error) {\r\n          this.checkedRows = selected;\r\n          console.error(error);\r\n        }\r\n      },\r\n    },\r\n\r\n    /**------------------------------\r\n     * Tính toán số lượng các cột skeleton.\r\n     * Author: quyetkaito (27/03/2022)\r\n     --------------------------------*/\r\n    columnSkeleton() {\r\n      if (this.multiSelect) {\r\n        return this.columns.length + 2;\r\n      } else {\r\n        return this.columns.length + 1;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"/src/style/common/table.css\");\r\n.tool-btn {\r\n  white-space: nowrap;\r\n  font-weight: 600 !important;\r\n}\r\n.view-function {\r\n  margin-right: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
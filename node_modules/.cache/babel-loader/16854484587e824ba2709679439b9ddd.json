{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"name\", \"id\", \"checked\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkmark\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"m-radio-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Radio Button \"), _createElementVNode(\"label\", {\n    for: $props.idForInput,\n    class: \"m-radio-container align-center\"\n  }, [_createElementVNode(\"input\", {\n    type: \"radio\",\n    name: $props.name,\n    id: $props.idForInput,\n    checked: $props.modelValue == $props.value || $options.checkedComputed,\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $props.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _hoisted_3, _createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.label), 1\n  /* TEXT */\n  )], 8\n  /* PROPS */\n  , _hoisted_1)], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gCAWIA,oBAA+B,MAA/B,EAA+B;EAAzBC,KAAK,EAAC;AAAmB,CAA/B,EAAuB,IAAvB,EAAuB;AAAA;AAAvB;;;EACMA,KAAK,EAAC;;;6DAXdC,uCACAF,oBAWQ,OAXR,EAWQ;IAXAG,GAAG,EAAEC,iBAWL;IAXiBH,KAAK,EAAC;EAWvB,CAXR,GACED,oBAME,OANF,EAME;IALAK,IAAI,EAAC,OAKL;IAJCC,IAAI,EAAEF,WAIP;IAHCG,EAAE,EAAEH,iBAGL;IAFCI,OAAO,EAAEJ,qBAAcA,YAAd,IAAuBK,wBAEjC;IADCC,QAAM,sCAAEC,WAAK,mBAAL,EAA2BP,YAA3B,CAAF;EACP,CANF;;EAAA,eAQAQ,YACAZ,oBAA8C,MAA9C,cAA8Ca,iBAAfT,YAAe,CAA9C,EAAoC;EAAA;EAApC,EAVF;;EAAA","names":["_createElementVNode","class","_createCommentVNode","for","$props","type","name","id","checked","$options","onChange","_ctx","_hoisted_3","_toDisplayString"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\components\\m-radio\\MRadio.vue"],"sourcesContent":["<template>\r\n  <!-- Radio Button -->\r\n  <label :for=\"idForInput\" class=\"m-radio-container align-center\">\r\n    <input\r\n      type=\"radio\"\r\n      :name=\"name\"\r\n      :id=\"idForInput\"\r\n      :checked=\"modelValue == value || checkedComputed\"\r\n      @change=\"$emit('update:modelValue', value)\"\r\n    />\r\n\r\n    <span class=\"checkmark\"></span>\r\n    <span class=\"m-radio-label\">{{ label }}</span>\r\n  </label>\r\n</template>\r\n<script>\r\nexport default {\r\n  emits: [\"update:modelValue\"],\r\n  props: {\r\n    //label cho radio button\r\n    label: {\r\n      type: String,\r\n      default: \"label\",\r\n    },\r\n    idForInput: String,\r\n    //name dùng để group 1 nhóm radio button\r\n    name: {\r\n      type: String,\r\n      default: \"gender\",\r\n    },\r\n    //giá trị của radio để update\r\n    modelValue: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    //giá trị truyền vào của checkbox\r\n    value: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    //radio có đang được chọn hay không?\r\n    checked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  computed: {\r\n    /**------------------------------------------\r\n    *Gán giá trị cho checkbox nếu checked = true\r\n    *Author: quyetkaito (09/04/2022)\r\n    --------------------------------------------*/\r\n    checkedComputed() {\r\n      if (this.checked) {\r\n        this.$emit(\"update:modelValue\", this.value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/**-----------------------\r\n    Custom radio button vẽ\r\n -------------------------*/\r\n\r\n.m-radio-container {\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  position: relative;\r\n  padding-left: 0px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/*Ẩn radio mặc định*/\r\n.m-radio-container input {\r\n  opacity: 0;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 0;\r\n  cursor: pointer;\r\n  outline: unset;\r\n  border: none;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/*vẽ checkmark*/\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  height: 20px;\r\n  width: 20px;\r\n  background-color: #fff;\r\n  border-radius: 50%;\r\n  border: 1px solid #bbbbbb;\r\n  box-sizing: border-box;\r\n}\r\n.checkmark:hover {\r\n  border: 1px solid var(--default-color);\r\n}\r\n\r\n.m-radio-container:hover input ~ .checkmark {\r\n  background-color: transparent;\r\n}\r\n/*tạo nút check*/\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n.m-radio-container input:checked ~ .checkmark {\r\n  border-color: var(--default-color);\r\n}\r\n.m-radio-container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/*style cho dấu chấm bên trong*/\r\n.m-radio-container .checkmark:after {\r\n  top: 3px;\r\n  left: 3px;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background: var(--default-color);\r\n}\r\n\r\n.m-radio-label {\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n/* tạo vòng tròn bao ngoài khi focus */\r\n.m-radio-container input::after {\r\n  display: none;\r\n}\r\n.m-radio-container input:focus {\r\n  opacity: 100%;\r\n}\r\n.m-radio-container input:focus::after {\r\n  position: absolute;\r\n  display: block;\r\n  content: \"\";\r\n  top: -3px;\r\n  left: -3px;\r\n  width: 24px;\r\n  height: 24px;\r\n  border: 1px solid aqua;\r\n  border-radius: 50%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
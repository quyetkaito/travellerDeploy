{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-list\"\n};\nconst _hoisted_2 = {\n  class: \"action-area\"\n};\nconst _hoisted_3 = {\n  class: \"add-post m-card\"\n};\nconst _hoisted_4 = {\n  class: \"flex align-y-center\"\n};\nconst _hoisted_5 = {\n  class: \"avatar rounded-full\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"input\"\n};\nconst _hoisted_8 = {\n  class: \"mr-2 ml-2\"\n};\nconst _hoisted_9 = {\n  class: \"grid grid-cols-1 gap-4\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_post_card = _resolveComponent(\"post-card\");\n\n  const _component_m_spin = _resolveComponent(\"m-spin\");\n\n  const _component_post_detail = _resolveComponent(\"post-detail\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: $options.getSrc($data.userAvatar),\n    alt: \"\",\n    class: \"avatar-image rounded-full\"\n  }, null, 8, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input-add-post\",\n    placeholder: \"Chia sẻ trải nghiệm của bạn...\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openPostDetail && $options.openPostDetail(...args))\n  })]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"i\", {\n    class: \"fas fa-images\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.openPostDetail && $options.openPostDetail(...args)),\n    title: \"Chọn ảnh\"\n  })])])])]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listPosts, post => {\n    return _openBlock(), _createBlock(_component_post_card, {\n      key: post.entity.post_id,\n      post: post.entity,\n      listComment: post.listComment,\n      listCategory: post.listCategories,\n      onRemoveItem: $options.handleRemoveItem\n    }, null, 8, [\"post\", \"listComment\", \"listCategory\", \"onRemoveItem\"]);\n  }), 128)), $data.listPosts.length == 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_m_spin)])) : _createCommentVNode(\"\", true)])]), _createVNode(_component_post_detail, {\n    ref: \"postDetail\"\n  }, null, 512)], 64);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAGNA,KAAK,EAAC;;;EAGNA,KAAK,EAAC;;;EAOdA,KAAK,EAAC;;;;;;;;;;;;6DAjBbC,oBA4BM,KA5BN,cA4BM,CA3BJA,oBAcM,KAdN,cAcM,CAbFA,oBAYM,KAZN,cAYM,CAXJA,oBAUM,KAVN,cAUM,CATJA,oBAEM,KAFN,cAEM,CADFA,oBAAwE,KAAxE,EAAwE;IAAlEC,GAAG,EAAEC,gBAAOC,gBAAP,CAA6D;IAAzCC,GAAG,EAAC,EAAqC;IAAlCL,KAAK,EAAC;EAA4B,CAAxE,sBACE,CAFN,CASI,EANJC,oBAEM,KAFN,cAEM,CADFA,oBAA+G,OAA/G,EAA+G;IAAxGK,IAAI,EAAC,MAAmG;IAA5FN,KAAK,EAAC,gBAAsF;IAArEO,WAAW,EAAC,gCAAyD;IAAvBC,OAAK,yCAAEL,2DAAF;EAAkB,CAA/G,CACE,CAFN,CAMI,EAHJF,oBAEM,KAFN,cAEM,CADHA,oBAAsE,GAAtE,EAAsE;IAAnED,KAAK,EAAC,eAA6D;IAA5CQ,OAAK,yCAAEL,2DAAF,CAAuC;IAArBM,KAAK,EAAC;EAAe,CAAtE,CACG,CAFN,CAGI,CAVN,CAWI,CAZN,CAaE,CAdN,CA2BI,EAXJR,oBAUM,KAVN,cAUM,oBATFS,oBAKEC,SALF,EAKE,IALF,EAKEC,YALwBR,eAKxB,EALgBS,IAAiB,IAAb;yBAAtBC,aAKEC,oBALF,EAKE;MAL0CC,GAAG,EAAEH,IAAI,CAACI,MAAL,CAAYC,OAK3D;MAJCL,IAAI,EAAEA,IAAI,CAACI,MAIZ;MAHCE,WAAW,EAAEN,IAAI,CAACM,WAGnB;MAFCC,YAAY,EAAEP,IAAI,CAACQ,cAEpB;MADCC,YAAU,EAAEnB;IACb,CALF;GAKE,CALF,MASE,GAHSC,gBAAUmB,MAAV,IAAgB,mBAA3Bb,oBAEM,KAFN,EAEMc,WAFN,EAEM,CADHC,aAASC,iBAAT,CACG,CAFN,kCAGE,CAVN,CAWI,CA5BN,GA6BAD,aAA+BE,sBAA/B,EAA+B;IAAlBC,GAAG,EAAC;EAAc,CAA/B,EAA6B,IAA7B,EAA6B,GAA7B","names":["class","_createElementVNode","src","$options","$data","alt","type","placeholder","onClick","title","_createElementBlock","_Fragment","_renderList","post","_createBlock","_component_post_card","key","entity","post_id","listComment","listCategory","listCategories","onRemoveItem","length","_hoisted_10","_createVNode","_component_m_spin","_component_post_detail","ref"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostList.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-list\">    \r\n    <div class=\"action-area\">  \r\n        <div class=\"add-post m-card\">\r\n          <div class=\"flex align-y-center\">\r\n            <div class=\"avatar rounded-full\">\r\n                <img :src=\"getSrc(userAvatar)\" alt=\"\" class=\"avatar-image rounded-full\">\r\n            </div>\r\n            <div class=\"input\">\r\n                <input type=\"text\" class=\"input-add-post\" placeholder=\"Chia sẻ trải nghiệm của bạn...\" @click=\"openPostDetail\">\r\n            </div>\r\n            <div class=\"mr-2 ml-2\">\r\n               <i class=\"fas fa-images\" @click=\"openPostDetail\" title=\"Chọn ảnh\"></i>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n    </div>\r\n<!-- Phần list các bài viết -->\r\n    <div class=\"grid grid-cols-1 gap-4\">\r\n        <post-card v-for=\"post in listPosts\" v-bind:key=\"post.entity.post_id\" \r\n          :post=\"post.entity\"\r\n          :listComment=\"post.listComment\"\r\n          :listCategory=\"post.listCategories\"\r\n          @removeItem=\"handleRemoveItem\"\r\n        /> \r\n        <div v-if=\"listPosts.length == 0\">\r\n           <m-spin/>\r\n        </div>       \r\n    </div>    \r\n  </div>\r\n  <post-detail ref=\"postDetail\"/>  \r\n</template>\r\n\r\n<script>\r\nimport PostEditorDetail from \"@/views/post/PostEditorDetail.vue\";\r\nimport PostCard from \"@/views/post/PostCard.vue\";\r\nimport PostAPI from '@/api/PostAPI';\r\nimport PostDetail from \"@/views/post/PostDetail.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"PostList\",\r\n  components:{\r\n    // \"post-editor\": PostEditorDetail\r\n    \"post-card\": PostCard,\r\n    \"post-detail\": PostDetail,    \r\n  },\r\n  data() {\r\n    return {\r\n      listPosts: [], //danh sách các bài viết,\r\n      pageNumber: 1, //trang số mấy\r\n      pageSize: 10, //10 bản ghi 1 trang\r\n      imagePreview: \"\",\r\n      userAvatar: this.$session.get('UserAvatar'),\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$eventBus.on('test', e=> {\r\n        this.loadData(e);\r\n    });\r\n    this.$eventBus.on('myPost', e=> {\r\n        this.loadData(e);\r\n    });\r\n    this.$eventBus.on('nextPage', e=> {\r\n        this.loadNextData(e);\r\n    });\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.initStaticData();\r\n  },\r\n  methods:{\r\n    /**\r\n     * Mở form thêm mới bài viết\r\n     */\r\n    openPostDetail(){\r\n      //check login\r\n      if(this.$session.get('UserID')){\r\n        this.$refs.postDetail.show();\r\n      }else{\r\n        this.$store.commit('showInfo', {message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"});\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Mở form chỉnh sửa\r\n     * @param {Object} post : thông tin bài viết\r\n     * @param {Array} listCategory : category của bài viết này\r\n     */\r\n    openPostEdit(object, listCategory){\r\n        //check login        \r\n      if(this.$session.get('UserID')){\r\n        this.$refs.postDetail.showEdit(object, listCategory);\r\n      }else{\r\n        this.$store.commit('showInfo', {message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"});\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n    * Binding image source\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    getSrc(src){\r\n        if(src){\r\n            return src;\r\n        }else{\r\n            return require(\"@/assets/img/default-avatar.jpg\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n    * hàm khởi tạo dữ liệu tĩnh\r\n    * @created : quyetkaito 14/10/2022\r\n    */\r\n    async initStaticData(){\r\n        let me = this;        \r\n        me.loadData();\r\n        // let res = await PostAPI.request(PostAPI.urlName+\"/post_detail_paging\", 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n        // if(res && res.data){\r\n        //   // if(res.data.Data){\r\n        //   //   this.listPosts = res.data.Data;\r\n        //   // }\r\n        //   if(res.data.ListPostDetail){\r\n        //     this.listPosts = res.data.ListPostDetail;\r\n        //   }\r\n        // }\r\n    },\r\n\r\n    buttonClick(action){\r\n      let me = this;\r\n      switch (action) {\r\n        case 'Add':\r\n          this.$router.push({name: 'PostEditor'});\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n    * Xử lý khi xóa item thành công và emit ra danh sách\r\n    * @created : quyetkaito 15/10/2022\r\n    */\r\n    handleRemoveItem(post){\r\n        if(post){          \r\n           let pos = this.listPosts.find(x=>x.post_id == post.post_id);\r\n           if(pos){             \r\n             this.listPosts.splice(this.listPosts.indexOf(pos), 1); //loại khỏi danh sách hiện tại\r\n           }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Hàm lấy dữ liệu các bài viết, kèm 10 bình luận đầu tiên của nó\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    async loadData(textSearch){\r\n      let me = this;        \r\n      if(!textSearch) textSearch = \"\";\r\n      let res = await PostAPI.request(PostAPI.urlName+`/post_detail_paging?textSearch=${textSearch}&pagNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n      if(res && res.data){                \r\n        if(res.data.ListPostDetail){\r\n          this.listPosts = res.data.ListPostDetail;          \r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n    * Hàm gọi api lấy tiếp dữ liệu\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    async loadNextData(textSearch){\r\n      let me = this;        \r\n      if(!textSearch) textSearch = \"\";\r\n      me.pageNumber += 1;\r\n      let res = await PostAPI.request(PostAPI.urlName+`/post_detail_paging?textSearch=${textSearch}&pageNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n      if(res && res.data){        \r\n        if(res.data.ListPostDetail){\r\n          me.listPosts = me.listPosts.concat(res.data.ListPostDetail);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.post-list{\r\n  padding: 10px;\r\n}\r\n.action-area .image-upload{\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 300px;\r\n  object-fit: contain;\r\n}\r\n.action-area .input{\r\n  flex-grow: 1;\r\n  margin-right: 10px;\r\n}\r\n.action-area .input-add-post{\r\n  height: 40px;\r\n  border-radius: 30px;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  outline: none;    \r\n  padding-left: 20px;\r\n  background: #f4f7fc;\r\n  margin-left: 10px;\r\n}\r\n.action-area .add-post .avatar-image{\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 100%;  \r\n}\r\n.add-post .avatar{\r\n  width: 50px;\r\n  height: 50px;  \r\n  border: 2px solid var(--info-color);\r\n}\r\n.add-post .fa-images{\r\n  color: var(--default-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n#imagePreview{\r\n  display: none;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
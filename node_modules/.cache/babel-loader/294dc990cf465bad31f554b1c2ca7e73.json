{"ast":null,"code":"import BaseDialog from '@/components/m-dialog/BaseDialog.vue'; //combobox\n\nimport vMultiselect from \"@vueform/multiselect\";\nimport \"@vueform/multiselect/themes/default.css\"; // import DatePicker\n\nimport NextDatePicker from \"vue-datepicker-next\";\nimport \"vue-datepicker-next/index.css\";\nimport \"vue-datepicker-next/locale/vi\";\nexport default {\n  extends: BaseDialog,\n  components: {\n    \"v-multiselect\": vMultiselect,\n    \"v-date-picker\": NextDatePicker\n  },\n\n  data() {\n    return {\n      boxStyle: \"height:fit-content!important; margin-top: 48px; max-height: calc(100vh - 100px);\",\n      dialogStyle: \"align-items:flex-start!important;\",\n      //đối tượng hiện tại đang xử lý\n      currentItem: {\n        wallet: null\n      }\n    };\n  },\n\n  created() {\n    this.initStaticData();\n  },\n\n  methods: {\n    /**------------------------------------------\r\n    * Hàm khởi tạo dữ liệu tĩnh\r\n    * @created : quyetkaito (25/06/2022)\r\n    --------------------------------------------*/\n    initStaticData() {\n      let me = this;\n      me.formTitle = \"Thông tin giao dịch\";\n      me.formMode = me.$enum.FormMode.Insert;\n    },\n\n    /**------------------------------------------\r\n    * Hàm show dialog\r\n    * @created : quyetkaito (18/06/2022)\r\n    --------------------------------------------*/\n    show(object) {\n      let me = this;\n      this.$refs['transactionDialog'].show(); //focus vào ô input đầu tiên\n\n      if (me.$refs.wallet) {\n        me.$refs.wallet.$el.children[0].focus(); //chưa được\n      }\n\n      this.processDataBeforeShow(object);\n    },\n\n    /**------------------------------------------\r\n    * Ẩn dialog\r\n    * @created : quyetkaito (18/06/2022)\r\n    --------------------------------------------*/\n    hide() {\n      this.$refs['transactionDialog'].hide();\n    },\n\n    /**------------------------------------------\r\n    * Hàm xử lý data trước khi show\r\n    * @created : quyetkaito (25/06/2022)\r\n    --------------------------------------------*/\n    processDataBeforeShow(object) {\n      let me = this;\n\n      if (object) {\n        me.currentItem = object;\n      }\n\n      if (me.formMode == me.$enum.FormMode.Insert) {\n        me.currentItem.amount = 0;\n      }\n    },\n\n    /**------------------------------------------\r\n    *  Xử lý khi button được click\r\n    * @param {String} action: sự kiện cho button\r\n    * @created : quyetkaito (16/06/2022)\r\n    --------------------------------------------*/\n    buttonClick(action) {\n      switch (action) {\n        case 'Cancel':\n          {\n            this.hide();\n            break;\n          }\n\n        case 'Save':\n          {\n            this.focusFirstInput();\n            this.save();\n            break;\n          }\n\n        default:\n          {\n            return;\n          }\n      }\n    },\n\n    /**------------------------------------------\r\n    * Hàm thực hiện xử lý khi bắt đầu lưu dữ liệu\r\n    * @created : quyetkaito (25/06/2022)\r\n    --------------------------------------------*/\n    save() {\n      //build object\n      let me = this;\n      me.$commonFunc.load();\n      let object = me.currentItem; //tính toán lại giá trị dạng số\n\n      console.log(`object: `, object); //validate\n      //gọi api\n      //xử lý kết quả trả về\n\n      me.$emit(\"save\", me.currentItem); //đóng dialog\n\n      me.hide(); // me.$commonFunc.unload();\n    },\n\n    /**------------------------------------------\r\n    * Hàm thực hiện focus vào ô input đầu tiên khi mở form\r\n    * @created : quyetkaito (18/06/2022)\r\n    --------------------------------------------*/\n    focusFirstInput() {\n      //tìm ô input đầu tiên trong form\n      let firstInput = this.$refs['category'];\n\n      if (firstInput) {\n        try {\n          firstInput.focus();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmEA,OAAOA,UAAP,MAAuB,sCAAvB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAO,yCAAP,C,CACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AAEA,eAAe;EACXC,OAAO,EAAEH,UADE;EAEXI,UAAU,EAAC;IACP,iBAAiBH,YADV;IAEP,iBAAiBC;EAFV,CAFA;;EAMXG,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAC,kFADN;MAEHC,WAAW,EAAC,mCAFT;MAGH;MACAC,WAAW,EAAC;QACRC,MAAM,EAAE;MADA;IAJT,CAAP;EAQH,CAfU;;EAgBXC,OAAO,GAAE;IACL,KAAKC,cAAL;EACH,CAlBU;;EAoBXC,OAAO,EAAC;IACJ;;;;IAIAD,cAAc,GAAE;MACZ,IAAIE,EAAC,GAAI,IAAT;MACAA,EAAE,CAACC,SAAH,GAAe,qBAAf;MACAD,EAAE,CAACE,QAAH,GAAcF,EAAE,CAACG,KAAH,CAASC,QAAT,CAAkBC,MAAhC;IACH,CATG;;IAWJ;;;;IAIAC,IAAI,CAACC,MAAD,EAAQ;MACR,IAAIP,EAAC,GAAI,IAAT;MACA,KAAKQ,KAAL,CAAW,mBAAX,EAAgCF,IAAhC,GAFQ,CAGR;;MACA,IAAGN,EAAE,CAACQ,KAAH,CAASZ,MAAZ,EAAmB;QACfI,EAAE,CAACQ,KAAH,CAASZ,MAAT,CAAgBa,GAAhB,CAAoBC,QAApB,CAA6B,CAA7B,EAAgCC,KAAhC,GADe,CAC0B;MAC7C;;MACA,KAAKC,qBAAL,CAA2BL,MAA3B;IACH,CAvBG;;IAyBJ;;;;IAIAM,IAAI,GAAE;MACF,KAAKL,KAAL,CAAW,mBAAX,EAAgCK,IAAhC;IACH,CA/BG;;IAiCJ;;;;IAIAD,qBAAqB,CAACL,MAAD,EAAQ;MACzB,IAAIP,EAAC,GAAI,IAAT;;MACA,IAAGO,MAAH,EAAU;QACNP,EAAE,CAACL,WAAH,GAAiBY,MAAjB;MACJ;;MACA,IAAGP,EAAE,CAACE,QAAH,IAAeF,EAAE,CAACG,KAAH,CAASC,QAAT,CAAkBC,MAApC,EAA2C;QACvCL,EAAE,CAACL,WAAH,CAAemB,MAAf,GAAwB,CAAxB;MACJ;IACH,CA7CG;;IA+CJ;;;;;IAKAC,WAAW,CAACC,MAAD,EAAQ;MACf,QAAOA,MAAP;QACI,KAAK,QAAL;UAAc;YACV,KAAKH,IAAL;YAAa;UACjB;;QACA,KAAK,MAAL;UAAY;YACR,KAAKI,eAAL;YACA,KAAKC,IAAL;YACA;UACJ;;QACA;UAAS;YACL;UACJ;MAXJ;IAaH,CAlEG;;IAoEJ;;;;IAIAA,IAAI,GAAE;MACF;MACA,IAAIlB,EAAC,GAAI,IAAT;MACAA,EAAE,CAACmB,WAAH,CAAeC,IAAf;MACA,IAAIb,MAAK,GAAIP,EAAE,CAACL,WAAhB,CAJE,CAKF;;MACA0B,OAAO,CAACC,GAAR,CAAa,UAAb,EAAwBf,MAAxB,EANE,CAOF;MACA;MACA;;MACAP,EAAE,CAACuB,KAAH,CAAS,MAAT,EAAgBvB,EAAE,CAACL,WAAnB,EAVE,CAWF;;MACAK,EAAE,CAACa,IAAH,GAZE,CAaF;IACH,CAtFG;;IA0FJ;;;;IAIAI,eAAe,GAAE;MACb;MACA,IAAIO,UAAS,GAAI,KAAKhB,KAAL,CAAW,UAAX,CAAjB;;MACA,IAAGgB,UAAH,EAAc;QACV,IAAI;UACAA,UAAU,CAACb,KAAX;QACJ,CAFA,CAEE,OAAOc,KAAP,EAAc;UACZJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;QACJ;MAEJ;IACJ;;EAzGI;AApBG,CAAf","names":["BaseDialog","vMultiselect","NextDatePicker","extends","components","data","boxStyle","dialogStyle","currentItem","wallet","created","initStaticData","methods","me","formTitle","formMode","$enum","FormMode","Insert","show","object","$refs","$el","children","focus","processDataBeforeShow","hide","amount","buttonClick","action","focusFirstInput","save","$commonFunc","load","console","log","$emit","firstInput","error"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\transaction\\TransactionDictionaryDetail.vue"],"sourcesContent":["<template>\r\n  <m-dialog-container ref=\"transactionDialog\" :boxStyle=\"boxStyle\" :dialogStyle=\"dialogStyle\">\r\n        <template v-slot:header>\r\n            <div class=\"m-dialog-header\">\r\n                <div class=\"m-dialog-header__left\">\r\n                    <div class=\"title-container\">\r\n                        <div class=\"dialog-title-text\">{{ formTitle }}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"m-dialog-header__right flex-end\">\r\n                    <div class=\"button-box mr-2\">\r\n                        <div class=\"m-icon m-icon-24 m-help__nav\"></div>\r\n                    </div>\r\n                    <div class=\"button-box\" @click=\"buttonClick('Cancel')\">\r\n                        <div class=\"m-icon m-icon-24 m-close\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>         \r\n        </template>\r\n        <template v-slot:body>\r\n            <div class=\"grid grid-cols-4 gap-4\">\r\n                <div><m-label text=\"Wallet\"/>\r\n                     <v-multiselect\r\n                        ref=\"wallet\"\r\n                        v-model=\"currentItem.wallet\"\r\n                        :options=\"[\r\n                        { label: 'Batman', value: 1 },\r\n                        { label: 'Hello', value: 2 },\r\n                        ]\"\r\n                        mode=\"single\"\r\n                        close-on-select\r\n                        clearOnSelect\r\n                        searchable\r\n                        noResultsText=\"Không có dữ liệu hiển thị\"\r\n                        :disabled=\"false\"\r\n                        placeholder=\"chọn đi\"\r\n                        :canClear=\"false\"\r\n                    />\r\n                </div>\r\n                <div><m-input ref=\"category\" labelText=\"Category\" v-model=\"currentItem.category\"/></div>\r\n                <div><m-input ref=\"amount\" isNumberInput labelText=\"Amount\" style=\"text-align: left;\" v-model=\"currentItem.amount\"/></div>\r\n                <div>              \r\n                    <m-label text=\"Date\"/>      \r\n                     <v-date-picker\r\n                     ref=\"date\"\r\n                      v-model:value=\"currentItem.date\"\r\n                      :format=\"$enum.DateFormat\"\r\n                      placeholder=\"Ngày giao dịch\"\r\n                      :lang=\"$enum.LangString.vi\"                      \r\n                      :clearable=\"false\"\r\n                    />\r\n                </div>                \r\n                <div class=\"col-span-4\"><m-input ref=\"note\" labelText=\"Note\" isTextArea height=\"160\" v-model=\"currentItem.note\"/></div>\r\n            </div>\r\n        </template>\r\n        <template v-slot:footer>\r\n             <div class=\"grid grid-cols-3 gap-4\">\r\n                 <div class=\"col-end-7 flex pt-4\">\r\n                    <div class=\"mr-2\"><m-button text=\"CANCEL\" type=\"secondary\" @click=\"buttonClick('Cancel')\"/></div>\r\n                    <div><m-button text=\"SAVE\" type=\"primary\" @click=\"buttonClick('Save')\"/></div>\r\n                </div>\r\n            </div>      \r\n        </template>\r\n  </m-dialog-container>\r\n</template>\r\n\r\n<script>\r\nimport BaseDialog from '@/components/m-dialog/BaseDialog.vue';\r\n//combobox\r\nimport vMultiselect from \"@vueform/multiselect\";\r\nimport \"@vueform/multiselect/themes/default.css\";\r\n// import DatePicker\r\nimport NextDatePicker from \"vue-datepicker-next\";\r\nimport \"vue-datepicker-next/index.css\";\r\nimport \"vue-datepicker-next/locale/vi\";\r\n\r\nexport default {\r\n    extends: BaseDialog,\r\n    components:{\r\n        \"v-multiselect\": vMultiselect,\r\n        \"v-date-picker\": NextDatePicker,\r\n    },\r\n    data() {\r\n        return {            \r\n            boxStyle:\"height:fit-content!important; margin-top: 48px; max-height: calc(100vh - 100px);\",\r\n            dialogStyle:\"align-items:flex-start!important;\",\r\n            //đối tượng hiện tại đang xử lý\r\n            currentItem:{\r\n                wallet: null,\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.initStaticData();\r\n    },\r\n\r\n    methods:{\r\n        /**------------------------------------------\r\n        * Hàm khởi tạo dữ liệu tĩnh\r\n        * @created : quyetkaito (25/06/2022)\r\n        --------------------------------------------*/\r\n        initStaticData(){\r\n            let me = this;\r\n            me.formTitle = \"Thông tin giao dịch\";\r\n            me.formMode = me.$enum.FormMode.Insert;\r\n        },\r\n        \r\n        /**------------------------------------------\r\n        * Hàm show dialog\r\n        * @created : quyetkaito (18/06/2022)\r\n        --------------------------------------------*/\r\n        show(object){\r\n            let me = this;\r\n            this.$refs['transactionDialog'].show();\r\n            //focus vào ô input đầu tiên\r\n            if(me.$refs.wallet){\r\n                me.$refs.wallet.$el.children[0].focus(); //chưa được\r\n            }\r\n            this.processDataBeforeShow(object);\r\n        },\r\n\r\n        /**------------------------------------------\r\n        * Ẩn dialog\r\n        * @created : quyetkaito (18/06/2022)\r\n        --------------------------------------------*/\r\n        hide(){\r\n            this.$refs['transactionDialog'].hide();\r\n        },\r\n\r\n        /**------------------------------------------\r\n        * Hàm xử lý data trước khi show\r\n        * @created : quyetkaito (25/06/2022)\r\n        --------------------------------------------*/\r\n        processDataBeforeShow(object){\r\n            let me = this;\r\n            if(object){\r\n                me.currentItem = object;\r\n            }\r\n            if(me.formMode == me.$enum.FormMode.Insert){\r\n                me.currentItem.amount = 0;\r\n            }\r\n        },\r\n\r\n        /**------------------------------------------\r\n        *  Xử lý khi button được click\r\n        * @param {String} action: sự kiện cho button\r\n        * @created : quyetkaito (16/06/2022)\r\n        --------------------------------------------*/\r\n        buttonClick(action){            \r\n            switch(action){\r\n                case 'Cancel':{\r\n                    this.hide(); break;\r\n                }\r\n                case 'Save':{\r\n                    this.focusFirstInput();\r\n                    this.save();\r\n                    break;\r\n                }\r\n                default: {\r\n                    return;                    \r\n                }\r\n            }            \r\n        },\r\n\r\n        /**------------------------------------------\r\n        * Hàm thực hiện xử lý khi bắt đầu lưu dữ liệu\r\n        * @created : quyetkaito (25/06/2022)\r\n        --------------------------------------------*/\r\n        save(){\r\n            //build object\r\n            let me = this;\r\n            me.$commonFunc.load();\r\n            let object = me.currentItem;\r\n            //tính toán lại giá trị dạng số\r\n            console.log(`object: `, object);\r\n            //validate\r\n            //gọi api\r\n            //xử lý kết quả trả về\r\n            me.$emit(\"save\",me.currentItem);\r\n            //đóng dialog\r\n            me.hide();\r\n            // me.$commonFunc.unload();\r\n        },\r\n\r\n\r\n\r\n        /**------------------------------------------\r\n        * Hàm thực hiện focus vào ô input đầu tiên khi mở form\r\n        * @created : quyetkaito (18/06/2022)\r\n        --------------------------------------------*/\r\n        focusFirstInput(){\r\n            //tìm ô input đầu tiên trong form\r\n            let firstInput = this.$refs['category'];\r\n            if(firstInput){\r\n                try {\r\n                    firstInput.focus();\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url('@/style/common/base-dialog.css');\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import PostEditorDetail from \"@/views/post/PostEditorDetail.vue\";\nimport PostCard from \"@/views/post/PostCard.vue\";\nimport PostAPI from '@/api/PostAPI';\nimport PostDetail from \"@/views/post/PostDetail.vue\";\nexport default {\n  name: \"PostList\",\n  components: {\n    // \"post-editor\": PostEditorDetail\n    \"post-card\": PostCard,\n    \"post-detail\": PostDetail\n  },\n\n  data() {\n    return {\n      listPosts: [],\n      //danh sách các bài viết,\n      pageNumber: 1,\n      //trang số mấy\n      pageSize: 10,\n      //10 bản ghi 1 trang\n      imagePreview: \"\",\n      userAvatar: this.$session.get('UserAvatar')\n    };\n  },\n\n  mounted() {\n    this.$eventBus.on('test', e => {\n      this.loadData(e);\n    });\n    this.$eventBus.on('myPost', e => {\n      this.loadData(e);\n    });\n    this.$eventBus.on('nextPage', e => {\n      this.loadNextData(e);\n    });\n  },\n\n  created() {\n    let me = this;\n    me.initStaticData();\n  },\n\n  methods: {\n    /**\r\n     * Mở form thêm mới bài viết\r\n     */\n    openPostDetail() {\n      //check login\n      if (this.$session.get('UserID')) {\n        this.$refs.postDetail.show();\n      } else {\n        this.$store.commit('showInfo', {\n          message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"\n        });\n      }\n    },\n\n    /**\r\n     * Mở form chỉnh sửa\r\n     * @param {Object} post : thông tin bài viết\r\n     * @param {Array} listCategory : category của bài viết này\r\n     */\n    openPostEdit(object, listCategory) {\n      //check login        \n      if (this.$session.get('UserID')) {\n        this.$refs.postDetail.showEdit(object, listCategory);\n      } else {\n        this.$store.commit('showInfo', {\n          message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"\n        });\n      }\n    },\n\n    /**\r\n    * Binding image source\r\n    * @created : quyetkaito 16/10/2022\r\n    */\n    getSrc(src) {\n      if (src) {\n        return src;\n      } else {\n        return require(\"@/assets/img/default-avatar.jpg\");\n      }\n    },\n\n    /**\r\n    * hàm khởi tạo dữ liệu tĩnh\r\n    * @created : quyetkaito 14/10/2022\r\n    */\n    async initStaticData() {\n      let me = this;\n      me.loadData(); // let res = await PostAPI.request(PostAPI.urlName+\"/post_detail_paging\", 'GET'); //lấy chi tiết các bài viết + comment của nó\n      // if(res && res.data){\n      //   // if(res.data.Data){\n      //   //   this.listPosts = res.data.Data;\n      //   // }\n      //   if(res.data.ListPostDetail){\n      //     this.listPosts = res.data.ListPostDetail;\n      //   }\n      // }\n    },\n\n    buttonClick(action) {\n      let me = this;\n\n      switch (action) {\n        case 'Add':\n          this.$router.push({\n            name: 'PostEditor'\n          });\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    /**\r\n    * Xử lý khi xóa item thành công và emit ra danh sách\r\n    * @created : quyetkaito 15/10/2022\r\n    */\n    handleRemoveItem(post) {\n      if (post) {\n        let pos = this.listPosts.find(x => x.post_id == post.post_id);\n\n        if (pos) {\n          this.listPosts.splice(this.listPosts.indexOf(pos), 1); //loại khỏi danh sách hiện tại\n        }\n      }\n    },\n\n    /**\r\n    * Hàm lấy dữ liệu các bài viết, kèm 10 bình luận đầu tiên của nó\r\n    * @created : quyetkaito 16/10/2022\r\n    */\n    async loadData(textSearch) {\n      let me = this;\n      if (!textSearch) textSearch = \"\";\n      let res = await PostAPI.request(PostAPI.urlName + `/post_detail_paging?textSearch=${textSearch}&pagNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\n\n      if (res && res.data) {\n        if (res.data.ListPostDetail) {\n          this.listPosts = res.data.ListPostDetail;\n        }\n      }\n    },\n\n    /**\r\n    * Hàm gọi api lấy tiếp dữ liệu\r\n    * @created : quyetkaito 16/10/2022\r\n    */\n    async loadNextData(textSearch) {\n      let me = this;\n      if (!textSearch) textSearch = \"\";\n      me.pageNumber += 1;\n      let res = await PostAPI.request(PostAPI.urlName + `/post_detail_paging?textSearch=${textSearch}&pageNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\n\n      if (res && res.data) {\n        if (res.data.ListPostDetail) {\n          me.listPosts = me.listPosts.concat(res.data.ListPostDetail);\n        }\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCA,OAAOA,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAGA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,UAAU,EAAC;IACT;IACA,aAAaJ,QAFJ;IAGT,eAAeE;EAHN,CAFE;;EAObG,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MACU;MACfC,UAAU,EAAE,CAFP;MAEU;MACfC,QAAQ,EAAE,EAHL;MAGS;MACdC,YAAY,EAAE,EAJT;MAKLC,UAAU,EAAE,KAAKC,QAAL,CAAcC,GAAd,CAAkB,YAAlB;IALP,CAAP;EAOD,CAfY;;EAgBbC,OAAO,GAAE;IACP,KAAKC,SAAL,CAAeC,EAAf,CAAkB,MAAlB,EAA0BC,CAAC,IAAG;MAC1B,KAAKC,QAAL,CAAcD,CAAd;IACH,CAFD;IAGA,KAAKF,SAAL,CAAeC,EAAf,CAAkB,QAAlB,EAA4BC,CAAC,IAAG;MAC5B,KAAKC,QAAL,CAAcD,CAAd;IACH,CAFD;IAGA,KAAKF,SAAL,CAAeC,EAAf,CAAkB,UAAlB,EAA8BC,CAAC,IAAG;MAC9B,KAAKE,YAAL,CAAkBF,CAAlB;IACH,CAFD;EAGD,CA1BY;;EA2BbG,OAAO,GAAE;IACP,IAAIC,EAAC,GAAI,IAAT;IACAA,EAAE,CAACC,cAAH;EACD,CA9BY;;EA+BbC,OAAO,EAAC;IACN;;;IAGAC,cAAc,GAAE;MACd;MACA,IAAG,KAAKZ,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAAH,EAA+B;QAC7B,KAAKY,KAAL,CAAWC,UAAX,CAAsBC,IAAtB;MACD,CAFD,MAEK;QACH,KAAKC,MAAL,CAAYC,MAAZ,CAAmB,UAAnB,EAA+B;UAACC,OAAO,EAAE;QAAV,CAA/B;MACF;IACD,CAXK;;IAaN;;;;;IAKAC,YAAY,CAACC,MAAD,EAASC,YAAT,EAAsB;MAC9B;MACF,IAAG,KAAKrB,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAAH,EAA+B;QAC7B,KAAKY,KAAL,CAAWC,UAAX,CAAsBQ,QAAtB,CAA+BF,MAA/B,EAAuCC,YAAvC;MACD,CAFD,MAEK;QACH,KAAKL,MAAL,CAAYC,MAAZ,CAAmB,UAAnB,EAA+B;UAACC,OAAO,EAAE;QAAV,CAA/B;MACF;IACD,CAzBK;;IA4BN;;;;IAIAK,MAAM,CAACC,GAAD,EAAK;MACP,IAAGA,GAAH,EAAO;QACH,OAAOA,GAAP;MACH,CAFD,MAEK;QACD,OAAOC,OAAO,CAAC,iCAAD,CAAd;MACJ;IACH,CAtCK;;IAyCN;;;;IAIA,MAAMf,cAAN,GAAsB;MAClB,IAAID,EAAC,GAAI,IAAT;MACAA,EAAE,CAACH,QAAH,GAFkB,CAGlB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACH,CAzDK;;IA2DNoB,WAAW,CAACC,MAAD,EAAQ;MACjB,IAAIlB,EAAC,GAAI,IAAT;;MACA,QAAQkB,MAAR;QACE,KAAK,KAAL;UACE,KAAKC,OAAL,CAAaC,IAAb,CAAkB;YAACrC,IAAI,EAAE;UAAP,CAAlB;UACA;;QAEF;UACE;MANJ;IAQD,CArEK;;IAuEN;;;;IAIAsC,gBAAgB,CAACC,IAAD,EAAM;MAClB,IAAGA,IAAH,EAAQ;QACL,IAAIC,GAAE,GAAI,KAAKrC,SAAL,CAAesC,IAAf,CAAoBC,CAAC,IAAEA,CAAC,CAACC,OAAF,IAAaJ,IAAI,CAACI,OAAzC,CAAV;;QACA,IAAGH,GAAH,EAAO;UACL,KAAKrC,SAAL,CAAeyC,MAAf,CAAsB,KAAKzC,SAAL,CAAe0C,OAAf,CAAuBL,GAAvB,CAAtB,EAAmD,CAAnD,EADK,CACkD;QACzD;MACH;IACH,CAlFK;;IAoFN;;;;IAIA,MAAM1B,QAAN,CAAegC,UAAf,EAA0B;MACxB,IAAI7B,EAAC,GAAI,IAAT;MACA,IAAG,CAAC6B,UAAJ,EAAgBA,UAAS,GAAI,EAAb;MAChB,IAAIC,GAAE,GAAI,MAAMjD,OAAO,CAACkD,OAAR,CAAgBlD,OAAO,CAACmD,OAAR,GAAiB,kCAAiCH,UAAW,cAAa7B,EAAE,CAACb,UAAW,aAAYa,EAAE,CAACZ,QAAS,EAAhI,EAAmI,KAAnI,CAAhB,CAHwB,CAGmI;;MAC3J,IAAG0C,GAAE,IAAKA,GAAG,CAAC7C,IAAd,EAAmB;QACjB,IAAG6C,GAAG,CAAC7C,IAAJ,CAASgD,cAAZ,EAA2B;UACzB,KAAK/C,SAAL,GAAiB4C,GAAG,CAAC7C,IAAJ,CAASgD,cAA1B;QACF;MACF;IACD,CAjGK;;IAmGN;;;;IAIA,MAAMnC,YAAN,CAAmB+B,UAAnB,EAA8B;MAC5B,IAAI7B,EAAC,GAAI,IAAT;MACA,IAAG,CAAC6B,UAAJ,EAAgBA,UAAS,GAAI,EAAb;MAChB7B,EAAE,CAACb,UAAH,IAAiB,CAAjB;MACA,IAAI2C,GAAE,GAAI,MAAMjD,OAAO,CAACkD,OAAR,CAAgBlD,OAAO,CAACmD,OAAR,GAAiB,kCAAiCH,UAAW,eAAc7B,EAAE,CAACb,UAAW,aAAYa,EAAE,CAACZ,QAAS,EAAjI,EAAoI,KAApI,CAAhB,CAJ4B,CAIgI;;MAC5J,IAAG0C,GAAE,IAAKA,GAAG,CAAC7C,IAAd,EAAmB;QACjB,IAAG6C,GAAG,CAAC7C,IAAJ,CAASgD,cAAZ,EAA2B;UACzBjC,EAAE,CAACd,SAAH,GAAec,EAAE,CAACd,SAAH,CAAagD,MAAb,CAAoBJ,GAAG,CAAC7C,IAAJ,CAASgD,cAA7B,CAAf;QACF;MACF;IACF;;EAjHM;AA/BK,CAAf","names":["PostEditorDetail","PostCard","PostAPI","PostDetail","name","components","data","listPosts","pageNumber","pageSize","imagePreview","userAvatar","$session","get","mounted","$eventBus","on","e","loadData","loadNextData","created","me","initStaticData","methods","openPostDetail","$refs","postDetail","show","$store","commit","message","openPostEdit","object","listCategory","showEdit","getSrc","src","require","buttonClick","action","$router","push","handleRemoveItem","post","pos","find","x","post_id","splice","indexOf","textSearch","res","request","urlName","ListPostDetail","concat"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostList.vue"],"sourcesContent":["<template>\r\n  <div class=\"post-list\">    \r\n    <div class=\"action-area\">  \r\n        <div class=\"add-post m-card\">\r\n          <div class=\"flex align-y-center\">\r\n            <div class=\"avatar rounded-full\">\r\n                <img :src=\"getSrc(userAvatar)\" alt=\"\" class=\"avatar-image rounded-full\">\r\n            </div>\r\n            <div class=\"input\">\r\n                <input type=\"text\" class=\"input-add-post\" placeholder=\"Chia sẻ trải nghiệm của bạn...\" @click=\"openPostDetail\">\r\n            </div>\r\n            <div class=\"mr-2 ml-2\">\r\n               <i class=\"fas fa-images\" @click=\"openPostDetail\" title=\"Chọn ảnh\"></i>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n    </div>\r\n<!-- Phần list các bài viết -->\r\n    <div class=\"grid grid-cols-1 gap-4\">\r\n        <post-card v-for=\"post in listPosts\" v-bind:key=\"post.entity.post_id\" \r\n          :post=\"post.entity\"\r\n          :listComment=\"post.listComment\"\r\n          :listCategory=\"post.listCategories\"\r\n          @removeItem=\"handleRemoveItem\"\r\n        /> \r\n        <div v-if=\"listPosts.length == 0\">\r\n           <m-spin/>\r\n        </div>       \r\n    </div>    \r\n  </div>\r\n  <post-detail ref=\"postDetail\"/>  \r\n</template>\r\n\r\n<script>\r\nimport PostEditorDetail from \"@/views/post/PostEditorDetail.vue\";\r\nimport PostCard from \"@/views/post/PostCard.vue\";\r\nimport PostAPI from '@/api/PostAPI';\r\nimport PostDetail from \"@/views/post/PostDetail.vue\";\r\n\r\n\r\nexport default {\r\n  name: \"PostList\",\r\n  components:{\r\n    // \"post-editor\": PostEditorDetail\r\n    \"post-card\": PostCard,\r\n    \"post-detail\": PostDetail,    \r\n  },\r\n  data() {\r\n    return {\r\n      listPosts: [], //danh sách các bài viết,\r\n      pageNumber: 1, //trang số mấy\r\n      pageSize: 10, //10 bản ghi 1 trang\r\n      imagePreview: \"\",\r\n      userAvatar: this.$session.get('UserAvatar'),\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$eventBus.on('test', e=> {\r\n        this.loadData(e);\r\n    });\r\n    this.$eventBus.on('myPost', e=> {\r\n        this.loadData(e);\r\n    });\r\n    this.$eventBus.on('nextPage', e=> {\r\n        this.loadNextData(e);\r\n    });\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.initStaticData();\r\n  },\r\n  methods:{\r\n    /**\r\n     * Mở form thêm mới bài viết\r\n     */\r\n    openPostDetail(){\r\n      //check login\r\n      if(this.$session.get('UserID')){\r\n        this.$refs.postDetail.show();\r\n      }else{\r\n        this.$store.commit('showInfo', {message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"});\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Mở form chỉnh sửa\r\n     * @param {Object} post : thông tin bài viết\r\n     * @param {Array} listCategory : category của bài viết này\r\n     */\r\n    openPostEdit(object, listCategory){\r\n        //check login        \r\n      if(this.$session.get('UserID')){\r\n        this.$refs.postDetail.showEdit(object, listCategory);\r\n      }else{\r\n        this.$store.commit('showInfo', {message: \"Vui lòng đăng nhập để thực hiện tính năng này.\"});\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n    * Binding image source\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    getSrc(src){\r\n        if(src){\r\n            return src;\r\n        }else{\r\n            return require(\"@/assets/img/default-avatar.jpg\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n    * hàm khởi tạo dữ liệu tĩnh\r\n    * @created : quyetkaito 14/10/2022\r\n    */\r\n    async initStaticData(){\r\n        let me = this;        \r\n        me.loadData();\r\n        // let res = await PostAPI.request(PostAPI.urlName+\"/post_detail_paging\", 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n        // if(res && res.data){\r\n        //   // if(res.data.Data){\r\n        //   //   this.listPosts = res.data.Data;\r\n        //   // }\r\n        //   if(res.data.ListPostDetail){\r\n        //     this.listPosts = res.data.ListPostDetail;\r\n        //   }\r\n        // }\r\n    },\r\n\r\n    buttonClick(action){\r\n      let me = this;\r\n      switch (action) {\r\n        case 'Add':\r\n          this.$router.push({name: 'PostEditor'});\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n    * Xử lý khi xóa item thành công và emit ra danh sách\r\n    * @created : quyetkaito 15/10/2022\r\n    */\r\n    handleRemoveItem(post){\r\n        if(post){          \r\n           let pos = this.listPosts.find(x=>x.post_id == post.post_id);\r\n           if(pos){             \r\n             this.listPosts.splice(this.listPosts.indexOf(pos), 1); //loại khỏi danh sách hiện tại\r\n           }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Hàm lấy dữ liệu các bài viết, kèm 10 bình luận đầu tiên của nó\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    async loadData(textSearch){\r\n      let me = this;        \r\n      if(!textSearch) textSearch = \"\";\r\n      let res = await PostAPI.request(PostAPI.urlName+`/post_detail_paging?textSearch=${textSearch}&pagNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n      if(res && res.data){                \r\n        if(res.data.ListPostDetail){\r\n          this.listPosts = res.data.ListPostDetail;          \r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n    * Hàm gọi api lấy tiếp dữ liệu\r\n    * @created : quyetkaito 16/10/2022\r\n    */\r\n    async loadNextData(textSearch){\r\n      let me = this;        \r\n      if(!textSearch) textSearch = \"\";\r\n      me.pageNumber += 1;\r\n      let res = await PostAPI.request(PostAPI.urlName+`/post_detail_paging?textSearch=${textSearch}&pageNumber=${me.pageNumber}&pageSize=${me.pageSize}`, 'GET'); //lấy chi tiết các bài viết + comment của nó\r\n      if(res && res.data){        \r\n        if(res.data.ListPostDetail){\r\n          me.listPosts = me.listPosts.concat(res.data.ListPostDetail);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.post-list{\r\n  padding: 10px;\r\n}\r\n.action-area .image-upload{\r\n  width: 100%;\r\n  height: 100%;\r\n  max-height: 300px;\r\n  object-fit: contain;\r\n}\r\n.action-area .input{\r\n  flex-grow: 1;\r\n  margin-right: 10px;\r\n}\r\n.action-area .input-add-post{\r\n  height: 40px;\r\n  border-radius: 30px;\r\n  font-size: 15px;\r\n  width: 100%;\r\n  outline: none;    \r\n  padding-left: 20px;\r\n  background: #f4f7fc;\r\n  margin-left: 10px;\r\n}\r\n.action-area .add-post .avatar-image{\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 100%;  \r\n}\r\n.add-post .avatar{\r\n  width: 50px;\r\n  height: 50px;  \r\n  border: 2px solid var(--info-color);\r\n}\r\n.add-post .fa-images{\r\n  color: var(--default-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n#imagePreview{\r\n  display: none;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"function-container\"\n};\nconst _hoisted_2 = {\n  class: \"save-btn-container\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Editor data\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ckeditor = _resolveComponent(\"ckeditor\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"m-btn-second btn-save mr-2\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.buttonClick('SaveTemp'))\n  }, _toDisplayString(_ctx.$t('SaveTemp')), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    class: \"m-btn btn-save\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.buttonClick('Save'))\n  }, _toDisplayString(_ctx.$t('Save')), 1\n  /* TEXT */\n  )])]), _createVNode(_component_ckeditor, {\n    editor: $data.editor,\n    modelValue: $data.editorData,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editorData = $event),\n    \"upload-adapter\": $options.UploadAdapter\n  }, null, 8\n  /* PROPS */\n  , [\"editor\", \"modelValue\", \"upload-adapter\"]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.emptyEditor && $options.emptyEditor(...args))\n  }, \"Empty the editor\"), _hoisted_3, _createElementVNode(\"code\", null, _toDisplayString($data.editorData), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gCAsBXC,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;;;;uBAxBNC,oBA0BQ,KA1BR,EA0BQ,IA1BR,EA0BQ,CAzBND,oBAeM,KAfN,cAeM,CAdFA,oBAaM,KAbN,cAaM,CAZLA,oBAKQ,QALR,EAKQ;IAJLD,KAAK,EAAC,4BAID;IAHJG,OAAK,sCAAEC,qBAAW,UAAX,CAAF;EAGD,CALR,mBAIKC,QAAE,UAAF,EAJL,EAIO;EAAA;EAJP,CAYK,EANNJ,oBAKS,QALT,EAKS;IAJLD,KAAK,EAAC,gBAID;IAHJG,OAAK,sCAAEC,qBAAW,MAAX,CAAF;EAGD,CALT,mBAIMC,QAAE,MAAF,EAJN,EAIQ;EAAA;EAJR,CAMM,CAbN,CAcE,CAfN,CAyBM,EATFC,aAIWC,mBAJX,EAIW;IAJAC,MAAM,EAAEC,YAIR;gBAHEA,gBAGF;+DAHEA,mBAAUC,OAGZ;IAFN,kBAAgBN;EAEV,CAJX;;EAAA,6CASE,EAJFH,oBAAsD,QAAtD,EAAsD;IAA7CE,OAAK,yCAAEC,qDAAF;EAAwC,CAAtD,EAA6B,kBAA7B,CAIE,EAFFO,UAEE,EADFV,oBAA6B,MAA7B,EAA6B,IAA7B,EAA6BW,iBAApBH,gBAAoB,CAA7B,EAAmB;EAAA;EAAnB,CACE,CA1BR","names":["class","_createElementVNode","_createElementBlock","onClick","$options","_ctx","_createVNode","_component_ckeditor","editor","$data","$event","_hoisted_3","_toDisplayString"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostEditorDetail.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"function-container\">\r\n        <div class=\"save-btn-container\">\r\n         <button\r\n            class=\"m-btn-second btn-save mr-2\"\r\n            @click=\"buttonClick('SaveTemp')\"                  \r\n        >\r\n            {{$t('SaveTemp')}}\r\n        </button>\r\n        <button\r\n            class=\"m-btn btn-save\"\r\n            @click=\"buttonClick('Save')\"                  \r\n        >\r\n            {{$t('Save')}}\r\n        </button>\r\n        </div>\r\n    </div>\r\n        <ckeditor :editor=\"editor\"\r\n            v-model=\"editorData\"\r\n            :upload-adapter=\"UploadAdapter\"\r\n        >\r\n        </ckeditor>\r\n        <button @click=\"emptyEditor\">Empty the editor</button>\r\n\r\n        <h2>Editor data</h2>\r\n        <code>{{ editorData }}</code>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nexport default {\r\n    data() {\r\n        return {\r\n             editor: ClassicEditor,\r\n            editorData: '<p>Content of the editor.</p>'\r\n\r\n        }\r\n    },\r\n    methods:{\r\n        \r\n        buttonClick(action){\r\n            \r\n        },\r\n\r\n        emptyEditor() {\r\n            this.editorData = '';\r\n        },\r\n\r\n        UploadAdapter: function (loader) {\r\n            this.loader = loader;\r\n            loader.file.then(response =>{\r\n                let file = response;\r\n                this.upload = () => {\r\n                    const body = new FormData();\r\n                    body.append('file', this.loader.file);\r\n\r\n                    return fetch('http://localhost:8000/api/imageUpload', {\r\n                    headers: {\r\n                        'Content-Type': \"multipart/form-data; charset=utf-8; boundary=\" + Math.random().toString().substr(2),\r\n                        'Accept': 'application/json'\r\n                    },\r\n                    body: body,\r\n                    method: 'post'\r\n                            })\r\n                    .then(response => response.json())\r\n                    .then(downloadUrl => {\r\n                        return {\r\n                            default: downloadUrl\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n                }\r\n                this.abort = () => {\r\n                    console.log('Abort upload.')\r\n                }\r\n            })\r\n            \r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.function-container{\r\n    padding: 10px;\r\n}\r\n.save-btn-container{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
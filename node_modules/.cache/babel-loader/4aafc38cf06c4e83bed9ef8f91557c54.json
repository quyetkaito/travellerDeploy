{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport _ from \"lodash\";\nimport LocationAPI from \"@/api/LocationAPI\";\nimport locationConfigCode from \"@/config/locationConfig\"; // Khởi tạo một số hằng sử dụng nhiều lần\n\nconst dbName = \"myDB\";\nconst collection = \"locations\";\nexport default {\n  data() {\n    return {\n      textSearch: null,\n      storeLocation: [],\n      //danh sách\n      storeLocationAll: [],\n      db: null,\n      //indexedDB\n      locations: [],\n      pageNumber: 1,\n      pageSize: 10,\n      totalPage: 0,\n      showPaging: true,\n      provinceValue: null,\n      storeProvince: [],\n      districtValue: null,\n      storeDistrict: [],\n      wardValue: null,\n      storeWard: []\n    };\n  },\n\n  created() {\n    let me = this;\n    this.initStaticData();\n  },\n\n  mounted() {\n    // Kết nối DB\n    var request = window.indexedDB.open(dbName, 1); // Nếu thành công. Tiến hành lấy notes về\n\n    request.onsuccess = async event => {\n      this.db = request.result;\n      await this.getCacheLocation();\n    }; // Kết nối lần đầu. Tiến hành khởi tạo objectStore với tên collection\n\n\n    request.onupgradeneeded = event => {\n      this.db = event.target.result;\n      this.db.createObjectStore(collection, {\n        autoIncrement: true\n      });\n    };\n  },\n\n  methods: {\n    comboProvinceBeforeExpand() {\n      debugger;\n    },\n\n    comboProvinceSelected(option) {\n      debugger;\n      this.districtValue = null; //xóa huyện, xã đi\n\n      this.wardValue = null;\n    },\n\n    comboDistrictBeforeExpand() {\n      debugger;\n      if (!this.provinceValue) return;else {\n        let code = this.storeLocationAll.find(x => x.location_name == this.provinceValue)?.location_code;\n        this.storeDistrict = this.storeLocationAll.filter(x => x.parent_code == code).map(x => x.location_name);\n      }\n    },\n\n    comboDistrictSelected() {\n      debugger;\n      this.wardValue = null;\n    },\n\n    comboWardBeforeExpand() {\n      if (!this.districtValue) return;else {\n        let code = this.storeLocationAll.find(x => x.location_name == this.districtValue)?.location_code;\n        this.storeWard = this.storeLocationAll.filter(x => x.parent_code == code).map(x => x.location_name);\n      }\n    },\n\n    comboWardSelected() {\n      debugger;\n    },\n\n    /**\r\n     * Hàm xử lý khi click filter tỉnh thành\r\n     * @created : quyetkaio\r\n     * @param {Number} filterOption: 0- bắc, 1 trung, 2 nam\r\n     */\n    filterButtonClick(filterOption) {\n      if (filterOption != null) {\n        let locations = [];\n\n        switch (filterOption) {\n          case 0:\n            {\n              //filter miền bắc\n              debugger;\n              locations = locationConfigCode.bacLocation;\n              this.storeLocation = this.storeLocationAll.filter(x => locations.includes(x.location_code));\n              this.showPaging = false;\n              break;\n            }\n\n          case 1:\n            //filter miền trung\n            locations = locationConfigCode.trungLocation;\n            this.storeLocation = this.storeLocationAll.filter(x => locations.includes(x.location_code));\n            this.showPaging = false;\n            break;\n\n          case 2:\n            //filter miền nam\n            locations = locationConfigCode.namLocation;\n            this.storeLocation = this.storeLocationAll.filter(x => locations.includes(x.location_code));\n            this.showPaging = false;\n            break;\n\n          default:\n            break;\n        }\n      }\n    },\n\n    /**\r\n     * Hàm xử lý khi số trang thay đổi\r\n     */\n    setCurrentPage(page) {\n      if (this.pageNumber == page) return;\n      this.pageNumber = page; //thực hiện filter lại\n\n      this.filterData(this.pageNumber);\n    },\n\n    /**\r\n     * Hàm tìm kiếm(local)\r\n     */\n    filterData(pageNumber) {\n      if (this.textSearch) {\n        let _textSearch = this.textSearch.toLowerCase();\n\n        this.storeLocation = this.storeLocationAll.filter((x, index) => index >= (pageNumber - 1) * this.pageSize && index < pageNumber * this.pageSize && (x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch)));\n        this.showPaging = true;\n      } else {\n        this.storeLocation = this.storeLocationAll.filter((x, index) => index >= (pageNumber - 1) * this.pageSize && index < pageNumber * this.pageSize);\n        this.showPaging = true;\n      }\n    },\n\n    /**\r\n     * Lấy dữ liệu trong indexDB ra\r\n     */\n    async getCacheLocation() {\n      this.locations = [];\n      var objectStore = await this.db.transaction(collection).objectStore(collection); // Sử dụng cursor để lấy lần lượt dữ liệu\n      // objectStore.openCursor().onsuccess = async event => {\n      //   var cursor = event.target.result;        \n      //   if (cursor) {\n      //     // Nếu có cursor. Push dữ liệu và tiếp tục với record tiếp theo\n      //     this.locations.push({\n      //       id: cursor.key,\n      //       value: cursor.value\n      //     });\n      //     cursor.continue();\n      //   }\n      //   if(!this.locations || this.locations?.length == 0){\n      //     this.getFreshLocation();\n      //   }else{\n      //     debugger\n      //     this.storeLocation = this.locations[0].value.filter((x,index)=> index<=10);\n      //     this.storeLocationAll = this.locations[0].value;\n      //   }\n      // };\n\n      let cacheLocations = objectStore.get(\"locations\"); //get theo key\n\n      cacheLocations.onsuccess = () => {\n        if (cacheLocations.result && cacheLocations.result.length > 0) {\n          this.storeLocation = cacheLocations.result.filter((x, index) => index < 10);\n          this.storeLocationAll = cacheLocations.result;\n          this.totalPage = Math.round(this.storeLocationAll.length / 10);\n          this.initDataLocation();\n        } else {\n          this.getFreshLocation();\n        }\n      };\n    },\n\n    /**\r\n     * Thêm mới vào db\r\n     * @param {Object|Array} data - dữ liệu cần lưu vào indexedDB\r\n     */\n    async addLocation(data) {\n      // Tạo transaction với mode readwrite      \n      var request = await this.db.transaction(collection, \"readwrite\").objectStore(collection).add(data, \"locations\");\n\n      request.onsuccess = event => {\n        // Lấy lại danh sách sau khi đã thêm giá trị mới thành công\n        this.getCacheLocation();\n      };\n    },\n\n    searchData: _.debounce(function () {\n      let me = this;\n\n      if (me.textSearch) {\n        let _textSearch = me.textSearch.toLowerCase();\n\n        me.storeLocation = me.storeLocationAll.filter(x => x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch));\n      } else {\n        me.storeLocation = me.storeLocationAll.filter(x => me.storeLocationAll.indexOf(x) < 10);\n      } // if(me.storeLocation && me.storeLocation.length == 0) this.showPaging = false;\n      // else{\n      //    if(me.storeLocation && me.storeLocation.length > 0){\n      //       me.totalPage = Math.round(me.storeLocationAll.length/10) ? Math.round(me.storeLocationAll.length/10) : 1;\n      //       this.showPaging = true;\n      //    }\n      // }\n\n    }, 1000),\n\n    /**------------------------------------------\r\n        * Nhận sự kiện khi button của function được click\r\n        * @created : quyetkaito (26/06/2022)\r\n        --------------------------------------------*/\n    handleFunctionClick(object) {\n      let me = this;\n\n      if (object) {\n        //kiểm tra xem nó là loại gì sửa hay xem hay xóa..\n        switch (me.tableFunction.mainFunction) {\n          case \"Edit\":\n            {// me.showDialog(object);\n            }\n        }\n      }\n    },\n\n    handleDoubleClick() {},\n\n    async initStaticData() {\n      //gọi api lấy tất cả danh sách tỉnh huyện xã, lưu vào cache\n      let me = this;\n      me.tableFunction = {\n        mainButtonText: \"Sửa\",\n        mainFunction: \"Edit\",\n        isShow: false\n      };\n      me.columns = [{\n        title: \"Tên địa điểm\",\n        key: \"location_name\",\n        width: 200\n      }, {\n        title: \"Mã\",\n        key: \"location_code\",\n        width: 200\n      }];\n    },\n\n    /**\r\n     * Hàm lấy mới danh sách địa chỉ\r\n     */\n    async getFreshLocation() {\n      let me = this;\n      let res = await LocationAPI.request(LocationAPI.urlName, \"get\");\n\n      if (res && res.data && res.data.length > 0) {\n        me.storeLocation = res.data.filter(x => x.parent_code == null);\n        me.storeLocationAll = res.data;\n        this.addLocation(res.data); //lưu vào indexedDB\n\n        this.totalPage = Math.round(this.storeLocationAll.length / 10);\n        this.initDataLocation();\n      }\n    },\n\n    initDataLocation() {\n      if (this.storeLocationAll && this.storeLocationAll.length > 0) {\n        this.storeProvince = this.storeLocationAll.filter(x => x.parent_code == null).map(x => x.location_name);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["_","LocationAPI","locationConfigCode","dbName","collection","data","textSearch","storeLocation","storeLocationAll","db","locations","pageNumber","pageSize","totalPage","showPaging","provinceValue","storeProvince","districtValue","storeDistrict","wardValue","storeWard","created","me","initStaticData","mounted","request","window","indexedDB","open","onsuccess","event","result","getCacheLocation","onupgradeneeded","target","createObjectStore","autoIncrement","methods","comboProvinceBeforeExpand","comboProvinceSelected","option","comboDistrictBeforeExpand","code","find","x","location_name","location_code","filter","parent_code","map","comboDistrictSelected","comboWardBeforeExpand","comboWardSelected","filterButtonClick","filterOption","bacLocation","includes","trungLocation","namLocation","setCurrentPage","page","filterData","_textSearch","toLowerCase","index","objectStore","transaction","cacheLocations","get","length","Math","round","initDataLocation","getFreshLocation","addLocation","add","searchData","debounce","indexOf","handleFunctionClick","object","tableFunction","mainFunction","handleDoubleClick","mainButtonText","isShow","columns","title","key","width","res","urlName"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\location\\LocationList.vue"],"sourcesContent":["<template>\r\n<div class=\"location-list\">\r\n  <div class=\"filter\">\r\n    <m-input :showLabel=\"false\" v-model=\"textSearch\" @input=\"searchData\" placeholder=\"Tìm kiếm\"/>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(0)\">Miền Bắc</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(1)\">Miền Trung</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(2)\">Miền Nam</div> \r\n    <div class=\"flex align-center\" v-if=\"true\">\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"province\"        \r\n          v-model=\"provinceValue\"\r\n          :options=\"storeProvince\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn tỉnh\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboProvinceSelected\"   \r\n          @open=\"comboProvinceBeforeExpand\"     \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"district\"        \r\n          v-model=\"districtValue\"\r\n          :options=\"storeDistrict\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn huyện\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboDistrictSelected\"  \r\n          @open=\"comboDistrictBeforeExpand\"      \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"ward\"        \r\n          v-model=\"wardValue\"\r\n          :options=\"storeWard\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn xã\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboWardSelected\"  \r\n          @open=\"comboWardBeforeExpand\"  \r\n        />\r\n      </div>\r\n    </div>     \r\n  </div>\r\n  <div class=\"content-grid\">\r\n    <div class=\"table-container\">\r\n      <m-grid\r\n        :listData=\"storeLocation\"\r\n        :columns=\"columns\"\r\n        @dblClick=\"handleDoubleClick\"\r\n        :tableFunction=\"tableFunction\"\r\n        @eMainButtonClick=\"handleFunctionClick\"\r\n        @eDoubleClick=\"handleDoubleClick\"\r\n        :multiSelect=\"false\"\r\n      />      \r\n    </div>\r\n    <div class=\"m-paging\" v-if=\"showPaging\">\r\n      <m-pagination\r\n        :totalPage=\"totalPage\"\r\n        :currentPage=\"pageNumber\"\r\n        :pageSize=\"pageSize\"\r\n        @changeCurrentPage=\"setCurrentPage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\nimport LocationAPI from \"@/api/LocationAPI\";\r\nimport locationConfigCode from \"@/config/locationConfig\";\r\n// Khởi tạo một số hằng sử dụng nhiều lần\r\nconst dbName = \"myDB\";\r\nconst collection = \"locations\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textSearch: null,\r\n      storeLocation: [], //danh sách\r\n      storeLocationAll: [],\r\n      db: null, //indexedDB\r\n      locations: [],            \r\n      pageNumber: 1,\r\n      pageSize: 10,\r\n      totalPage: 0,\r\n      showPaging: true,\r\n      provinceValue: null,\r\n      storeProvince: [],     \r\n      districtValue: null,\r\n      storeDistrict: [],\r\n      wardValue: null,\r\n      storeWard: [], \r\n    };\r\n  },\r\n  created() {\r\n    let me = this;   \r\n    this.initStaticData(); \r\n  },\r\n  mounted(){        \r\n    // Kết nối DB\r\n    var request = window.indexedDB.open(dbName, 1);\r\n     // Nếu thành công. Tiến hành lấy notes về\r\n    request.onsuccess = async event => {\r\n      this.db = request.result;      \r\n      await this.getCacheLocation();      \r\n    };\r\n\r\n    // Kết nối lần đầu. Tiến hành khởi tạo objectStore với tên collection\r\n    request.onupgradeneeded = event => {\r\n      this.db = event.target.result;\r\n      this.db.createObjectStore(collection, {\r\n        autoIncrement: true\r\n      });\r\n    };  \r\n  },\r\n  methods: {\r\n    comboProvinceBeforeExpand(){\r\n        debugger\r\n    },\r\n\r\n    comboProvinceSelected(option){\r\n        debugger\r\n        this.districtValue = null; //xóa huyện, xã đi\r\n        this.wardValue = null;\r\n    },\r\n\r\n    comboDistrictBeforeExpand(){\r\n        debugger\r\n        if(!this.provinceValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.provinceValue)?.location_code;\r\n          this.storeDistrict = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboDistrictSelected(){\r\n        debugger\r\n       this.wardValue = null;\r\n    },\r\n\r\n    comboWardBeforeExpand(){\r\n       if(!this.districtValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.districtValue)?.location_code;\r\n          this.storeWard = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboWardSelected(){\r\n      debugger\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n     * Hàm xử lý khi click filter tỉnh thành\r\n     * @created : quyetkaio\r\n     * @param {Number} filterOption: 0- bắc, 1 trung, 2 nam\r\n     */\r\n    filterButtonClick(filterOption){\r\n      if(filterOption != null){\r\n        let locations = [];\r\n         switch (filterOption) {\r\n          case 0:{\r\n            //filter miền bắc\r\n            debugger\r\n            locations = locationConfigCode.bacLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          }\r\n          case 1: \r\n            //filter miền trung\r\n            locations = locationConfigCode.trungLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          case 2:\r\n            //filter miền nam\r\n            locations = locationConfigCode.namLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n         \r\n          default:\r\n            break;\r\n         }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Hàm xử lý khi số trang thay đổi\r\n     */\r\n    setCurrentPage(page){\r\n      if(this.pageNumber == page) return;\r\n      this.pageNumber = page;\r\n      //thực hiện filter lại\r\n      this.filterData(this.pageNumber);\r\n    },\r\n\r\n    /**\r\n     * Hàm tìm kiếm(local)\r\n     */\r\n    filterData(pageNumber){\r\n        if(this.textSearch){              \r\n              let _textSearch = this.textSearch.toLowerCase();\r\n              this.storeLocation = this.storeLocationAll.filter((x,index) => \r\n                index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize\r\n                && (x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch))\r\n                );  \r\n              this.showPaging = true; \r\n        }else{\r\n           this.storeLocation = this.storeLocationAll.filter((x,index) => index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize);\r\n           this.showPaging = true;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Lấy dữ liệu trong indexDB ra\r\n     */\r\n    async getCacheLocation() {\r\n      this.locations = [];\r\n      var objectStore = await this.db.transaction(collection).objectStore(collection);      \r\n      // Sử dụng cursor để lấy lần lượt dữ liệu\r\n      // objectStore.openCursor().onsuccess = async event => {\r\n      //   var cursor = event.target.result;        \r\n      //   if (cursor) {\r\n      //     // Nếu có cursor. Push dữ liệu và tiếp tục với record tiếp theo\r\n      //     this.locations.push({\r\n      //       id: cursor.key,\r\n      //       value: cursor.value\r\n      //     });\r\n      //     cursor.continue();\r\n      //   }\r\n      //   if(!this.locations || this.locations?.length == 0){\r\n      //     this.getFreshLocation();\r\n      //   }else{\r\n      //     debugger\r\n      //     this.storeLocation = this.locations[0].value.filter((x,index)=> index<=10);\r\n      //     this.storeLocationAll = this.locations[0].value;\r\n      //   }\r\n      // };\r\n\r\n      let cacheLocations = objectStore.get(\"locations\"); //get theo key\r\n      cacheLocations.onsuccess = ()=>{\r\n        if(cacheLocations.result && cacheLocations.result.length > 0){\r\n          this.storeLocation = cacheLocations.result.filter((x,index)=> index<10);\r\n          this.storeLocationAll = cacheLocations.result;\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n        }else{\r\n          this.getFreshLocation();\r\n        }                 \r\n      }      \r\n    },\r\n\r\n    /**\r\n     * Thêm mới vào db\r\n     * @param {Object|Array} data - dữ liệu cần lưu vào indexedDB\r\n     */\r\n    async addLocation(data) {\r\n      // Tạo transaction với mode readwrite      \r\n      var request = await this.db\r\n        .transaction(collection, \"readwrite\")\r\n        .objectStore(collection)\r\n        .add(data, \"locations\");       \r\n      request.onsuccess = event => {\r\n        // Lấy lại danh sách sau khi đã thêm giá trị mới thành công\r\n        this.getCacheLocation();\r\n      };\r\n    },\r\n\r\n    searchData: _.debounce(function () {\r\n        let me = this;\r\n        if(me.textSearch){\r\n            let _textSearch = me.textSearch.toLowerCase();        \r\n            me.storeLocation = me.storeLocationAll.filter(x=>x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch));            \r\n        }else{\r\n            me.storeLocation = me.storeLocationAll.filter(x=>me.storeLocationAll.indexOf(x) < 10);            \r\n        }\r\n        // if(me.storeLocation && me.storeLocation.length == 0) this.showPaging = false;\r\n        // else{\r\n        //    if(me.storeLocation && me.storeLocation.length > 0){\r\n        //       me.totalPage = Math.round(me.storeLocationAll.length/10) ? Math.round(me.storeLocationAll.length/10) : 1;\r\n        //       this.showPaging = true;\r\n        //    }\r\n        // }\r\n    }, 1000),\r\n    \r\n\r\n    /**------------------------------------------\r\n        * Nhận sự kiện khi button của function được click\r\n        * @created : quyetkaito (26/06/2022)\r\n        --------------------------------------------*/\r\n    handleFunctionClick(object) {\r\n      let me = this;\r\n      if (object) {\r\n        //kiểm tra xem nó là loại gì sửa hay xem hay xóa..\r\n        switch (me.tableFunction.mainFunction) {\r\n          case \"Edit\": {\r\n            // me.showDialog(object);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    handleDoubleClick() {},\r\n\r\n    async initStaticData() {\r\n      //gọi api lấy tất cả danh sách tỉnh huyện xã, lưu vào cache\r\n      let me = this;\r\n      me.tableFunction = {\r\n        mainButtonText: \"Sửa\",\r\n        mainFunction: \"Edit\",\r\n        isShow: false,\r\n      };\r\n      me.columns = [\r\n        {\r\n          title: \"Tên địa điểm\",\r\n          key: \"location_name\",\r\n          width: 200,\r\n        },\r\n        {\r\n          title: \"Mã\",\r\n          key: \"location_code\",\r\n          width: 200,\r\n        },\r\n      ];     \r\n    \r\n    },\r\n\r\n    /**\r\n     * Hàm lấy mới danh sách địa chỉ\r\n     */\r\n    async getFreshLocation(){\r\n      let me = this;      \r\n      let res = await LocationAPI.request(LocationAPI.urlName, \"get\");\r\n      if (res && res.data && res.data.length > 0) {\r\n          me.storeLocation = res.data.filter(x=>x.parent_code == null);    \r\n          me.storeLocationAll  = res.data;\r\n          this.addLocation(res.data); //lưu vào indexedDB\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n      }\r\n    },\r\n\r\n    initDataLocation(){\r\n      if(this.storeLocationAll && this.storeLocationAll.length > 0){\r\n        this.storeProvince = (this.storeLocationAll.filter(x=>x.parent_code == null)).map(x=>x.location_name);          \r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.location-list{\r\n  .filter{\r\n    margin: 10px;    \r\n    display: flex;\r\n    .filter-button{\r\n      height: 40px;\r\n      width: fit-content;\r\n      white-space: nowrap;\r\n      background: white;\r\n      color: black;\r\n      border-radius: 5px;\r\n      margin-right: 5px;\r\n      margin-left: 5px;\r\n      padding: 5px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n    }\r\n    .filter-button:hover{\r\n      background: var(--info-color);\r\n      color: white;\r\n    }\r\n    .filter-button.active{\r\n        background: var(--info-color);\r\n        color: white;\r\n    }\r\n    .filter-combo{\r\n      width: 200px;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .content-grid{\r\n    // .paging-container{\r\n    //   margin-top: 5px;\r\n    //   margin-left: 5px;\r\n    // }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
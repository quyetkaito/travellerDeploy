{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"function-container\"\n};\nconst _hoisted_2 = {\n  class: \"save-btn-container\"\n};\nconst _hoisted_3 = {\n  class: \"post-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ckeditor = _resolveComponent(\"ckeditor\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"m-btn-second btn-save mr-2\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.buttonClick('SaveTemp'))\n  }, _toDisplayString(_ctx.$t('SaveTemp')), 1), _createElementVNode(\"button\", {\n    class: \"m-btn btn-save\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.buttonClick('Save'))\n  }, _toDisplayString(_ctx.$t('Save')), 1)])]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input-title\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.currentItem.post_title = $event),\n    placeholder: \"Title\"\n  }, null, 512), [[_vModelText, $data.currentItem.post_title]])]), _createVNode(_component_ckeditor, {\n    editor: $data.editor,\n    modelValue: $data.currentItem.post_content,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.currentItem.post_content = $event),\n    \"upload-adapter\": $options.UploadAdapter,\n    ref: \"editorComponent\",\n    class: \"editor-component\"\n  }, null, 8, [\"editor\", \"modelValue\", \"upload-adapter\"]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.emptyEditor && $options.emptyEditor(...args))\n  }, \"Empty the editor\"), _createElementVNode(\"code\", null, _toDisplayString($data.currentItem.post_content), 1)]);\n}","map":{"version":3,"mappings":";;EAGSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EAeVA,KAAK,EAAC;;;;;uBAjBbC,oBA0CM,KA1CN,EA0CM,IA1CN,EA0CM,CAzCJC,oBAeM,KAfN,cAeM,CAdFA,oBAaM,KAbN,cAaM,CAZLA,oBAKQ,QALR,EAKQ;IAJLF,KAAK,EAAC,4BAID;IAHJG,OAAK,sCAAEC,qBAAW,UAAX,CAAF;EAGD,CALR,mBAIKC,QAAE,UAAF,EAJL,EAIO,CAJP,CAYK,EANNH,oBAKS,QALT,EAKS;IAJLF,KAAK,EAAC,gBAID;IAHJG,OAAK,sCAAEC,qBAAW,MAAX,CAAF;EAGD,CALT,mBAIMC,QAAE,MAAF,EAJN,EAIQ,CAJR,CAMM,CAbN,CAcE,CAfN,CAyCI,EAzBJH,oBAeM,KAfN,cAeM,iBAdFA,oBAIqB,OAJrB,EAIqB;IAHrBF,KAAK,EAAC,aAGe;IAFrBM,IAAI,EAAC,MAEgB;+DADZC,kBAAYC,aAAUC,OACV;IAArBC,WAAW,EAAC;EAAS,CAJrB,6BAGSH,kBAAYC,aAWnB,CAfN,CAyBI,EATJG,aAMWC,mBANX,EAMW;IANAC,MAAM,EAAEN,YAMR;gBALEA,kBAAYO,YAKd;+DALEP,kBAAYO,eAAYL,OAK1B;IAJN,kBAAgBL,sBAIV;IAHPW,GAAG,EAAC,iBAGG;IAFPf,KAAK,EAAC;EAEC,CANX,sDASI,EAFJE,oBAAsD,QAAtD,EAAsD;IAA7CC,OAAK,yCAAEC,qDAAF;EAAwC,CAAtD,EAA6B,kBAA7B,CAEI,EADJF,oBAA2C,MAA3C,EAA2C,IAA3C,EAA2Cc,iBAAlCT,kBAAYO,YAAsB,CAA3C,EAAiC,CAAjC,CACI,CA1CN","names":["class","_createElementBlock","_createElementVNode","onClick","$options","_ctx","type","$data","post_title","$event","placeholder","_createVNode","_component_ckeditor","editor","post_content","ref","_toDisplayString"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostEditorDetail.vue"],"sourcesContent":["// Form CKEditor\r\n<template>\r\n  <div>\r\n    <div class=\"function-container\">\r\n        <div class=\"save-btn-container\">\r\n         <button\r\n            class=\"m-btn-second btn-save mr-2\"\r\n            @click=\"buttonClick('SaveTemp')\"                  \r\n        >\r\n            {{$t('SaveTemp')}}\r\n        </button>\r\n        <button\r\n            class=\"m-btn btn-save\"\r\n            @click=\"buttonClick('Save')\"                  \r\n        >\r\n            {{$t('Save')}}\r\n        </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"post-title\">\r\n        <input \r\n        class=\"input-title\"\r\n        type=\"text\"\r\n        v-model=\"currentItem.post_title\"\r\n        placeholder=\"Title\"/>\r\n        <!-- <m-input\r\n            ref=\"inputTitle\"\r\n            v-model=\"currentItem.post_title\"\r\n            placeholder=\"Tiêu đề\"\r\n            :style=\"{'width': 100 + 'px;'}\"\r\n            labelText=\"Tiêu đề\"\r\n        >\r\n\r\n        </m-input> -->\r\n    </div>\r\n    <ckeditor :editor=\"editor\"\r\n        v-model=\"currentItem.post_content\"\r\n        :upload-adapter=\"UploadAdapter\"\r\n        ref=\"editorComponent\"\r\n        class=\"editor-component\"\r\n    >\r\n    </ckeditor>\r\n    <button @click=\"emptyEditor\">Empty the editor</button>    \r\n    <code>{{ currentItem.post_content }}</code>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport PostAPI from '@/api/PostAPI';\r\nexport default {\r\n    data() {\r\n        return {\r\n            editor: ClassicEditor,\r\n            editorData: '<p>Content of the editor.</p>',\r\n            currentItem: {},\r\n            styleCustom:{\r\n                'font-weight': 'bold!important;',\r\n            },\r\n            \r\n        }\r\n    },\r\n    methods:{\r\n        \r\n        buttonClick(action){\r\n            let me = this;\r\n            switch (action) {\r\n                case 'Save':// lưu vào csdl\r\n                me.savePost() ;                   \r\n                    break;\r\n                case 'SaveTemp'://lưu tạm                    \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n\r\n        async savePost(isTemp){\r\n            let me = this;\r\n            if(me.validateBusiness()){\r\n                me.prepareDataBeforeSave(isTemp);\r\n                let res = await PostAPI.request(PostAPI.urlName, 'POST', me.currentItem);\r\n                if(res){\r\n                    debugger\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        prepareDataBeforeSave(isTemp){\r\n            let me = this;\r\n            me.currentItem.posted_date = new Date();\r\n            me.currentItem.status = isTemp? me.$enum.PostStatus.Temp : me.$enum.PostStatus.Posted; \r\n            me.currentItem.author = me.$session.get('UserID') ? me.$session.get('UserID') : \"\";\r\n        },\r\n\r\n        async validateBusiness(){\r\n            let me = this;\r\n            if(!me.currentItem.post_title){\r\n                return false;\r\n            }\r\n            return true;\r\n\r\n        },\r\n\r\n        emptyEditor() {\r\n            this.editorData = '';\r\n        },\r\n\r\n        UploadAdapter: function (loader) {\r\n            this.loader = loader;\r\n            loader.file.then(response =>{\r\n                let file = response;\r\n                this.upload = () => {\r\n                    const body = new FormData();\r\n                    body.append('file', this.loader.file);\r\n\r\n                    return fetch('http://localhost:8000/api/imageUpload', {\r\n                    headers: {\r\n                        'Content-Type': \"multipart/form-data; charset=utf-8; boundary=\" + Math.random().toString().substr(2),\r\n                        'Accept': 'application/json'\r\n                    },\r\n                    body: body,\r\n                    method: 'post'\r\n                            })\r\n                    .then(response => response.json())\r\n                    .then(downloadUrl => {\r\n                        return {\r\n                            default: downloadUrl\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n                }\r\n                this.abort = () => {\r\n                    console.log('Abort upload.')\r\n                }\r\n            })\r\n            \r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.function-container{\r\n    padding: 10px;\r\n}\r\n.save-btn-container{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n.post-title{\r\n    width: 100%;\r\n}\r\n.post-title .input-title{\r\n    width: 100%;\r\n    outline: none;\r\n    font-family: inherit;    \r\n    font-weight: bold;\r\n    padding: 10px;\r\n}\r\n.input-title-custom{\r\n    border-radius: 0!important;\r\n}\r\n\r\n.editor-component{\r\n    height: 100vh;\r\n}\r\n.ck-editor__editable {\r\n    min-height: 500px!important;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//import Library\nimport axios from \"axios\"; // import vClickOutside from \"click-outside-vue3\";\n\nimport _ from \"lodash\"; // const FileDownload = require(\"js-file-download\");\n//multi vue 3\n\nimport vMultiselect from \"@vueform/multiselect\";\nimport \"@vueform/multiselect/themes/default.css\"; //import my js\n// import this.$enum from \"@/js/enum\";\n// import Resource from \"@/js/resource\";\n// import { LOCAL_EMPLOYEE_API_URL } from \"/public/config.js\";\n// import EmployeeDetail from \"@/views/employee/EmployeeDetail.vue\";\n// import MSPagination from \"@/components/base/MSPagination.vue\";\n\nexport default {\n  name: \"EmployeeList\",\n  components: {\n    // \"ms-employee-dialog\": EmployeeDetail,\n    // \"ms-pagination\": MSPagination,\n    \"v-multiselect\": vMultiselect\n  },\n\n  //   directives: {\n  //     clickOutside: vClickOutside.directive,\n  //   },\n\n  /**---------------------------\r\n   * Giai đoạn 2: có thể truy cập vào data, event, chưa truy cập dc DOM\r\n   -----------------------------*/\n  created() {//this.loadData();\n  },\n\n  /**--------------\r\n   * Data\r\n  -----------------*/\n  data() {\n    return {\n      pageTitle: \"Mã giảm giá\",\n      employees: [],\n      //danh sách nhân viên\n      isShowDialog: false,\n      //dialog có hiện không?\n      isShowPopup: false,\n      //popup có hiện không?\n      isShowFunc: false,\n      //function của table có hiện không?\n      isShowMultiAction: false,\n      //dropdown của thực hiện hàng loạt có hiện không?\n      isShowSkeleton: false,\n      //có đang hiện skeleton ko?\n      employeeSelected: {},\n      //đối tượng nhân viên đang được chọn để thao tác.\n      formMode: 0,\n      //trạng thái form đang là gì?\n      //set text,type cho popup\n      popupText: null,\n      popupType: null,\n      isMultiDelete: false,\n      //có đang xóa nhiều không?\n      //thông tin của toast\n      toastText: \"toast-text\",\n      toastType: 0,\n      //các option cho paging\n      pagingOptions: [{\n        label: \"10 bản ghi trên 1 trang\",\n        value: 10\n      }, {\n        label: \"20 bản ghi trên 1 trang\",\n        value: 20\n      }, {\n        label: \"30 bản ghi trên 1 trang\",\n        value: 30\n      }, {\n        label: \"50 bản ghi trên 1 trang\",\n        value: 50\n      }, {\n        label: \"100 bản ghi trên 1 trang\",\n        value: 100\n      }],\n      disableComboboxPaging: false,\n      pageNumber: 1,\n      //trang số bao nhiêu\n      pageSize: 10,\n      //số bản ghi trên 1 trang\n      totalPage: null,\n      //tổng số trang\n      totalEmp: null,\n      //tổng số bản ghi dữ liệu\n      dataFilter: \"\",\n      //giá trị để tìm kiếm\n      multiDeleteText: \"Xóa\",\n      //thông tin khởi tạo table\n      //danh sách các tiêu đề và fieldName của bảng\n      listHeader: [{\n        text: \"Mã nhân viên\",\n        fieldName: \"employee_code\",\n        align: \"text-align-left\"\n      }, {\n        text: \"Tên nhân viên\",\n        fieldName: \"employee_name\",\n        align: \"text-align-left\",\n        width: \"w-250\"\n      }, {\n        text: \"Giới tính\",\n        fieldName: \"gender_name\",\n        align: \"text-align-left\"\n      }, {\n        text: \"Ngày sinh\",\n        fieldName: \"date_of_birth\",\n        align: \"text-align-center\"\n      }, {\n        text: \"Số CMND\",\n        textFull: \"Số chứng minh nhân dân\",\n        fieldName: \"identity_number\",\n        align: \"text-align-left\",\n        width: \"w-70\"\n      }, {\n        text: \"Chức danh\",\n        fieldName: \"position_name\",\n        align: \"text-align-left\",\n        width: \"w-100\"\n      }, {\n        text: \"Tên đơn vị\",\n        fieldName: \"department_name\",\n        align: \"text-align-left\",\n        width: \"w-200\"\n      }, {\n        text: \"Số tài khoản\",\n        fieldName: \"bank_account_number\",\n        align: \"text-align-left\"\n      }, {\n        text: \"Tên ngân hàng\",\n        fieldName: \"bank_name\",\n        align: \"text-align-left\"\n      }, {\n        text: \"Chi nhánh TK ngân hàng\",\n        textFull: \"Chi nhánh tài khoản ngân hàng\",\n        fieldName: \"bank_branch_name\",\n        align: \"text-align-left\"\n      }, {\n        text: \"Địa chỉ\",\n        textFull: \"Chi nhánh tài khoản ngân hàng\",\n        fieldName: \"address\",\n        align: \"text-align-left\",\n        columnWidth: 300\n      }],\n      //các function của table\n      tableFunction: [{\n        title: \"Nhân bản\",\n        value: this.$enum.TableFunction.Clone\n      }, {\n        title: \"Xóa\",\n        value: this.$enum.TableFunction.Delete\n      }, {\n        title: \"Ngừng sử dụng\",\n        value: this.$enum.TableFunction.Stop\n      }],\n      listEmployeeChecked: []\n    };\n  },\n\n  /**-----------------\r\n   * Các phương thức\r\n   -------------------*/\n  methods: {\n    showToast() {\n      // this.$store.commit('showError', {\n      //     message: 'Lỗi rồi em ei',\n      //     position: 'top-center',\n      //     timeout: 10000,\n      // });\n      debugger;\n      this.$commonFunc.convertToBase64(\"123123\");\n    },\n\n    openMessage() {\n      this.$mgsBox.show();\n    },\n\n    /**--------------------------\r\n     * Hàm thực hiện đóng dialog nhân viên.\r\n     * Author: quyetnv(22/03/2022)\r\n     -----------------------------*/\n    closeDialog() {\n      this.employeeSelected = {};\n      this.formMode = 0;\n      this.isShowDialog = false;\n    },\n\n    /**----------------------------------\r\n     * Hàm gọi API xuất dữ liệu.\r\n     * Author: quyetkaito (15/03/2022)\r\n     -------------------------------*/\n    exportData() {// let me = this;\n      // me.$refs.mLoading.show();\n      // let object = {};\n      // object.tableInfos = me.listHeader;\n      // object.dataFilter = me.dataFilter;\n      // //gửi lên server danh sách các header\n      // axios\n      //   .post(`${LOCAL_EMPLOYEE_API_URL}/export`, object, {\n      //     responseType: \"blob\",\n      //   })\n      //   .then((response) => {\n      //     FileDownload(response.data, \"Danh_sach_nhan_vien.xlsx\");\n      //     me.$refs.mLoading.hide();\n      //   })\n      //   .catch(() => {\n      //     me.$refs.mLoading.hide();\n      //   });\n    },\n\n    /**--------------------------------------\r\n     * Xử lý khi nút [Xóa hàng loạt] được chọn\r\n     * Author: quyetkaito (14/03/2022)\r\n    ----------------------------------*/\n    handleMultiDelete() {\n      this.isMultiDelete = true; //show cảnh báo xóa nhiều\n\n      this.showPopup(this.$enum.PopupType.DataDelete);\n    },\n\n    /**----------------------------\r\n     * Thực hiện gọi API xóa nhiều.\r\n     * Author: quyetkaito (14/03/2022)\r\n     ------------------------------*/\n    multiDeleteEmployee() {// let me = this;\n      // //hiện loading\n      // me.$refs.mLoading.show();\n      // //gọi API xóa nhiều\n      // axios\n      //   .delete(`${LOCAL_EMPLOYEE_API_URL}`, { data: me.listEmployeeChecked })\n      //   .then(() => {\n      //     //đóng popup\n      //     me.showMessagebox(false);\n      //     //thông báo thành công\n      //     // me.toastText = Resource.SuccessDelete;\n      //     me.$refs.msToast.show();\n      //     //reset lại danh sách employee được chọn\n      //     me.listEmployeeChecked = [];\n      //     me.isMultiDelete = false;\n      //     //ẩn loading\n      //     me.$refs.mLoading.hide();\n      //     //load lại dữ liệu\n      //     me.loadData();\n      //     //bỏ dấu check all\n      //     this.$refs.mygrid.unCheckAll();\n      //   })\n      //   .catch((error) => {\n      //     me.handleException(error);\n      //     //reset lại danh sách employee được chọn\n      //     me.listEmployeeChecked = [];\n      //     me.isMultiDelete = false;\n      //     me.$refs.mLoading.hide();\n      //   });\n    },\n\n    /**-----------------------------------------------------\r\n     * Lấy danh sách id của các employee được chọn từ bảng.\r\n     * @param {Array} listChecked - mảng các đối tượng nhân viên được chọn.\r\n     * Author: quyetkaito (14/03/2022)\r\n     -------------------------------------------------------*/\n    getEmployeeSelected(listChecked) {\n      try {\n        //lấy ra id của đối tượng\n        listChecked.forEach(employee => {\n          //push vào mảng các id của nhân viên\n          this.listEmployeeChecked.push(employee.employee_id);\n        });\n      } catch (error) {\n        //log ra lỗi\n        console.log(error);\n      }\n    },\n\n    /**-----------------------------------\r\n     * Thực hiện ẩn/ hiện nút \"Xóa nhiều\".\r\n     * Author: quyetkaito (14/03/2022)\r\n     -------------------------------------*/\n    toggleMultiAction() {\n      this.isShowMultiAction = !this.isShowMultiAction;\n    },\n\n    /**--------------------------------\r\n     * Thực hiện ẩn nút \"Xóa nhiều\".\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\n    hideMultiAction() {\n      this.isShowMultiAction = false;\n    },\n\n    /**-------------------------------------\r\n     * Thực hiện delay call API khi tìm kiếm.\r\n     * Author: quyetkaito (15/03/2022)\r\n    ---------------------------------*/\n    lodashDelay: _.debounce(function () {\n      this.filterDataServer();\n    }, 1200),\n\n    /**--------------------------------\r\n     * Hàm gọi API tìm kiếm dữ liệu từ server.\r\n     * Author: quyetkaito (03/03/2022)\r\n     ----------------------------------*/\n    filterDataServer(pageNumber) {// let me = this;\n      // //reset mảng employee\n      // me.employees = [];\n      // //show loading\n      // me.isShowSkeleton = true;\n      // //xử lý đầu vào API\n      // if (!pageNumber) pageNumber = 1;\n      // if (!me.pageSize) me.pageSize = 10;\n      // let value = this.dataFilter.toString();\n      // //gọi api lấy dữ liệu theo filter\n      // axios\n      //   .get(\n      //     `${LOCAL_EMPLOYEE_API_URL}/filter?pageSize=${me.pageSize}&pageNumber=${pageNumber}&textFilter=${value}`\n      //   )\n      //   .then((response) => {\n      //     //nếu có kết quả\n      //     if (response.status == this.$enum.StatusCode.OK) {\n      //       //gán response vào danh sách nhân viên\n      //       me.employees = response.data.Data;\n      //       //gán tổng số bản ghi\n      //       me.totalEmp = response.data.TotalRecord;\n      //       //gán tổng số trang\n      //       me.totalPage = response.data.TotalPage;\n      //       //ẩn loading\n      //       me.isShowSkeleton = false;\n      //     }\n      //     //nếu không có kết quả\n      //     if (response.status == this.$enum.StatusCode.NoContent) {\n      //       me.employees = {};\n      //       me.totalEmp = 0;\n      //       me.isShowSkeleton = false;\n      //     }\n      //   })\n      //   .catch((res) => {\n      //     //xử lý lỗi...\n      //     me.handleException(res);\n      //   });\n    },\n\n    /**----------------------------------------\r\n     * Hàm thực hiện load data (đã phân trang) binding vào bảng.\r\n     * Author: quyetkaito (25/02/2022)\r\n     ------------------------------------------*/\n    loadData() {// try {\n      //   let me = this;\n      //   //không cho phân trang\n      //   me.disableComboboxPaging = true;\n      //   me.dataFilter = \"\";\n      //   me.employees = [];\n      //   // me.employeeSelected = {};\n      //   me.formMode = 0;\n      //   if (!me.pageSize) me.pageSize = 10;\n      //   if (!me.pageNumber || me.pageNumber != 1) me.pageNumber = 1;\n      //   //show loading\n      //   me.isShowSkeleton = true;\n      //   //gọi API lấy dữ liệu nhân viên\n      //   axios\n      //     .get(\n      //       `${LOCAL_EMPLOYEE_API_URL}/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumber}`\n      //     )\n      //     .then((response) => {\n      //       //gán response vào danh sách nhân viên\n      //       me.employees = response.data.Data;\n      //       //gán tổng số bản ghi\n      //       me.totalEmp = response.data.TotalRecord;\n      //       //gán tổng số trang\n      //       me.totalPage = response.data.TotalPage;\n      //       //cho phép phân trang\n      //       me.disableComboboxPaging = false;\n      //       me.isShowSkeleton = false;\n      //     })\n      //     .catch((error) => {\n      //       //xử lý lỗi\n      //       me.handleException(error);\n      //       //ẩn loading\n      //       me.isShowSkeleton = false;\n      //     });\n      // } catch (error) {\n      //   this.showDefaultErrorNotify();\n      //   console.log(error);\n      // }\n    },\n\n    /**-------------------------------\r\n     * Hàm xử lý mở Dialog nhân viên\r\n     * @param {Object} data - đối tượng nhân viên truyền vào\r\n     * @param {Number} formMode - trạng thái form thêm/sửa/xóa\r\n     * Author: quyetkaito (16/03/2022)\r\n     ---------------------------------*/\n    openDialog({\n      data,\n      formMode\n    }) {\n      try {\n        //gán formMode\n        this.formMode = formMode; //nếu là thêm mới hoặc nhân bản\n\n        if (formMode == this.$enum.FormMode.Post || formMode == this.$enum.FormMode.Clone) {\n          //gọi lấy mã mới\n          this.$refs.addDialog.getNewEmployeeCode();\n        }\n\n        this.employeeSelected = data;\n\n        if (this.employeeSelected.DateOfBirth) {\n          //format ngày sinh để cho vào datepicker\n          this.employeeSelected.DateOfBirth = new Date(this.employeeSelected.DateOfBirth);\n        }\n\n        if (this.employeeSelected.IdentityDate) {\n          //format ngày cấp cmnd để cho vào datepicker\n          this.employeeSelected.IdentityDate = new Date(this.employeeSelected.IdentityDate);\n        } //show dialog\n\n\n        this.isShowDialog = true;\n      } catch (error) {\n        this.showDefaultErrorNotify();\n        console.log(error);\n      }\n    },\n\n    /**-------------------------------------------------\r\n     * Thực hiện show/hide dialog truyền cho child component.\r\n     * @param {Boolean} value - true là hiện, false là ẩn .\r\n     * Author: quyetkaito (24/02/2022)\r\n     ---------------------------------------------------*/\n    showEmployeeDialog(value) {\n      this.isShowDialog = value;\n    },\n\n    /**-------------------------------------------\r\n     * Hàm thực hiện xóa employee.\r\n     * @param {Object} employee - 1 đối tượng cần xóa.\r\n     * Author: quyetkaito (22/02/2022)\r\n     ---------------------------------------------*/\n    deleteEmployee(employee) {// const me = this;\n      // //hiện loading\n      // me.$refs.mLoading.show();\n      // //2. thực hiện xóa\n      // axios\n      //   .delete(`${LOCAL_EMPLOYEE_API_URL}/${employee.EmployeeId}`)\n      //   .then(function () {\n      //     //đóng popup\n      //     me.showMessagebox(false);\n      //     //ẩn loading\n      //     me.$refs.mLoading.hide();\n      //     //thông báo thành công\n      //     // me.toastText = Resource.SuccessDelete;\n      //     me.$refs.msToast.show();\n      //     //load lại dữ liệu\n      //     me.loadData();\n      //   })\n      //   .catch((error) => {\n      //     //hiển thị popup thông báo ko thành công\n      //     // me.showPopup(this.$enum.PopupType.DataError, Resource.FailDelete);\n      //     me.handleException(error);\n      //     //ẩn loading\n      //     me.$refs.mLoading.hide();\n      //   });\n    },\n\n    /**------------------------------------------\r\n     * Hàm xử lý nhận sự kiện sửa từ table.\r\n     * @param {Object} - một đối tượng cần sửa + formMode.\r\n     * Author: quyetkaito (23/02/2022)\r\n     --------------------------------------------*/\n    handleUpdate({\n      data,\n      formMode\n    }) {// let me = this;\n      // if (data) {\n      //   //show loading\n      //   me.$refs.mLoading.show();\n      //   //lấy thông tin mới từ server bind vào form\n      //   axios\n      //     .get(`${LOCAL_EMPLOYEE_API_URL}/${data.employee_id}`)\n      //     .then((res) => {\n      //       //gán dữ liệu mới để bind vào form\n      //       me.employeeSelected = res.data;\n      //       me.employeeSelected.date_of_birth = new Date(\n      //         me.employeeSelected.date_of_birth\n      //       );\n      //       me.employeeSelected.identity_date = new Date(\n      //         me.employeeSelected.identity_date\n      //       );\n      //       //chuyển trạng thái submit sang sửa\n      //       me.formMode = formMode;\n      //       //show dialog\n      //       me.showEmployeeDialog(true);\n      //       //ẩn loading\n      //       me.$refs.mLoading.hide();\n      //     })\n      //     .catch((error) => {\n      //       me.handleException(error);\n      //       //ẩn loading\n      //       me.$refs.mLoading.hide();\n      //     });\n      // }\n    },\n\n    /**-----------------------------------------------\r\n     * Hàm xử lý khi nút [Xóa] được click.\r\n     * @param {Object} employee - 1 đối tượng cần xóa.\r\n     * Author: quyetkaito (25/02/2022)\r\n     ------------------------------------------------*/\n    handleDelete(value) {\n      if (value) {\n        //gán employeSelected hiện tại truyền cho child\n        this.employeeSelected = value; //hiện dialog cảnh báo\n\n        this.showPopup(this.$enum.PopupType.DataDelete);\n      }\n    },\n\n    /**----------------------------------------------\r\n     * show thông báo lỗi mặc định cho người dùng.\r\n     * Author: quyetkaito (8/03/2022)\r\n     ------------------------------------------------*/\n    showDefaultErrorNotify() {// this.showPopup(this.$enum.PopupType.DataError, Resource.DefaultErrorText);\n    },\n\n    /**-------------------------------\r\n     * Hàm xử lý exception api trả về.\r\n     * @param {Exception} error - exception từ api trả về\r\n     * Author: quyetkaito (08/03/2022)\r\n     ---------------------------------*/\n    handleException(error) {\n      let me = this;\n      let response = error.response;\n\n      if (response.status) {\n        switch (error.response.status) {\n          case this.$enum.StatusCode.InternalServerError:\n            {\n              if (response.data.userMsg) {\n                me.showPopup(this.$enum.PopupType.DataError, response.data.userMsg);\n              } else {\n                me.showDefaultErrorNotify();\n              }\n\n              break;\n            }\n\n          case this.$enum.StatusCode.BadRequest:\n            {\n              //400\n              //gán message vào popup\n              me.showDefaultErrorNotify();\n            }\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        me.showDefaultErrorNotify();\n      }\n    },\n\n    /**----------------------------------\r\n     * Hàm gọi show popup (true).\r\n     * @param {Number} type: loại popup\r\n     * @param {String} text: nội dung popup \r\n     * Author: quyetkaito (24/02/2022)\r\n     ------------------------------------*/\n    showPopup(type, text) {\n      if (type) {\n        this.popupType = type;\n      }\n\n      if (text) {\n        this.popupText = text;\n      }\n\n      this.showMessagebox(true); //focus vào button đầu tiên(để đóng popup = phím Enter)\n\n      this.$refs.popup.focus();\n    },\n\n    /**---------------------------------\r\n     * Thực hiện show/hide messsagebox.\r\n     * @param {Boolean} isShow - true là hiện/ false là ẩn.\r\n     * Author: quyetkaito (25/02/2022)\r\n     -----------------------------------*/\n    showMessagebox(isShow) {\n      this.isShowPopup = isShow;\n    },\n\n    /**---------------------------------------------------------------\r\n     * Hàm thực hiện show table function Xóa/Nhân bản/ Ngừng sử dụng.\r\n     * @param {Object} object - đối tượng nhân viên.\r\n     * Author: quyetkaito (08/03/2022)\r\n     ----------------------------------------------------------------*/\n    showFunction(object) {\n      if (this.isShowFunc) {\n        this.isShowFunc = false;\n      } else {\n        this.isShowFunc = true;\n        this.employeeSelected = object;\n        this.formMode = this.$enum.FormMode.Clone;\n      }\n    },\n\n    /**------------------------------------\r\n     * Hàm thực hiện hide table function.\r\n     * Author: quyetkaito (08/03/2022)\r\n     -------------------------------*/\n    hideFunction() {\n      this.isShowFunc = false;\n    },\n\n    /**------------------------------\r\n     * Get lựa chọn table function\r\n     * @param {Number} value - giá trị của table function\r\n     * Author: quyetkaito (08/03/2022)\r\n     -------------------------------*/\n    async getValueFromDropdown(value) {\n      //nếu là xóa\n      if (value == this.$enum.TableFunction.Delete) {\n        this.handleDelete(this.employeeSelected);\n        this.isShowFunc = false;\n      } //nếu là nhân bản\n\n\n      if (value == this.$enum.TableFunction.Clone) {\n        //gọi hàm clone\n        this.openDialog({\n          data: this.employeeSelected,\n          formMode: this.$enum.FormMode.Clone\n        });\n        await this.$refs.addDialog.getDepartment();\n        this.$refs.addDialog.setDepartment();\n        this.$refs.addDialog.autoFocus();\n        this.isShowFunc = false;\n      }\n    },\n\n    /**--------------------------------------\r\n     * Hàm thực hiện cập nhật trang hiện tại.\r\n     * @param {Number} page - số thứ tự của trang (từ 1)\r\n     * Author: quyetkaito (03/03/2022)\r\n    ----------------------------------------*/\n    setCurrentPage(page) {\n      this.pageNumber = page; //thực hiện filter lại\n\n      this.filterDataServer(this.pageNumber);\n    },\n\n    /**-----------------------------------------------\r\n     * Hàm thực hiện reset lại các tùy chọn phân trang.\r\n     * Author: quyetkaito (03/03/2022)\r\n    -------------------------------------------------*/\n    reset() {\n      this.pageNumber = 1; //mặc định trang 1\n\n      this.pageSize = 10; //mặc định 10 bản ghi 1 trang\n    }\n\n  },\n  computed: {},\n  watch: {\n    /**-------------------------------------------\r\n     * Bắt sự thay đổi của pageSize. Thay đổi số bản ghi hiển thị một trang\r\n     * Author: quyetkaito (15/03/2022)\r\n     -------------------------------------------*/\n    pageSize: function () {\n      this.pageNumber = 1;\n\n      if (this.dataFilter != \"\") {\n        this.filterDataServer(this.pageNumber);\n      } else {\n        this.loadData();\n      }\n    },\n\n    /**-------------------------------\r\n     *Bắt sự thay đổi của ô tìm kiếm.\r\n     *Author: quyetkaito (16/03/2022)\r\n     ---------------------------------*/\n    dataFilter: function () {\n      this.pageNumber = 1;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","_","vMultiselect","name","components","created","data","pageTitle","employees","isShowDialog","isShowPopup","isShowFunc","isShowMultiAction","isShowSkeleton","employeeSelected","formMode","popupText","popupType","isMultiDelete","toastText","toastType","pagingOptions","label","value","disableComboboxPaging","pageNumber","pageSize","totalPage","totalEmp","dataFilter","multiDeleteText","listHeader","text","fieldName","align","width","textFull","columnWidth","tableFunction","title","$enum","TableFunction","Clone","Delete","Stop","listEmployeeChecked","methods","showToast","$commonFunc","convertToBase64","openMessage","$mgsBox","show","closeDialog","exportData","handleMultiDelete","showPopup","PopupType","DataDelete","multiDeleteEmployee","getEmployeeSelected","listChecked","forEach","employee","push","employee_id","error","console","log","toggleMultiAction","hideMultiAction","lodashDelay","debounce","filterDataServer","loadData","openDialog","FormMode","Post","$refs","addDialog","getNewEmployeeCode","DateOfBirth","Date","IdentityDate","showDefaultErrorNotify","showEmployeeDialog","deleteEmployee","handleUpdate","handleDelete","handleException","me","response","status","StatusCode","InternalServerError","userMsg","DataError","BadRequest","type","showMessagebox","popup","focus","isShow","showFunction","object","hideFunction","getValueFromDropdown","getDepartment","setDepartment","autoFocus","setCurrentPage","page","reset","computed","watch"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\voucher\\VoucherList.vue"],"sourcesContent":["<template>\r\n  <!-- Content riêng của trang Employee -->\r\n  <div class=\"content\">\r\n    <div class=\"employee-top\">\r\n      <div class=\"content-top\">\r\n        <div class=\"page-title\">{{ pageTitle }}</div>\r\n        <m-button\r\n          text=\"Thêm mới\"     \r\n          @click=\"showToast\"     \r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"employee-bottom\">\r\n      <div class=\"content-bottom\">\r\n        <div class=\"filter-area flex\">\r\n          <!-- Xóa nhiều -->\r\n          <div class=\"flex align-x-y-center\">\r\n            <button\r\n              class=\"m-btn-dropdown\"\r\n            >\r\n              <div class=\"m-btn-text text-dropdown\">Thực hiện hàng loạt</div>\r\n              <div class=\"m-icon m-icon-16 m-icon-dropdown\"></div>\r\n            </button>\r\n            <div\r\n              class=\"dropdown-button\"\r\n              v-if=\"isShowMultiAction && listEmployeeChecked.length > 0\"\r\n            >\r\n              <div class=\"m-dropdown-item\" @click=\"handleMultiDelete\">\r\n                {{ multiDeleteText }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Các component filter dữ liệu -->\r\n          <div class=\"content-filter flex align-y-center justify-end\">\r\n            <!-- Input Search -->\r\n            <div style=\"width: 240px\">\r\n              <m-input\r\n                ref=\"searchInput\"\r\n                :isHasLabel=\"false\"\r\n                :maxlength=\"255\"\r\n                :width=\"240\"\r\n                :isHasIcon=\"true\"\r\n                v-model=\"dataFilter\"\r\n                placeholder=\"Tìm kiếm theo tên, mã nhân viên\"\r\n                @input=\"lodashDelay(value)\"\r\n                @findData=\"filterDataServer\"\r\n              />\r\n            </div>\r\n\r\n            <div style=\"position: relative\">\r\n              <div\r\n                class=\"m-icon m-icon-24 m-refresh btn-refresh\"\r\n                @click=\"loadData()\"\r\n              ></div>\r\n              <!-- <ms-tooltip\r\n                class=\"hide\"\r\n                text=\"Lấy lại dữ liệu\"\r\n                :isRectangle=\"true\"\r\n              /> -->\r\n            </div>\r\n            <div style=\"position: relative\">\r\n              <div\r\n                class=\"m-icon m-icon-24 m-excel__nav btn-export\"\r\n                @click=\"exportData\"\r\n              ></div>\r\n              <!-- <ms-tooltip\r\n                class=\"hide\"\r\n                text=\"Xuất ra excel\"\r\n                :isRectangle=\"true\"\r\n              /> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Bảng -->\r\n        <div class=\"content-grid\">\r\n          <div class=\"table-container\">\r\n            <m-grid\r\n              ref=\"mygrid\"              \r\n              :listData=\"employees\"\r\n              :columns=\"listHeader\"\r\n              :pageSize=\"pageSize\"\r\n              :isShowSkeleton=\"isShowSkeleton\"\r\n              functionText=\"Sửa\"\r\n              @onUpdate=\"handleUpdate\"\r\n              @onDelete=\"handleDelete\"\r\n              @eShowFunc=\"showFunction\"\r\n              @handleHideFunc=\"hideFunction\"\r\n              @eMultiSelect=\"getEmployeeSelected\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Ảnh hiển thị nếu không có dữ liệu -->\r\n        <div\r\n          class=\"flex align-center\"\r\n          style=\"width: 100%; flex-direction: column\"\r\n          v-show=\"Object.keys(employees).length === 0 && dataFilter != ''\"\r\n        >\r\n          <img\r\n            src=\"@/assets/img/bg_report_nodata.76e50bd8.svg\"\r\n            alt=\"\"\r\n            width=\"100\"\r\n            height=\"100\"\r\n          />\r\n          <p style=\"margin: 0px; padding: 0px\">Không có dữ liệu</p>\r\n        </div>\r\n\r\n        <!-- Paging -->\r\n        <div class=\"m-paging\" v-show=\"Object.keys(employees).length !== 0\">\r\n          <div class=\"paging-left\">\r\n            <!-- <ms-table-counter :record=\"totalEmp\" /> -->\r\n          </div>\r\n          <div class=\"paging-right\">\r\n            <!-- Combobox Paging -->\r\n            <!-- <vue-select\r\n              ref=\"comboPaging\"\r\n              style=\"width: 200px !important\"\r\n              :options=\"pagingOptions\"\r\n              v-model=\"pageSize\"\r\n              :label-by=\"(pagingOptions) => pagingOptions.label\"\r\n              :value-by=\"(pagingOptions) => pagingOptions.value\"\r\n              placeholder=\"\"\r\n              close-on-select\r\n              :disabled=\"disableComboboxPaging\"\r\n            >\r\n            </vue-select> -->\r\n            <v-multiselect\r\n              ref=\"comboPaging\"\r\n              style=\"width: 200px !important\"\r\n              v-model=\"pageSize\"\r\n              :options=\"pagingOptions\"\r\n              label=\"label\"\r\n              :close-on-select=\"true\"\r\n              :clearOnSelect=\"true\"\r\n              :searchable=\"false\"\r\n              noResultsText=\"Không có dữ liệu hiển thị\"\r\n              :disabled=\"false\"\r\n              :canClear=\"false\"\r\n              :canDeselect=\"false\"\r\n              openDirection=\"top\"\r\n            />\r\n            <!-- Paging action -->\r\n            <!-- <m-pagination\r\n              :totalPage=\"totalPage\"\r\n              :currentPage=\"pageNumber\"\r\n              :pageSize=\"pageSize\"\r\n              @changeCurrentPage=\"setCurrentPage\"\r\n            /> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <ms-employee-dialog\r\n      ref=\"addDialog\"\r\n      :isShow=\"isShowDialog\"\r\n      @showDialog=\"showEmployeeDialog(value)\"\r\n      @eCloseDialog=\"closeDialog\"\r\n      @loadData=\"loadData()\"\r\n      :employeeSelected=\"employeeSelected\"\r\n      :formMode=\"formMode\"\r\n    /> -->\r\n    <!-- <ms-popup\r\n      ref=\"popup\"\r\n      :popupType=\"popupType\"\r\n      :isShow=\"isShowPopup\"\r\n      :employeeSelected=\"employeeSelected\"\r\n      @showPopup=\"showMessagebox(isShow)\"\r\n      @deleteComfirm=\"deleteEmployee(employeeSelected)\"\r\n      @multiDeleteConfirm=\"multiDeleteEmployee\"\r\n      :text=\"popupText\"\r\n      :isMultiDelete=\"isMultiDelete\"\r\n    />    -->\r\n\r\n    <!-- <ms-dropdown-content\r\n      ref=\"mTableFunction\"\r\n      directionY=\"right\"\r\n      :optionObjects=\"tableFunction\"\r\n      @eData=\"getValueFromDropdown\"\r\n    /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import Library\r\nimport axios from \"axios\";\r\n// import vClickOutside from \"click-outside-vue3\";\r\nimport _ from \"lodash\";\r\n// const FileDownload = require(\"js-file-download\");\r\n//multi vue 3\r\nimport vMultiselect from \"@vueform/multiselect\";\r\nimport \"@vueform/multiselect/themes/default.css\";\r\n\r\n//import my js\r\n// import this.$enum from \"@/js/enum\";\r\n// import Resource from \"@/js/resource\";\r\n// import { LOCAL_EMPLOYEE_API_URL } from \"/public/config.js\";\r\n// import EmployeeDetail from \"@/views/employee/EmployeeDetail.vue\";\r\n// import MSPagination from \"@/components/base/MSPagination.vue\";\r\nexport default {\r\n  name: \"EmployeeList\",\r\n  components: {\r\n    // \"ms-employee-dialog\": EmployeeDetail,\r\n    // \"ms-pagination\": MSPagination,\r\n    \"v-multiselect\": vMultiselect,\r\n  },\r\n//   directives: {\r\n//     clickOutside: vClickOutside.directive,\r\n//   },\r\n\r\n  /**---------------------------\r\n   * Giai đoạn 2: có thể truy cập vào data, event, chưa truy cập dc DOM\r\n   -----------------------------*/\r\n  created() {\r\n    //this.loadData();\r\n  },\r\n\r\n  /**--------------\r\n   * Data\r\n  -----------------*/\r\n  data() {\r\n    return {\r\n      pageTitle: \"Mã giảm giá\",\r\n      employees: [], //danh sách nhân viên\r\n      isShowDialog: false, //dialog có hiện không?\r\n      isShowPopup: false, //popup có hiện không?\r\n\r\n      isShowFunc: false, //function của table có hiện không?\r\n      isShowMultiAction: false, //dropdown của thực hiện hàng loạt có hiện không?\r\n      isShowSkeleton: false, //có đang hiện skeleton ko?\r\n      employeeSelected: {}, //đối tượng nhân viên đang được chọn để thao tác.\r\n      formMode: 0, //trạng thái form đang là gì?\r\n      //set text,type cho popup\r\n      popupText: null,\r\n      popupType: null,\r\n      isMultiDelete: false, //có đang xóa nhiều không?\r\n      //thông tin của toast\r\n      toastText: \"toast-text\",\r\n      toastType: 0,\r\n      //các option cho paging\r\n      pagingOptions: [\r\n        {\r\n          label: \"10 bản ghi trên 1 trang\",\r\n          value: 10,\r\n        },\r\n        {\r\n          label: \"20 bản ghi trên 1 trang\",\r\n          value: 20,\r\n        },\r\n        {\r\n          label: \"30 bản ghi trên 1 trang\",\r\n          value: 30,\r\n        },\r\n        {\r\n          label: \"50 bản ghi trên 1 trang\",\r\n          value: 50,\r\n        },\r\n        {\r\n          label: \"100 bản ghi trên 1 trang\",\r\n          value: 100,\r\n        },\r\n      ],\r\n      disableComboboxPaging: false,\r\n      pageNumber: 1, //trang số bao nhiêu\r\n      pageSize: 10, //số bản ghi trên 1 trang\r\n      totalPage: null, //tổng số trang\r\n      totalEmp: null, //tổng số bản ghi dữ liệu\r\n      dataFilter: \"\", //giá trị để tìm kiếm\r\n      multiDeleteText: \"Xóa\",\r\n      //thông tin khởi tạo table\r\n      //danh sách các tiêu đề và fieldName của bảng\r\n      listHeader: [\r\n        {\r\n          text: \"Mã nhân viên\",\r\n          fieldName: \"employee_code\",\r\n          align: \"text-align-left\",\r\n        },\r\n        {\r\n          text: \"Tên nhân viên\",\r\n          fieldName: \"employee_name\",\r\n          align: \"text-align-left\",\r\n          width: \"w-250\",\r\n        },\r\n        {\r\n          text: \"Giới tính\",\r\n          fieldName: \"gender_name\",\r\n          align: \"text-align-left\",\r\n        },\r\n        {\r\n          text: \"Ngày sinh\",\r\n          fieldName: \"date_of_birth\",\r\n          align: \"text-align-center\",\r\n        },\r\n        {\r\n          text: \"Số CMND\",\r\n          textFull: \"Số chứng minh nhân dân\",\r\n          fieldName: \"identity_number\",\r\n          align: \"text-align-left\",\r\n          width: \"w-70\",\r\n        },\r\n        {\r\n          text: \"Chức danh\",\r\n          fieldName: \"position_name\",\r\n          align: \"text-align-left\",\r\n          width: \"w-100\",\r\n        },\r\n        {\r\n          text: \"Tên đơn vị\",\r\n          fieldName: \"department_name\",\r\n          align: \"text-align-left\",\r\n          width: \"w-200\",\r\n        },\r\n        {\r\n          text: \"Số tài khoản\",\r\n          fieldName: \"bank_account_number\",\r\n          align: \"text-align-left\",\r\n        },\r\n        {\r\n          text: \"Tên ngân hàng\",\r\n          fieldName: \"bank_name\",\r\n          align: \"text-align-left\",\r\n        },\r\n        {\r\n          text: \"Chi nhánh TK ngân hàng\",\r\n          textFull: \"Chi nhánh tài khoản ngân hàng\",\r\n          fieldName: \"bank_branch_name\",\r\n          align: \"text-align-left\",\r\n        },\r\n        {\r\n          text: \"Địa chỉ\",\r\n          textFull: \"Chi nhánh tài khoản ngân hàng\",\r\n          fieldName: \"address\",\r\n          align: \"text-align-left\",\r\n          columnWidth: 300,\r\n        },\r\n      ],\r\n      //các function của table\r\n      tableFunction: [\r\n        {\r\n          title: \"Nhân bản\",\r\n          value: this.$enum.TableFunction.Clone,\r\n        },\r\n        {\r\n          title: \"Xóa\",\r\n          value: this.$enum.TableFunction.Delete,\r\n        },\r\n        {\r\n          title: \"Ngừng sử dụng\",\r\n          value: this.$enum.TableFunction.Stop,\r\n        },\r\n      ],\r\n      listEmployeeChecked: [],\r\n    };\r\n  },\r\n\r\n  /**-----------------\r\n   * Các phương thức\r\n   -------------------*/\r\n  methods: {\r\n    showToast(){                    \r\n        // this.$store.commit('showError', {\r\n        //     message: 'Lỗi rồi em ei',\r\n        //     position: 'top-center',\r\n        //     timeout: 10000,\r\n        // });\r\n        debugger\r\n        this.$commonFunc.convertToBase64(\"123123\");\r\n    },\r\n\r\n    openMessage(){\r\n        this.$mgsBox.show();\r\n    },\r\n    /**--------------------------\r\n     * Hàm thực hiện đóng dialog nhân viên.\r\n     * Author: quyetnv(22/03/2022)\r\n     -----------------------------*/\r\n    closeDialog() {\r\n      this.employeeSelected = {};\r\n      this.formMode = 0;\r\n      this.isShowDialog = false;\r\n    },\r\n\r\n    /**----------------------------------\r\n     * Hàm gọi API xuất dữ liệu.\r\n     * Author: quyetkaito (15/03/2022)\r\n     -------------------------------*/\r\n    exportData() {\r\n      // let me = this;\r\n      // me.$refs.mLoading.show();\r\n      // let object = {};\r\n      // object.tableInfos = me.listHeader;\r\n      // object.dataFilter = me.dataFilter;\r\n      // //gửi lên server danh sách các header\r\n      // axios\r\n      //   .post(`${LOCAL_EMPLOYEE_API_URL}/export`, object, {\r\n      //     responseType: \"blob\",\r\n      //   })\r\n      //   .then((response) => {\r\n      //     FileDownload(response.data, \"Danh_sach_nhan_vien.xlsx\");\r\n      //     me.$refs.mLoading.hide();\r\n      //   })\r\n      //   .catch(() => {\r\n      //     me.$refs.mLoading.hide();\r\n      //   });\r\n    },\r\n\r\n    /**--------------------------------------\r\n     * Xử lý khi nút [Xóa hàng loạt] được chọn\r\n     * Author: quyetkaito (14/03/2022)\r\n    ----------------------------------*/\r\n    handleMultiDelete() {\r\n      this.isMultiDelete = true;\r\n      //show cảnh báo xóa nhiều\r\n      this.showPopup(this.$enum.PopupType.DataDelete);\r\n    },\r\n\r\n    /**----------------------------\r\n     * Thực hiện gọi API xóa nhiều.\r\n     * Author: quyetkaito (14/03/2022)\r\n     ------------------------------*/\r\n    multiDeleteEmployee() {\r\n      // let me = this;\r\n      // //hiện loading\r\n      // me.$refs.mLoading.show();\r\n      // //gọi API xóa nhiều\r\n      // axios\r\n      //   .delete(`${LOCAL_EMPLOYEE_API_URL}`, { data: me.listEmployeeChecked })\r\n      //   .then(() => {\r\n      //     //đóng popup\r\n      //     me.showMessagebox(false);\r\n      //     //thông báo thành công\r\n      //     // me.toastText = Resource.SuccessDelete;\r\n      //     me.$refs.msToast.show();\r\n      //     //reset lại danh sách employee được chọn\r\n      //     me.listEmployeeChecked = [];\r\n      //     me.isMultiDelete = false;\r\n      //     //ẩn loading\r\n      //     me.$refs.mLoading.hide();\r\n\r\n      //     //load lại dữ liệu\r\n      //     me.loadData();\r\n      //     //bỏ dấu check all\r\n      //     this.$refs.mygrid.unCheckAll();\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     me.handleException(error);\r\n      //     //reset lại danh sách employee được chọn\r\n      //     me.listEmployeeChecked = [];\r\n      //     me.isMultiDelete = false;\r\n      //     me.$refs.mLoading.hide();\r\n      //   });\r\n    },\r\n\r\n    /**-----------------------------------------------------\r\n     * Lấy danh sách id của các employee được chọn từ bảng.\r\n     * @param {Array} listChecked - mảng các đối tượng nhân viên được chọn.\r\n     * Author: quyetkaito (14/03/2022)\r\n     -------------------------------------------------------*/\r\n    getEmployeeSelected(listChecked) {\r\n      try {\r\n        //lấy ra id của đối tượng\r\n        listChecked.forEach((employee) => {\r\n          //push vào mảng các id của nhân viên\r\n          this.listEmployeeChecked.push(employee.employee_id);\r\n        });\r\n      } catch (error) {\r\n        //log ra lỗi\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**-----------------------------------\r\n     * Thực hiện ẩn/ hiện nút \"Xóa nhiều\".\r\n     * Author: quyetkaito (14/03/2022)\r\n     -------------------------------------*/\r\n    toggleMultiAction() {\r\n      this.isShowMultiAction = !this.isShowMultiAction;\r\n    },\r\n\r\n    /**--------------------------------\r\n     * Thực hiện ẩn nút \"Xóa nhiều\".\r\n     * Author: quyetkaito (14/03/2022)\r\n     ---------------------------------*/\r\n    hideMultiAction() {\r\n      this.isShowMultiAction = false;\r\n    },\r\n\r\n    /**-------------------------------------\r\n     * Thực hiện delay call API khi tìm kiếm.\r\n     * Author: quyetkaito (15/03/2022)\r\n    ---------------------------------*/\r\n    lodashDelay: _.debounce(function () {\r\n      this.filterDataServer();\r\n    }, 1200),\r\n\r\n    /**--------------------------------\r\n     * Hàm gọi API tìm kiếm dữ liệu từ server.\r\n     * Author: quyetkaito (03/03/2022)\r\n     ----------------------------------*/\r\n    filterDataServer(pageNumber) {\r\n      // let me = this;\r\n      // //reset mảng employee\r\n      // me.employees = [];\r\n      // //show loading\r\n      // me.isShowSkeleton = true;\r\n      // //xử lý đầu vào API\r\n      // if (!pageNumber) pageNumber = 1;\r\n      // if (!me.pageSize) me.pageSize = 10;\r\n      // let value = this.dataFilter.toString();\r\n      // //gọi api lấy dữ liệu theo filter\r\n      // axios\r\n      //   .get(\r\n      //     `${LOCAL_EMPLOYEE_API_URL}/filter?pageSize=${me.pageSize}&pageNumber=${pageNumber}&textFilter=${value}`\r\n      //   )\r\n      //   .then((response) => {\r\n      //     //nếu có kết quả\r\n      //     if (response.status == this.$enum.StatusCode.OK) {\r\n      //       //gán response vào danh sách nhân viên\r\n      //       me.employees = response.data.Data;\r\n      //       //gán tổng số bản ghi\r\n      //       me.totalEmp = response.data.TotalRecord;\r\n      //       //gán tổng số trang\r\n      //       me.totalPage = response.data.TotalPage;\r\n      //       //ẩn loading\r\n      //       me.isShowSkeleton = false;\r\n      //     }\r\n      //     //nếu không có kết quả\r\n      //     if (response.status == this.$enum.StatusCode.NoContent) {\r\n      //       me.employees = {};\r\n      //       me.totalEmp = 0;\r\n      //       me.isShowSkeleton = false;\r\n      //     }\r\n      //   })\r\n      //   .catch((res) => {\r\n      //     //xử lý lỗi...\r\n      //     me.handleException(res);\r\n      //   });\r\n    },\r\n\r\n    /**----------------------------------------\r\n     * Hàm thực hiện load data (đã phân trang) binding vào bảng.\r\n     * Author: quyetkaito (25/02/2022)\r\n     ------------------------------------------*/\r\n    loadData() {\r\n      // try {\r\n      //   let me = this;\r\n      //   //không cho phân trang\r\n      //   me.disableComboboxPaging = true;\r\n      //   me.dataFilter = \"\";\r\n      //   me.employees = [];\r\n      //   // me.employeeSelected = {};\r\n      //   me.formMode = 0;\r\n      //   if (!me.pageSize) me.pageSize = 10;\r\n      //   if (!me.pageNumber || me.pageNumber != 1) me.pageNumber = 1;\r\n      //   //show loading\r\n      //   me.isShowSkeleton = true;\r\n      //   //gọi API lấy dữ liệu nhân viên\r\n      //   axios\r\n      //     .get(\r\n      //       `${LOCAL_EMPLOYEE_API_URL}/filter?pageSize=${me.pageSize}&pageNumber=${me.pageNumber}`\r\n      //     )\r\n      //     .then((response) => {\r\n      //       //gán response vào danh sách nhân viên\r\n      //       me.employees = response.data.Data;\r\n      //       //gán tổng số bản ghi\r\n      //       me.totalEmp = response.data.TotalRecord;\r\n      //       //gán tổng số trang\r\n      //       me.totalPage = response.data.TotalPage;\r\n      //       //cho phép phân trang\r\n      //       me.disableComboboxPaging = false;\r\n      //       me.isShowSkeleton = false;\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       //xử lý lỗi\r\n      //       me.handleException(error);\r\n      //       //ẩn loading\r\n      //       me.isShowSkeleton = false;\r\n      //     });\r\n      // } catch (error) {\r\n      //   this.showDefaultErrorNotify();\r\n      //   console.log(error);\r\n      // }\r\n    },\r\n\r\n    /**-------------------------------\r\n     * Hàm xử lý mở Dialog nhân viên\r\n     * @param {Object} data - đối tượng nhân viên truyền vào\r\n     * @param {Number} formMode - trạng thái form thêm/sửa/xóa\r\n     * Author: quyetkaito (16/03/2022)\r\n     ---------------------------------*/\r\n    openDialog({ data, formMode }) {\r\n      try {\r\n        //gán formMode\r\n        this.formMode = formMode;\r\n        //nếu là thêm mới hoặc nhân bản\r\n        if (formMode == this.$enum.FormMode.Post || formMode == this.$enum.FormMode.Clone) {\r\n          //gọi lấy mã mới\r\n          this.$refs.addDialog.getNewEmployeeCode();\r\n        }\r\n        this.employeeSelected = data;\r\n        if (this.employeeSelected.DateOfBirth) {\r\n          //format ngày sinh để cho vào datepicker\r\n          this.employeeSelected.DateOfBirth = new Date(\r\n            this.employeeSelected.DateOfBirth\r\n          );\r\n        }\r\n        if (this.employeeSelected.IdentityDate) {\r\n          //format ngày cấp cmnd để cho vào datepicker\r\n          this.employeeSelected.IdentityDate = new Date(\r\n            this.employeeSelected.IdentityDate\r\n          );\r\n        }\r\n        //show dialog\r\n        this.isShowDialog = true;\r\n      } catch (error) {\r\n        this.showDefaultErrorNotify();\r\n        console.log(error);\r\n      }\r\n    },\r\n\r\n    /**-------------------------------------------------\r\n     * Thực hiện show/hide dialog truyền cho child component.\r\n     * @param {Boolean} value - true là hiện, false là ẩn .\r\n     * Author: quyetkaito (24/02/2022)\r\n     ---------------------------------------------------*/\r\n    showEmployeeDialog(value) {\r\n      this.isShowDialog = value;\r\n    },\r\n\r\n    /**-------------------------------------------\r\n     * Hàm thực hiện xóa employee.\r\n     * @param {Object} employee - 1 đối tượng cần xóa.\r\n     * Author: quyetkaito (22/02/2022)\r\n     ---------------------------------------------*/\r\n    deleteEmployee(employee) {\r\n      // const me = this;\r\n      // //hiện loading\r\n      // me.$refs.mLoading.show();\r\n      // //2. thực hiện xóa\r\n      // axios\r\n      //   .delete(`${LOCAL_EMPLOYEE_API_URL}/${employee.EmployeeId}`)\r\n      //   .then(function () {\r\n      //     //đóng popup\r\n      //     me.showMessagebox(false);\r\n      //     //ẩn loading\r\n      //     me.$refs.mLoading.hide();\r\n      //     //thông báo thành công\r\n      //     // me.toastText = Resource.SuccessDelete;\r\n      //     me.$refs.msToast.show();\r\n      //     //load lại dữ liệu\r\n      //     me.loadData();\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     //hiển thị popup thông báo ko thành công\r\n      //     // me.showPopup(this.$enum.PopupType.DataError, Resource.FailDelete);\r\n      //     me.handleException(error);\r\n      //     //ẩn loading\r\n      //     me.$refs.mLoading.hide();\r\n      //   });\r\n    },\r\n\r\n    /**------------------------------------------\r\n     * Hàm xử lý nhận sự kiện sửa từ table.\r\n     * @param {Object} - một đối tượng cần sửa + formMode.\r\n     * Author: quyetkaito (23/02/2022)\r\n     --------------------------------------------*/\r\n    handleUpdate({data,formMode}) {\r\n      // let me = this;\r\n      // if (data) {\r\n      //   //show loading\r\n      //   me.$refs.mLoading.show();\r\n      //   //lấy thông tin mới từ server bind vào form\r\n      //   axios\r\n      //     .get(`${LOCAL_EMPLOYEE_API_URL}/${data.employee_id}`)\r\n      //     .then((res) => {\r\n      //       //gán dữ liệu mới để bind vào form\r\n      //       me.employeeSelected = res.data;\r\n      //       me.employeeSelected.date_of_birth = new Date(\r\n      //         me.employeeSelected.date_of_birth\r\n      //       );\r\n      //       me.employeeSelected.identity_date = new Date(\r\n      //         me.employeeSelected.identity_date\r\n      //       );\r\n      //       //chuyển trạng thái submit sang sửa\r\n      //       me.formMode = formMode;\r\n      //       //show dialog\r\n      //       me.showEmployeeDialog(true);\r\n      //       //ẩn loading\r\n      //       me.$refs.mLoading.hide();\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       me.handleException(error);\r\n      //       //ẩn loading\r\n      //       me.$refs.mLoading.hide();\r\n      //     });\r\n      // }\r\n    },\r\n\r\n    /**-----------------------------------------------\r\n     * Hàm xử lý khi nút [Xóa] được click.\r\n     * @param {Object} employee - 1 đối tượng cần xóa.\r\n     * Author: quyetkaito (25/02/2022)\r\n     ------------------------------------------------*/\r\n    handleDelete(value) {\r\n      if (value) {\r\n        //gán employeSelected hiện tại truyền cho child\r\n        this.employeeSelected = value;\r\n        //hiện dialog cảnh báo\r\n        this.showPopup(this.$enum.PopupType.DataDelete);\r\n      }\r\n    },\r\n\r\n    /**----------------------------------------------\r\n     * show thông báo lỗi mặc định cho người dùng.\r\n     * Author: quyetkaito (8/03/2022)\r\n     ------------------------------------------------*/\r\n    showDefaultErrorNotify() {\r\n      // this.showPopup(this.$enum.PopupType.DataError, Resource.DefaultErrorText);\r\n\r\n    },\r\n\r\n    /**-------------------------------\r\n     * Hàm xử lý exception api trả về.\r\n     * @param {Exception} error - exception từ api trả về\r\n     * Author: quyetkaito (08/03/2022)\r\n     ---------------------------------*/\r\n    handleException(error) {\r\n      let me = this;\r\n      let response = error.response;\r\n      if (response.status) {\r\n        switch (error.response.status) {\r\n          case this.$enum.StatusCode.InternalServerError: {\r\n            if (response.data.userMsg) {\r\n              me.showPopup(this.$enum.PopupType.DataError, response.data.userMsg);\r\n            } else {\r\n              me.showDefaultErrorNotify();\r\n            }\r\n            break;\r\n          }\r\n          case this.$enum.StatusCode.BadRequest:\r\n            {\r\n              //400\r\n              //gán message vào popup\r\n              me.showDefaultErrorNotify();\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        me.showDefaultErrorNotify();\r\n      }\r\n    },\r\n\r\n    /**----------------------------------\r\n     * Hàm gọi show popup (true).\r\n     * @param {Number} type: loại popup\r\n     * @param {String} text: nội dung popup \r\n     * Author: quyetkaito (24/02/2022)\r\n     ------------------------------------*/\r\n    showPopup(type, text) {\r\n      if (type) {\r\n        this.popupType = type;\r\n      }\r\n      if (text) {\r\n        this.popupText = text;\r\n      }\r\n      this.showMessagebox(true);\r\n      //focus vào button đầu tiên(để đóng popup = phím Enter)\r\n      this.$refs.popup.focus();\r\n    },\r\n\r\n    /**---------------------------------\r\n     * Thực hiện show/hide messsagebox.\r\n     * @param {Boolean} isShow - true là hiện/ false là ẩn.\r\n     * Author: quyetkaito (25/02/2022)\r\n     -----------------------------------*/\r\n    showMessagebox(isShow) {\r\n      this.isShowPopup = isShow;\r\n    },\r\n\r\n    /**---------------------------------------------------------------\r\n     * Hàm thực hiện show table function Xóa/Nhân bản/ Ngừng sử dụng.\r\n     * @param {Object} object - đối tượng nhân viên.\r\n     * Author: quyetkaito (08/03/2022)\r\n     ----------------------------------------------------------------*/\r\n    showFunction(object) {\r\n      if (this.isShowFunc) {\r\n        this.isShowFunc = false;\r\n      } else {\r\n        this.isShowFunc = true;\r\n        this.employeeSelected = object;\r\n        this.formMode = this.$enum.FormMode.Clone;\r\n      }\r\n    },\r\n\r\n    /**------------------------------------\r\n     * Hàm thực hiện hide table function.\r\n     * Author: quyetkaito (08/03/2022)\r\n     -------------------------------*/\r\n    hideFunction() {\r\n      this.isShowFunc = false;\r\n    },\r\n\r\n    /**------------------------------\r\n     * Get lựa chọn table function\r\n     * @param {Number} value - giá trị của table function\r\n     * Author: quyetkaito (08/03/2022)\r\n     -------------------------------*/\r\n    async getValueFromDropdown(value) {\r\n      //nếu là xóa\r\n      if (value == this.$enum.TableFunction.Delete) {\r\n        this.handleDelete(this.employeeSelected);\r\n        this.isShowFunc = false;\r\n      }\r\n      //nếu là nhân bản\r\n      if (value == this.$enum.TableFunction.Clone) {\r\n        //gọi hàm clone\r\n        this.openDialog({\r\n          data: this.employeeSelected,\r\n          formMode: this.$enum.FormMode.Clone,\r\n        });\r\n        await this.$refs.addDialog.getDepartment();\r\n        this.$refs.addDialog.setDepartment();\r\n        this.$refs.addDialog.autoFocus();\r\n        this.isShowFunc = false;\r\n      }\r\n    },\r\n\r\n    /**--------------------------------------\r\n     * Hàm thực hiện cập nhật trang hiện tại.\r\n     * @param {Number} page - số thứ tự của trang (từ 1)\r\n     * Author: quyetkaito (03/03/2022)\r\n    ----------------------------------------*/\r\n    setCurrentPage(page) {\r\n      this.pageNumber = page;\r\n      //thực hiện filter lại\r\n      this.filterDataServer(this.pageNumber);\r\n    },\r\n\r\n    /**-----------------------------------------------\r\n     * Hàm thực hiện reset lại các tùy chọn phân trang.\r\n     * Author: quyetkaito (03/03/2022)\r\n    -------------------------------------------------*/\r\n    reset() {\r\n      this.pageNumber = 1; //mặc định trang 1\r\n      this.pageSize = 10; //mặc định 10 bản ghi 1 trang\r\n    },\r\n  },\r\n  computed: {},\r\n  watch: {\r\n    /**-------------------------------------------\r\n     * Bắt sự thay đổi của pageSize. Thay đổi số bản ghi hiển thị một trang\r\n     * Author: quyetkaito (15/03/2022)\r\n     -------------------------------------------*/\r\n    pageSize: function () {\r\n      this.pageNumber = 1;\r\n      if (this.dataFilter != \"\") {\r\n        this.filterDataServer(this.pageNumber);\r\n      } else {\r\n        this.loadData();\r\n      }\r\n    },\r\n\r\n    /**-------------------------------\r\n     *Bắt sự thay đổi của ô tìm kiếm.\r\n     *Author: quyetkaito (16/03/2022)\r\n     ---------------------------------*/\r\n    dataFilter: function () {\r\n      this.pageNumber = 1;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url(\"/src/style/page/employee.css\");\r\n@import url(\"/src/style/page/base-page.css\");\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport CategoryAPI from \"@/api/CategoryAPI\"; //multi vue 3\n\nimport vMultiselect from \"@vueform/multiselect\";\nimport \"@vueform/multiselect/themes/default.css\";\nexport default {\n  components: {\n    /* eslint-disable vue/no-unused-components */\n    \"v-multiselect\": vMultiselect\n  },\n\n  data() {\n    return {\n      isShow: false,\n      currentItem: {},\n      titleForm: this.$t('category.add'),\n      editMode: 'Add',\n      storeCategory: [],\n      categoryValue: null,\n      openFromPost: false\n    };\n  },\n\n  created() {\n    this.initData();\n  },\n\n  methods: {\n    initData() {\n      this.currentItem = {};\n      this.categoryValue = null;\n      this.titleForm = this.$t('category.add');\n      this.editMode = 'Add';\n    },\n\n    async saveCategory() {\n      let me = this;\n\n      try {\n        let method = 'POST';\n        if (me.editMode == 'Edit') method = 'PUT';\n        if (!(await me.validate())) return;\n        let res = await CategoryAPI.request(CategoryAPI.urlName, method, me.currentItem);\n\n        if (res && res.data) {\n          if (res.data.StatusCode == 201) {\n            if (!me.openFromPost) {\n              me.$store.commit(\"showSuccess\", {\n                message: me.$t(\"message.success_add\")\n              });\n            }\n\n            me.afterSave(res.data.Data);\n          } else if (res.data.StatusCode == 200) {\n            me.$store.commit(\"showSuccess\", {\n              message: me.$t(\"message.success\")\n            });\n            me.afterSave();\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async validate() {\n      let me = this;\n\n      if (!me.currentItem.category_name) {\n        if (me.$refs.categoryName && typeof me.$refs.categoryName.focus == \"function\") {\n          me.$refs.categoryName.focus();\n        }\n\n        me.$store.commit(\"showError\", {\n          message: \"Tên danh mục không được bỏ trống.\"\n        });\n        return false;\n      }\n\n      return true;\n    },\n\n    hide() {\n      this.isShow = false;\n      this.initData();\n    },\n\n    show() {\n      this.isShow = true;\n      this.editMode = 'Add'; //mặc định gọi vào hàm này là thêm mới\n\n      this.focusFirstControl();\n    },\n\n    /**\r\n     * show form thêm nhanh , tìm kiếm tại form thêm bài viết\r\n     */\n    showQuickAdd() {\n      this.editMode = 'QuickAdd';\n      this.isShow = true;\n      this.$nextTick(() => {\n        if (this.$refs.categoryList && this.$refs.categoryList.$el && typeof this.$refs.categoryList.$el.focus == \"function\") {// this.$refs.categoryList.$el.focus(); //tạm thời ko focus vì auto xổ combo xấu quá\n        }\n      });\n      this.titleForm = this.$t('category.quick_add'); //lấy dữ liệu danh mục\n\n      if (!this.storeCategory || this.storeCategory.length == 0) {\n        this.getCategoryData();\n      }\n    },\n\n    /**\r\n     * Hàm xử lý binding lên khi sửa\r\n     */\n    bindingData(listData) {\n      let me = this;\n      debugger;\n\n      if (listData && listData.length > 0) {\n        this.categoryValue = null;\n        this.categoryValue = listData.map(x => x.category_id);\n      }\n    },\n\n    comboCategorySelected(option) {// this.storeCategory.push(option);\n    },\n\n    comboCategoryDeSelected(option) {// this.storeCategory.splice(this.storeCategory.indexOf(option),1);\n    },\n\n    /**\r\n     * Hàm lấy dữ lệu danh mục\r\n     */\n    async getCategoryData() {\n      let res = await CategoryAPI.request(CategoryAPI.urlName, 'GET');\n\n      if (res && res.data) {\n        if (res.data.length > 0) {\n          this.categoryOriginData = res.data;\n          this.storeCategory = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            this.storeCategory.push({\n              label: res.data[i].category_name,\n              value: res.data[i].category_id\n            });\n          } //lưu cache để tránh gọi nhiều lần\n          //todo\n\n        }\n      }\n    },\n\n    /**\r\n     * Gửi giá trị được chọn tới bài viết\r\n     */\n    sendToPost() {\n      debugger;\n      let listObject = this.categoryOriginData.filter(x => this.categoryValue.includes(x.category_id)); //tìm ra các bản ghi trùng id, do hiện tại value chỉ chứa mỗi id\n\n      this.$emit(\"changeValue\", listObject);\n      this.isShow = false;\n    },\n\n    focusFirstControl() {\n      this.$nextTick(() => {\n        if (this.$refs.categoryName && typeof this.$refs.categoryName.focus == \"function\") {\n          this.$refs.categoryName.focus();\n        }\n      });\n    },\n\n    afterSave(callbackData) {\n      this.hide();\n\n      if (this.openFromPost) {\n        //nếu là mở từ form bài viết\n        this.$emit(\"changeValue\", [callbackData]);\n      } else {\n        this.$parent.loadData();\n      }\n    },\n\n    showEdit(object) {\n      let me = this;\n      me.editMode = 'Edit';\n      me.titleForm = me.$t('category.edit');\n\n      if (object) {\n        me.currentItem = JSON.parse(JSON.stringify(object));\n        me.isShow = true;\n        me.focusFirstControl();\n      }\n    },\n\n    /**\r\n     * Chuyển sang mode thêm mới\r\n     */\n    changeModeAdd() {\n      let me = this;\n      me.editMode = 'Add';\n      me.titleForm = me.$t('category.add');\n      me.$nextTick(() => {\n        me.$refs.categoryName.focus();\n      });\n      me.openFromPost = true;\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA0EA,OAAOA,WAAP,MAAwB,mBAAxB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAO,yCAAP;AACA,eAAe;EACbC,UAAU,EAAC;IACT;IACA,iBAAiBD;EAFR,CADE;;EAKXE,IAAI,GAAG;IACH,OAAO;MACHC,MAAM,EAAE,KADL;MAEHC,WAAW,EAAE,EAFV;MAGHC,SAAS,EAAE,KAAKC,EAAL,CAAQ,cAAR,CAHR;MAIHC,QAAQ,EAAE,KAJP;MAKHC,aAAa,EAAC,EALX;MAMHC,aAAa,EAAE,IANZ;MAOHC,YAAY,EAAE;IAPX,CAAP;EASH,CAfU;;EAgBXC,OAAO,GAAE;IACP,KAAKC,QAAL;EACD,CAlBU;;EAmBXC,OAAO,EAAC;IACJD,QAAQ,GAAE;MACR,KAAKR,WAAL,GAAmB,EAAnB;MACA,KAAKK,aAAL,GAAqB,IAArB;MACA,KAAKJ,SAAL,GAAiB,KAAKC,EAAL,CAAQ,cAAR,CAAjB;MACA,KAAKC,QAAL,GAAgB,KAAhB;IACD,CANG;;IAQJ,MAAMO,YAAN,GAAoB;MAClB,IAAIC,EAAC,GAAI,IAAT;;MACA,IAAI;QACF,IAAIC,MAAK,GAAI,MAAb;QACA,IAAGD,EAAE,CAACR,QAAH,IAAe,MAAlB,EAA0BS,MAAK,GAAI,KAAT;QAC1B,IAAG,EAAC,MAAMD,EAAE,CAACE,QAAH,EAAP,CAAH,EAAyB;QACzB,IAAIC,GAAE,GAAI,MAAMnB,WAAW,CAACoB,OAAZ,CAAoBpB,WAAW,CAACqB,OAAhC,EAAyCJ,MAAzC,EAAiDD,EAAE,CAACX,WAApD,CAAhB;;QACA,IAAGc,GAAE,IAAKA,GAAG,CAAChB,IAAd,EAAmB;UACjB,IAAGgB,GAAG,CAAChB,IAAJ,CAASmB,UAAT,IAAuB,GAA1B,EAA8B;YAC5B,IAAG,CAACN,EAAE,CAACL,YAAP,EAAoB;cAClBK,EAAE,CAACO,MAAH,CAAUC,MAAV,CAAiB,aAAjB,EAAgC;gBAACC,OAAO,EAAET,EAAE,CAACT,EAAH,CAAM,qBAAN;cAAV,CAAhC;YACF;;YACAS,EAAE,CAACU,SAAH,CAAaP,GAAG,CAAChB,IAAJ,CAASwB,IAAtB;UACD,CALD,MAKM,IAAGR,GAAG,CAAChB,IAAJ,CAASmB,UAAT,IAAuB,GAA1B,EAA8B;YAClCN,EAAE,CAACO,MAAH,CAAUC,MAAV,CAAiB,aAAjB,EAAgC;cAACC,OAAO,EAAET,EAAE,CAACT,EAAH,CAAM,iBAAN;YAAV,CAAhC;YACAS,EAAE,CAACU,SAAH;UACF;QACF;MACF,CAhBA,CAgBE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACF;IACD,CA7BG;;IA+BJ,MAAMV,QAAN,GAAgB;MACd,IAAIF,EAAC,GAAI,IAAT;;MACA,IAAG,CAACA,EAAE,CAACX,WAAH,CAAeyB,aAAnB,EAAiC;QAC9B,IAAGd,EAAE,CAACe,KAAH,CAASC,YAAT,IAAyB,OAAOhB,EAAE,CAACe,KAAH,CAASC,YAAT,CAAsBC,KAA7B,IAAsC,UAAlE,EAA6E;UAC5EjB,EAAE,CAACe,KAAH,CAASC,YAAT,CAAsBC,KAAtB;QACD;;QACAjB,EAAE,CAACO,MAAH,CAAUC,MAAV,CAAiB,WAAjB,EAA8B;UAACC,OAAO,EAAE;QAAV,CAA9B;QACA,OAAO,KAAP;MACH;;MACA,OAAO,IAAP;IACD,CAzCG;;IA2CJS,IAAI,GAAE;MACF,KAAK9B,MAAL,GAAc,KAAd;MACA,KAAKS,QAAL;IACH,CA9CG;;IAgDJsB,IAAI,GAAE;MACJ,KAAK/B,MAAL,GAAc,IAAd;MACA,KAAKI,QAAL,GAAgB,KAAhB,CAFI,CAEmB;;MACvB,KAAK4B,iBAAL;IACD,CApDG;;IAsDJ;;;IAGAC,YAAY,GAAE;MACV,KAAK7B,QAAL,GAAgB,UAAhB;MACA,KAAKJ,MAAL,GAAc,IAAd;MACA,KAAKkC,SAAL,CAAe,MAAI;QACjB,IAAG,KAAKP,KAAL,CAAWQ,YAAX,IAA2B,KAAKR,KAAL,CAAWQ,YAAX,CAAwBC,GAAnD,IAA0D,OAAO,KAAKT,KAAL,CAAWQ,YAAX,CAAwBC,GAAxB,CAA4BP,KAAnC,IAA4C,UAAzG,EAAoH,CAClH;QACF;MACD,CAJD;MAKA,KAAK3B,SAAL,GAAiB,KAAKC,EAAL,CAAQ,oBAAR,CAAjB,CARU,CASV;;MACA,IAAG,CAAC,KAAKE,aAAN,IAAuB,KAAKA,aAAL,CAAmBgC,MAAnB,IAA6B,CAAvD,EAAyD;QACvD,KAAKC,eAAL;MACF;IACH,CAtEG;;IAwEJ;;;IAGAC,WAAW,CAACC,QAAD,EAAU;MACnB,IAAI5B,EAAC,GAAI,IAAT;MACA;;MACA,IAAG4B,QAAO,IAAKA,QAAQ,CAACH,MAAT,GAAkB,CAAjC,EAAmC;QAChC,KAAK/B,aAAL,GAAqB,IAArB;QACA,KAAKA,aAAL,GAAqBkC,QAAQ,CAACC,GAAT,CAAaC,CAAC,IAAEA,CAAC,CAACC,WAAlB,CAArB;MACH;IACD,CAlFG;;IAoFJC,qBAAqB,CAACC,MAAD,EAAQ,CACzB;IACH,CAtFG;;IAwFJC,uBAAuB,CAACD,MAAD,EAAQ,CAC3B;IACH,CA1FG;;IA4FJ;;;IAGA,MAAMP,eAAN,GAAuB;MACnB,IAAIvB,GAAE,GAAI,MAAMnB,WAAW,CAACoB,OAAZ,CAAoBpB,WAAW,CAACqB,OAAhC,EAAyC,KAAzC,CAAhB;;MACA,IAAGF,GAAE,IAAKA,GAAG,CAAChB,IAAd,EAAmB;QACjB,IAAGgB,GAAG,CAAChB,IAAJ,CAASsC,MAAT,GAAkB,CAArB,EAAuB;UACrB,KAAKU,kBAAL,GAA0BhC,GAAG,CAAChB,IAA9B;UACA,KAAKM,aAAL,GAAqB,EAArB;;UACA,KAAI,IAAI2C,IAAI,CAAZ,EAAgBA,CAAC,GAAEjC,GAAG,CAAChB,IAAJ,CAASsC,MAA5B,EAAqCW,CAAC,EAAtC,EAAyC;YACvC,KAAK3C,aAAL,CAAmB4C,IAAnB,CAAwB;cACtBC,KAAK,EAAEnC,GAAG,CAAChB,IAAJ,CAASiD,CAAT,EAAYtB,aADG;cAEtByB,KAAK,EAAEpC,GAAG,CAAChB,IAAJ,CAASiD,CAAT,EAAYL;YAFG,CAAxB;UAIF,CARqB,CASrB;UACA;;QACF;MACF;IACH,CA/GG;;IAiHJ;;;IAGAS,UAAU,GAAE;MACT;MACA,IAAIC,UAAS,GAAI,KAAKN,kBAAL,CAAwBO,MAAxB,CAA+BZ,CAAC,IAAE,KAAKpC,aAAL,CAAmBiD,QAAnB,CAA4Bb,CAAC,CAACC,WAA9B,CAAlC,CAAjB,CAFS,CAEuF;;MAChG,KAAKa,KAAL,CAAW,aAAX,EAA0BH,UAA1B;MACA,KAAKrD,MAAL,GAAc,KAAd;IACF,CAzHG;;IA2HJgC,iBAAiB,GAAE;MACf,KAAKE,SAAL,CAAe,MAAI;QACjB,IAAG,KAAKP,KAAL,CAAWC,YAAX,IAA2B,OAAO,KAAKD,KAAL,CAAWC,YAAX,CAAwBC,KAA/B,IAAwC,UAAtE,EAAiF;UAC/E,KAAKF,KAAL,CAAWC,YAAX,CAAwBC,KAAxB;QACF;MACD,CAJD;IAKH,CAjIG;;IAmIJP,SAAS,CAACmC,YAAD,EAAc;MACrB,KAAK3B,IAAL;;MACA,IAAG,KAAKvB,YAAR,EAAqB;QAAC;QACjB,KAAKiD,KAAL,CAAW,aAAX,EAA0B,CAACC,YAAD,CAA1B;MACJ,CAFD,MAEK;QACH,KAAKC,OAAL,CAAaC,QAAb;MACF;IACD,CA1IG;;IA4IJC,QAAQ,CAACC,MAAD,EAAQ;MACd,IAAIjD,EAAC,GAAI,IAAT;MACAA,EAAE,CAACR,QAAH,GAAc,MAAd;MACAQ,EAAE,CAACV,SAAH,GAAeU,EAAE,CAACT,EAAH,CAAM,eAAN,CAAf;;MACA,IAAG0D,MAAH,EAAU;QACRjD,EAAE,CAACX,WAAH,GAAiB6D,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,MAAf,CAAX,CAAjB;QACAjD,EAAE,CAACZ,MAAH,GAAY,IAAZ;QACAY,EAAE,CAACoB,iBAAH;MACF;IACD,CArJG;;IAuJJ;;;IAGAiC,aAAa,GAAE;MACX,IAAIrD,EAAC,GAAI,IAAT;MACAA,EAAE,CAACR,QAAH,GAAc,KAAd;MACAQ,EAAE,CAACV,SAAH,GAAeU,EAAE,CAACT,EAAH,CAAM,cAAN,CAAf;MACAS,EAAE,CAACsB,SAAH,CAAa,MAAI;QACftB,EAAE,CAACe,KAAH,CAASC,YAAT,CAAsBC,KAAtB;MACD,CAFD;MAGAjB,EAAE,CAACL,YAAH,GAAkB,IAAlB;IACJ;;EAlKI;AAnBG,CAAf","names":["CategoryAPI","vMultiselect","components","data","isShow","currentItem","titleForm","$t","editMode","storeCategory","categoryValue","openFromPost","created","initData","methods","saveCategory","me","method","validate","res","request","urlName","StatusCode","$store","commit","message","afterSave","Data","error","console","category_name","$refs","categoryName","focus","hide","show","focusFirstControl","showQuickAdd","$nextTick","categoryList","$el","length","getCategoryData","bindingData","listData","map","x","category_id","comboCategorySelected","option","comboCategoryDeSelected","categoryOriginData","i","push","label","value","sendToPost","listObject","filter","includes","$emit","callbackData","$parent","loadData","showEdit","object","JSON","parse","stringify","changeModeAdd"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\category\\CategoryDetail.vue"],"sourcesContent":["<template>\r\n     <!-- Dialog thêm mới -->\r\n  <div class=\"m-popup\" v-bind:class=\"{ show: isShow }\" ref=\"categoryDialog\">\r\n    <div class=\"m-popup-box\">\r\n      <!-- Header -->\r\n      <div class=\"m-popup-header\">\r\n        <div>\r\n            <div class=\"popup-title-text\">{{titleForm}}</div>              \r\n        </div>\r\n        <div>          \r\n            <div class=\"popup-close m-icon m-icon-24 m-close\" @click=\"hide\"></div>            \r\n        </div>\r\n      </div>\r\n      <!-- Header end-->\r\n      <!-- Form -->\r\n      <div class=\"m-popup-body\">\r\n        <!-- Detail -->\r\n        <div class=\"form-container\" v-if=\"editMode!='QuickAdd'\">\r\n            <m-input \r\n              ref=\"categoryName\"\r\n              :labelText=\"$t('category.category_name')\"\r\n              v-model=\"currentItem.category_name\"\r\n              @keyup.enter=\"saveCategory\"\r\n            />\r\n        </div>\r\n        <div class=\"form-container\" v-if=\"editMode=='QuickAdd'\">\r\n          <m-label text=\"Tìm danh mục\" />                    \r\n          <v-multiselect\r\n            ref=\"categoryList\"\r\n            mode=\"tags\"\r\n            v-model=\"categoryValue\"\r\n            :options=\"storeCategory\"\r\n            label=\"label\"\r\n            :close-on-select=\"true\"\r\n            :clearOnSelect=\"true\"\r\n            :searchable=\"true\"\r\n            placeholder=\"Bấm vào để tìm kiếm\"\r\n            noResultsText=\"Không có dữ liệu hiển thị\"                                  \r\n            :canClear=\"false\"\r\n            :canDeselect=\"false\"\r\n            @select=\"comboCategorySelected\"\r\n            @deselect=\"comboCategoryDeSelected\"\r\n          />\r\n          <div class=\"quick-add-action\" v-if=\"editMode=='QuickAdd'\">Không tìm thấy danh mục?\r\n             <span class=\"quick-add-text\" @click=\"changeModeAdd\">Tạo mới</span>\r\n          </div>\r\n        </div>\r\n        <!-- Detail end-->\r\n\r\n        <!-- Footer -->\r\n        <div class=\"footer-container flex-grow\">\r\n          <div class=\"footer-line\">\r\n            <m-button \r\n                v-if=\"editMode!='QuickAdd'\"\r\n                :text=\"$t('Save')\" \r\n                class=\"w-full\"                                 \r\n                @click=\"saveCategory\"\r\n            />\r\n            <m-button \r\n                v-if=\"editMode=='QuickAdd'\"\r\n                :text=\"$t('category.add_button')\" \r\n                class=\"w-full\"                                 \r\n                @click=\"sendToPost\"\r\n            />            \r\n          </div>\r\n        </div>\r\n        <!-- Footer end-->\r\n      </div>\r\n      <!-- Form end -->\r\n    </div>\r\n  </div>  \r\n</template>\r\n\r\n<script>\r\nimport CategoryAPI from \"@/api/CategoryAPI\"\r\n//multi vue 3\r\nimport vMultiselect from \"@vueform/multiselect\";\r\nimport \"@vueform/multiselect/themes/default.css\";\r\nexport default {\r\n  components:{\r\n    /* eslint-disable vue/no-unused-components */\r\n    \"v-multiselect\": vMultiselect,\r\n  },\r\n    data() {\r\n        return {\r\n            isShow: false,\r\n            currentItem: {},\r\n            titleForm: this.$t('category.add'),\r\n            editMode: 'Add',\r\n            storeCategory:[],\r\n            categoryValue: null,\r\n            openFromPost: false,\r\n        }\r\n    },\r\n    created(){\r\n      this.initData();\r\n    },\r\n    methods:{\r\n        initData(){\r\n          this.currentItem = {};\r\n          this.categoryValue = null;\r\n          this.titleForm = this.$t('category.add');\r\n          this.editMode = 'Add';\r\n        },\r\n\r\n        async saveCategory(){\r\n          let me = this;\r\n          try {\r\n            let method = 'POST';\r\n            if(me.editMode == 'Edit') method = 'PUT';\r\n            if(!await me.validate()) return;\r\n            let res = await CategoryAPI.request(CategoryAPI.urlName, method, me.currentItem);\r\n            if(res && res.data){\r\n              if(res.data.StatusCode == 201){\r\n                if(!me.openFromPost){\r\n                  me.$store.commit(\"showSuccess\", {message: me.$t(\"message.success_add\")});\r\n                }\r\n                me.afterSave(res.data.Data);\r\n              }else if(res.data.StatusCode == 200){\r\n                me.$store.commit(\"showSuccess\", {message: me.$t(\"message.success\")});\r\n                me.afterSave();\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        },\r\n\r\n        async validate(){\r\n          let me = this;\r\n          if(!me.currentItem.category_name){\r\n             if(me.$refs.categoryName && typeof me.$refs.categoryName.focus == \"function\"){\r\n              me.$refs.categoryName.focus();\r\n             }\r\n             me.$store.commit(\"showError\", {message: \"Tên danh mục không được bỏ trống.\"});\r\n             return false;\r\n          }\r\n          return true;\r\n        },\r\n\r\n        hide(){\r\n            this.isShow = false;\r\n            this.initData();\r\n        },\r\n\r\n        show(){\r\n          this.isShow = true;\r\n          this.editMode = 'Add'; //mặc định gọi vào hàm này là thêm mới\r\n          this.focusFirstControl();\r\n        },\r\n\r\n        /**\r\n         * show form thêm nhanh , tìm kiếm tại form thêm bài viết\r\n         */\r\n        showQuickAdd(){\r\n            this.editMode = 'QuickAdd';\r\n            this.isShow = true;            \r\n            this.$nextTick(()=>{\r\n              if(this.$refs.categoryList && this.$refs.categoryList.$el && typeof this.$refs.categoryList.$el.focus == \"function\"){\r\n                // this.$refs.categoryList.$el.focus(); //tạm thời ko focus vì auto xổ combo xấu quá\r\n              }\r\n            })\r\n            this.titleForm = this.$t('category.quick_add');\r\n            //lấy dữ liệu danh mục\r\n            if(!this.storeCategory || this.storeCategory.length == 0){\r\n              this.getCategoryData();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hàm xử lý binding lên khi sửa\r\n         */\r\n        bindingData(listData){          \r\n          let me = this;\r\n          debugger\r\n          if(listData && listData.length > 0){\r\n             this.categoryValue = null;\r\n             this.categoryValue = listData.map(x=>x.category_id);\r\n          }\r\n        },\r\n\r\n        comboCategorySelected(option){\r\n            // this.storeCategory.push(option);\r\n        },\r\n\r\n        comboCategoryDeSelected(option){\r\n            // this.storeCategory.splice(this.storeCategory.indexOf(option),1);\r\n        },\r\n\r\n        /**\r\n         * Hàm lấy dữ lệu danh mục\r\n         */\r\n        async getCategoryData(){\r\n            let res = await CategoryAPI.request(CategoryAPI.urlName, 'GET');\r\n            if(res && res.data){              \r\n              if(res.data.length > 0){\r\n                this.categoryOriginData = res.data;\r\n                this.storeCategory = [];\r\n                for(let i = 0 ; i< res.data.length ; i++){\r\n                  this.storeCategory.push({\r\n                    label: res.data[i].category_name,\r\n                    value: res.data[i].category_id,\r\n                  })\r\n                }\r\n                //lưu cache để tránh gọi nhiều lần\r\n                //todo\r\n              }              \r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gửi giá trị được chọn tới bài viết\r\n         */\r\n        sendToPost(){\r\n           debugger                      \r\n           let listObject = this.categoryOriginData.filter(x=>this.categoryValue.includes(x.category_id)); //tìm ra các bản ghi trùng id, do hiện tại value chỉ chứa mỗi id\r\n           this.$emit(\"changeValue\", listObject);\r\n           this.isShow = false;\r\n        },\r\n\r\n        focusFirstControl(){\r\n            this.$nextTick(()=>{\r\n              if(this.$refs.categoryName && typeof this.$refs.categoryName.focus == \"function\"){\r\n                this.$refs.categoryName.focus();\r\n              }\r\n            })\r\n        },\r\n\r\n        afterSave(callbackData){\r\n          this.hide();\r\n          if(this.openFromPost){//nếu là mở từ form bài viết\r\n               this.$emit(\"changeValue\", [callbackData]);\r\n          }else{\r\n            this.$parent.loadData();\r\n          }\r\n        },\r\n\r\n        showEdit(object){\r\n          let me = this;\r\n          me.editMode = 'Edit';\r\n          me.titleForm = me.$t('category.edit');\r\n          if(object){            \r\n            me.currentItem = JSON.parse(JSON.stringify(object));\r\n            me.isShow = true;\r\n            me.focusFirstControl();\r\n          }\r\n        },\r\n\r\n        /**\r\n         * Chuyển sang mode thêm mới\r\n         */\r\n        changeModeAdd(){\r\n            let me = this;\r\n            me.editMode = 'Add';\r\n            me.titleForm = me.$t('category.add');  \r\n            me.$nextTick(()=>{\r\n              me.$refs.categoryName.focus();\r\n            });\r\n            me.openFromPost = true;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"/src/style/common/dialog.css\");\r\n.quick-add-action{\r\n  color: #000;\r\n  margin-right: 9px;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.quick-add-action .quick-add-text{\r\n  color: var(--default-color);\r\n  text-decoration: underline;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
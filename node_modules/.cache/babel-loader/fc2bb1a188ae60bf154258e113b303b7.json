{"ast":null,"code":"import PostAPI from \"@/api/PostAPI\";\nimport { getStorage, ref, uploadBytes, getMetadata, getDownloadURL, list } from \"firebase/storage\";\nconst storage = getStorage();\nimport { v4 as uuidv4 } from 'uuid';\nimport 'vue3-carousel/dist/carousel.css';\nimport { Carousel, Slide, Pagination, Navigation } from 'vue3-carousel'; //postcategory\n\nimport CategoryDetail from \"@/views/category/CategoryDetail.vue\";\nexport default {\n  components: {\n    /* eslint-disable vue/no-unused-components */\n    Carousel,\n    Slide,\n    Pagination,\n    Navigation,\n    \"category-detail\": CategoryDetail\n  },\n\n  data() {\n    return {\n      //currentItem.post_content: \"\", //nội dung của bài viết\n      isShow: false,\n      //popup có hiện ko\n      listImage: [],\n      //danh sách ảnh của bài viết\n      hasImage: false,\n      listCategory: [],\n      //danh sách danh mục của bài viết\n      formTitle: \"Tạo bài viết\",\n      editMode: 'Add',\n      currentItem: {},\n      //đối tượng post\n      ratingText1: 'Tuyệt vời',\n      //nội dung đánh giá 1\n      ratingText2: 'Tuyệt vời'\n    };\n  },\n\n  created() {\n    let me = this;\n    me.initStaticData();\n  },\n\n  methods: {\n    /**\r\n     * Hàm khởi tạo dữ liệu tĩnh\r\n     * @created : nvquyet\r\n     */\n    initStaticData() {\n      let me = this;\n      me.initNewItem();\n    },\n\n    initNewItem() {\n      let me = this;\n      me.currentItem.beauty_star = 5;\n      me.currentItem.service_star = 5;\n    },\n\n    /**\r\n     * Hàm xử lý rating\r\n     * @param {Number} index\r\n     * @param {String} key : đánh dấu là sao nào(dùng chung)\r\n     */\n    starClick(key, index) {\n      if (index != null && typeof index != \"undefined\") {\n        let me = this;\n        let component = null;\n\n        if (key == 'Beauty') {\n          me.currentItem.beauty_star = index;\n          component = me.$refs.ratingComponent1;\n        }\n\n        if (key == 'Service') {\n          me.currentItem.service_star = index;\n          component = me.$refs.ratingComponent2;\n        }\n\n        if (component && component.querySelectorAll(`.rating-star`)) {\n          //tìm tất cả các star\n          let listStar = component.querySelectorAll(`.rating-star`); //set full màu như ban đầu\n          //set mất màu cho các index > index hiện tại\n\n          if (listStar && listStar.length > 0) {\n            for (let i = 0; i < listStar.length; i++) {\n              listStar[i].classList.remove('unselected');\n\n              if (i > index - 1) {\n                listStar[i].classList.add('unselected');\n              }\n            }\n          }\n        }\n      }\n    },\n\n    /**\r\n     * Lấy text theo số sao\r\n     * @param {Number} star : số sao\r\n     */\n    getRatingText(star) {\n      switch (star) {\n        case 1:\n          return 'Tệ';\n\n        case 2:\n          return 'Chưa tốt';\n\n        case 3:\n          return 'Bình thường';\n\n        case 4:\n          return 'Tốt';\n\n        case 5:\n          return 'Tuyệt với';\n\n        default:\n          return '';\n      }\n    },\n\n    /**\r\n     * hàm xử lý xóa 1 ảnh khỏi danh sách ảnh hiện tại\r\n     */\n    removeImage(image) {\n      if (image) {\n        this.listImage.splice(this.listImage.indexOf(image), 1);\n      }\n    },\n\n    /**\r\n     * Hàm nhận emit từ categoryDetail.\r\n     * @param {Array} list\r\n     */\n    getCategory(list) {\n      if (list && list.length > 0) {\n        this.listCategory = JSON.parse(JSON.stringify(list));\n      } else {\n        this.listCategory = [];\n      }\n    },\n\n    openCategory() {\n      this.$refs.categoryDetail.showQuickAdd(); //xử lý binding dữ liệu hiện có lên combo\n\n      if (this.listCategory && this.listCategory.length > 0) {\n        this.$refs.categoryDetail.bindingData(this.listCategory);\n      }\n    },\n\n    chooseImage() {\n      document.getElementById(\"inputUpload\").click();\n    },\n\n    /**\r\n     * hàm xử lý up ảnh lên firebase\r\n     */\n    uploadImage(e) {\n      let me = this;\n      const metadata = {\n        contentType: 'image/jpeg'\n      };\n\n      if (me.$commonFunc.validateInputImage(e.target)) {\n        const storageRef = ref(storage, `image/${uuidv4()}.jpeg`); // Upload the file and metadata            \n\n        const uploadTask = uploadBytes(storageRef, e.target.files[0], metadata).then(() => {\n          getDownloadURL(storageRef).then(x => {\n            debugger;\n            this.listImage.push(x);\n            this.hasImage = true;\n          });\n        }); // getMetadata(storageRef).then((metadata)=>{\n        //     debugger\n        // })\n      }\n    },\n\n    /**\r\n     * Chỉnh sửa bài viết\r\n     */\n    async editPost() {\n      let me = this;\n      if (!me.currentItem.post_content && !me.listImage) return; //nếu bài viết ko nội dung hoặc ko có ảnh nào thì ko cho lưu      \n\n      me.$commonFunc.load();\n      let obj = {\n        post_id: me.currentItem.post_id,\n        post_content: me.currentItem.post_content,\n        author: me.$session.get('UserID'),\n        post_image: JSON.stringify(this.listImage)\n      };\n      let res = await PostAPI.request(PostAPI.urlName, 'PUT', obj);\n\n      if (res && res.data) {\n        if (res.data.StatusCode == 200) {\n          console.log(\"Sua thành công\"); //clear dữ liệu trong form và đóng popup\n\n          me.afterInsert();\n        } else {\n          console.log(\"Thêm mới thất bại\");\n        }\n      }\n\n      me.$commonFunc.unload();\n    },\n\n    /**\r\n     * Thêm mới bài viết\r\n     */\n    async savePost() {\n      let me = this;\n      if (!me.currentItem.post_content && !me.listImage) return;\n\n      if (me.editMode == 'Add') {\n        me.$commonFunc.load();\n        let obj = {\n          post_content: me.currentItem.post_content,\n          author: me.$session.get('UserID'),\n          posted_date: new Date(),\n          post_image: JSON.stringify(this.listImage)\n        };\n        let res = await PostAPI.request(PostAPI.urlName, 'POST', obj);\n\n        if (res && res.data) {\n          if (res.data.StatusCode == 201) {\n            console.log(\"Thêm mới thành công\"); //clear dữ liệu trong form và đóng popup\n\n            me.afterInsert();\n          } else {\n            console.log(\"Thêm mới thất bại\");\n          }\n        }\n\n        me.$commonFunc.unload();\n      } else {\n        me.editPost();\n      }\n    },\n\n    /**\r\n     * Hàm thêm mới có cả danh mục\r\n     */\n    async saveFull() {\n      let me = this;\n      if (!me.currentItem.post_content && !me.listImage) return;\n\n      if (me.editMode == 'Add') {\n        me.$commonFunc.load();\n        let obj = {\n          post: {\n            post_content: me.currentItem.post_content,\n            author: me.$session.get('UserID'),\n            posted_date: me.$commonFunc.setTimeZone(new Date()),\n            post_image: JSON.stringify(this.listImage)\n          },\n          categories: this.listCategory\n        };\n        let res = await PostAPI.request(PostAPI.urlName + \"/save_full\", 'POST', obj);\n\n        if (res && res.data) {\n          if (res.data.StatusCode == 201) {\n            console.log(\"Thêm mới thành công\"); //clear dữ liệu trong form và đóng popup\n\n            me.afterInsert();\n          } else {\n            console.log(\"Thêm mới thất bại\");\n          }\n        }\n\n        me.$commonFunc.unload();\n      } else {\n        me.editFull();\n      }\n    },\n\n    async editFull() {\n      let me = this;\n      me.$commonFunc.load();\n      let obj = {\n        post: Object.assign(this.currentItem, {\n          post_content: me.currentItem.post_content,\n          post_image: JSON.stringify(this.listImage)\n        }),\n        categories: this.listCategory\n      };\n      let res = await PostAPI.request(PostAPI.urlName + \"/save_full\", 'PUT', obj);\n\n      if (res && res.data) {\n        debugger;\n\n        if (res.data.StatusCode == 200) {\n          console.log(\"Sửa thành công\"); //clear dữ liệu trong form và đóng popup\n\n          me.afterInsert();\n        } else {\n          console.log(\"Sửa thất bại\");\n        }\n      }\n\n      me.$commonFunc.unload();\n    },\n\n    hide() {\n      this.isShow = false;\n\n      if (this.editMode == 'Edit') {\n        this.resetForm();\n      }\n    },\n\n    show() {\n      this.isShow = true;\n      this.editMode = 'Add';\n      this.formTitle = \"Tạo bài viết\";\n      this.listCategory = [];\n      this.initNewItem();\n      this.$nextTick(() => {\n        this.$refs.content.focus();\n      });\n    },\n\n    /**\r\n     * Show edit\r\n     * @param {Object} post : thông tin bài viết\r\n     * @param {Array} listCategory : category của bài viết này\r\n     */\n    showEdit(object, listCategory) {\n      this.isShow = true;\n      this.editMode = 'Edit';\n      this.$nextTick(() => {\n        this.$refs.content.focus();\n      });\n      this.formTitle = \"Chỉnh sửa bài viết\";\n\n      if (object) {\n        this.currentItem = JSON.parse(JSON.stringify(object));\n        this.currentItem.post_content = object.post_content;\n        this.starClick('Beauty', this.currentItem.beauty_star);\n        this.starClick('Service', this.currentItem.service_star);\n        this.listImage = object.post_image ? JSON.parse(object.post_image) : [];\n        this.listCategory = listCategory;\n      }\n    },\n\n    afterInsert() {\n      this.currentItem = {};\n      this.currentItem.post_content = '';\n      this.hide(); //gọi parent load lại data\n\n      this.$parent.loadData();\n      this.$eventBus.emit(\"gotoTop\");\n    },\n\n    resetForm() {\n      this.currentItem = {};\n      this.currentItem.post_content = '';\n      this.listImage = [];\n      this.editMode = 'Add';\n    },\n\n    getSrc(src) {\n      return src;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["PostAPI","getStorage","ref","uploadBytes","getMetadata","getDownloadURL","list","storage","v4","uuidv4","Carousel","Slide","Pagination","Navigation","CategoryDetail","components","data","isShow","listImage","hasImage","listCategory","formTitle","editMode","currentItem","ratingText1","ratingText2","created","me","initStaticData","methods","initNewItem","beauty_star","service_star","starClick","key","index","component","$refs","ratingComponent1","ratingComponent2","querySelectorAll","listStar","length","i","classList","remove","add","getRatingText","star","removeImage","image","splice","indexOf","getCategory","JSON","parse","stringify","openCategory","categoryDetail","showQuickAdd","bindingData","chooseImage","document","getElementById","click","uploadImage","e","metadata","contentType","$commonFunc","validateInputImage","target","storageRef","uploadTask","files","then","x","push","editPost","post_content","load","obj","post_id","author","$session","get","post_image","res","request","urlName","StatusCode","console","log","afterInsert","unload","savePost","posted_date","Date","saveFull","post","setTimeZone","categories","editFull","Object","assign","hide","resetForm","show","$nextTick","content","focus","showEdit","object","$parent","loadData","$eventBus","emit","getSrc","src"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\post\\PostDetail.vue"],"sourcesContent":["<!--\r\nFile này là popup thêm mới bài viết\r\n-->\r\n<template>\r\n     <!-- Dialog thêm mới -->\r\n  <div class=\"m-popup\" v-bind:class=\"{ show: isShow }\" ref=\"dialog\">\r\n    <div class=\"m-popup-box h-625 w-800\">\r\n      <!-- Header -->\r\n      <div class=\"m-popup-header header-post\">\r\n        <div>\r\n            <div class=\"popup-title-text\">{{formTitle}}</div>            \r\n        </div>\r\n        <div>          \r\n            <div class=\"popup-close m-icon m-icon-24 m-close\" @click=\"hide\"></div>            \r\n        </div>\r\n      </div>\r\n      <!-- Header end-->\r\n      <div class=\"category-container flex\">\r\n            <div class=\"post-category-item\" v-for=\"category in listCategory\" v-bind:key=\"category\">{{category.category_name}}</div>            \r\n      </div>\r\n      <!-- Form -->\r\n      <div class=\"m-popup-body\">\r\n        <!-- Detail -->\r\n        <div class=\"form-container\">            \r\n           <m-input     \r\n                ref=\"content\"            \r\n                isTextArea\r\n                :height=\"90\"\r\n                :maxHeight=\"300\"\r\n                :showLabel=\"false\"\r\n                placeholder=\"Viết bài...\"\r\n                v-model=\"currentItem.post_content\"                \r\n           />\r\n           <div class=\"m-card flex align-center mt-2\" style=\"height: 250px; width:100%;\">\r\n                <div class=\"choose-image-button flex m-card-bottom\" @click=\"chooseImage\" v-if=\"!hasImage && editMode!='Edit' || listImage?.length == 0\">\r\n                    <div class=\"mr-2\" title=\"Chọn ảnh/ video\"> <i class=\"fas fa-images\" @click=\"chooseImage\" title=\"Chọn ảnh\"></i></div>\r\n                    <div>Chọn ảnh/ video</div>\r\n                </div>\r\n                <div class=\"image-preview-container\" v-if=\"listImage?.length > 0\">\r\n                    <Carousel :items-to-show=\"1\">\r\n                        <slide v-for=\"image in listImage\" :key=\"image\">                                        \r\n                            <img :src=\"getSrc(image)\" alt=\"\" class=\"img-slide\" @click=\"zoomImage\">     \r\n                            <div class=\"delete-button m-icon-24\" title=\"Xóa ảnh này\" @click=\"removeImage(image)\"><i class=\"fas fa-times-circle\"></i></div> \r\n                        </slide>                  \r\n                        <template #addons>\r\n                        <navigation v-if=\"listImage?.length > 1\" />\r\n                        <pagination v-if=\"listImage?.length > 1\" />\r\n                        </template>\r\n                    </Carousel>\r\n                </div>\r\n                <!-- <img id=\"imagePreview\" alt=\"image-preview\" class=\"image-upload\"> -->\r\n           </div>\r\n           <div class=\"m-card more-info\">\r\n                <div class=\"flex align-y-center\">\r\n                    <div class=\"mr-2\">Thêm vào bài viết của bạn</div>\r\n                    <div class=\"attachment-plus\" title=\"Chọn ảnh/ video\" @click=\"chooseImage\"><i class=\"fas fa-images\" title=\"Chọn ảnh\"></i></div>\r\n                    <div class=\"attachment-plus category\" title=\"Thêm danh mục\" @click=\"openCategory\"><i class=\"fas fa-tags\"></i></div>\r\n                    <div class=\"attachment-plus location\" title=\"Thêm địa điểm\"><i class=\"fas fa-map-marker-alt\"></i></div>\r\n                </div>\r\n           </div>\r\n           <div class=\"attachment\">                \r\n                <input id=\"inputUpload\" type=\"file\" @change=\"uploadImage\" style=\"display:none;\" accept=\".gif,.jpg,.jpeg,.png,.jfif\"/>\r\n           </div>    \r\n           <div class=\"rating m-card\">\r\n                <div class=\"rating-box-title font-bold\">Đánh giá chung</div>\r\n                <div class=\"rating-component\" ref=\"ratingComponent1\">\r\n                    <div class=\"rating-title mr-2\">Cảnh đẹp</div>\r\n                    <i class=\"rating-star fas fa-star mr-2\" v-for=\"index in 5\" :key=\"index\" @click=\"starClick('Beauty',index)\"></i>                    \r\n                    <div class=\"rating-description\">{{getRatingText(currentItem.beauty_star)}}</div>\r\n                </div>\r\n                <div class=\"rating-component\" ref=\"ratingComponent2\">\r\n                    <div class=\"rating-title mr-2\">Dịch vụ</div>\r\n                    <i class=\"rating-star fas fa-star mr-2\" v-for=\"index in 5\" :key=\"index\" @click=\"starClick('Service', index)\"></i>                    \r\n                    <div class=\"rating-description\">{{getRatingText(currentItem.service_star)}}</div>\r\n                </div>\r\n            </div>       \r\n        </div>\r\n        <!-- Detail end-->\r\n\r\n        <!-- Footer -->\r\n        <div class=\"footer-container flex-grow\">\r\n          <div class=\"footer-line\">\r\n            <m-button \r\n                text=\"Đăng\" \r\n                class=\"w-full\" \r\n                :disabled=\"!currentItem.post_content\" \r\n                :btnClass=\"!currentItem.post_content?'m-btn-second':'m-btn'\"\r\n                @click=\"saveFull\"\r\n            />            \r\n          </div>\r\n        </div>\r\n        <!-- Footer end-->\r\n      </div>\r\n      <!-- Form end -->\r\n    </div>\r\n  </div>\r\n  <category-detail ref=\"categoryDetail\" @changeValue=\"getCategory\"/>\r\n</template>\r\n\r\n<script>\r\nimport PostAPI from \"@/api/PostAPI\";\r\nimport { getStorage, ref, uploadBytes, getMetadata, getDownloadURL, list } from \"firebase/storage\";\r\nconst storage = getStorage();\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport 'vue3-carousel/dist/carousel.css'\r\nimport { Carousel, Slide, Pagination, Navigation } from 'vue3-carousel';\r\n//postcategory\r\nimport CategoryDetail from \"@/views/category/CategoryDetail.vue\";\r\n\r\nexport default {\r\n    components:{\r\n         /* eslint-disable vue/no-unused-components */        \r\n        Carousel,        \r\n        Slide,        \r\n        Pagination,        \r\n        Navigation,\r\n        \"category-detail\": CategoryDetail,\r\n    },\r\n    data() {\r\n        return {\r\n            //currentItem.post_content: \"\", //nội dung của bài viết\r\n            isShow: false, //popup có hiện ko\r\n            listImage: [], //danh sách ảnh của bài viết\r\n            hasImage: false,\r\n            listCategory: [], //danh sách danh mục của bài viết\r\n            formTitle: \"Tạo bài viết\",\r\n            editMode: 'Add',\r\n            currentItem: {}, //đối tượng post\r\n            ratingText1: 'Tuyệt vời', //nội dung đánh giá 1\r\n            ratingText2: 'Tuyệt vời'\r\n        }\r\n    },    \r\n    created(){\r\n        let me = this;\r\n        me.initStaticData();        \r\n    },\r\n    methods:{       \r\n        /**\r\n         * Hàm khởi tạo dữ liệu tĩnh\r\n         * @created : nvquyet\r\n         */\r\n        initStaticData(){\r\n            let me = this;\r\n            me.initNewItem();\r\n        },\r\n\r\n        initNewItem(){\r\n            let me = this;\r\n            me.currentItem.beauty_star = 5;\r\n            me.currentItem.service_star = 5;\r\n        },\r\n\r\n        /**\r\n         * Hàm xử lý rating\r\n         * @param {Number} index\r\n         * @param {String} key : đánh dấu là sao nào(dùng chung)\r\n         */\r\n        starClick(key, index){\r\n            if(index != null && typeof index != \"undefined\"){\r\n                let me = this;                  \r\n                let component = null;\r\n                if(key == 'Beauty') {\r\n                    me.currentItem.beauty_star = index;\r\n                    component = me.$refs.ratingComponent1 ;                    \r\n                }\r\n                if(key == 'Service') {\r\n                    me.currentItem.service_star = index;\r\n                    component = me.$refs.ratingComponent2;                      \r\n                }\r\n                if(component && component.querySelectorAll(`.rating-star`)){                    \r\n                    //tìm tất cả các star\r\n                    let listStar = component.querySelectorAll(`.rating-star`);\r\n                    //set full màu như ban đầu\r\n                    //set mất màu cho các index > index hiện tại\r\n                    if(listStar && listStar.length > 0){\r\n                        for(let i = 0; i < listStar.length; i++){\r\n                            listStar[i].classList.remove('unselected');\r\n                            if(i>index-1){\r\n                                listStar[i].classList.add('unselected');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Lấy text theo số sao\r\n         * @param {Number} star : số sao\r\n         */\r\n        getRatingText(star){\r\n            switch (star) {\r\n                case 1:\r\n                    return 'Tệ';\r\n                case 2:\r\n                    return 'Chưa tốt';\r\n                case 3:\r\n                    return 'Bình thường';\r\n                case 4:\r\n                    return 'Tốt';\r\n                case 5:\r\n                    return 'Tuyệt với';\r\n                default:\r\n                    return '';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * hàm xử lý xóa 1 ảnh khỏi danh sách ảnh hiện tại\r\n         */\r\n        removeImage(image){\r\n            if(image){\r\n                this.listImage.splice(this.listImage.indexOf(image),1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hàm nhận emit từ categoryDetail.\r\n         * @param {Array} list\r\n         */\r\n        getCategory(list){\r\n            if(list && list.length > 0){\r\n                this.listCategory = JSON.parse(JSON.stringify(list));\r\n            }else{\r\n                this.listCategory = [];\r\n            }\r\n        },\r\n\r\n        openCategory(){\r\n            this.$refs.categoryDetail.showQuickAdd();\r\n            //xử lý binding dữ liệu hiện có lên combo\r\n            if(this.listCategory && this.listCategory.length > 0){\r\n                this.$refs.categoryDetail.bindingData(this.listCategory);\r\n            }\r\n        },\r\n\r\n        chooseImage(){\r\n            document.getElementById(\"inputUpload\").click();\r\n        },\r\n\r\n        /**\r\n         * hàm xử lý up ảnh lên firebase\r\n         */\r\n        uploadImage(e){    \r\n            let me = this;\r\n            const metadata = {\r\n            contentType: 'image/jpeg',\r\n            };\r\n            if(me.$commonFunc.validateInputImage(e.target)){\r\n            const storageRef = ref(storage, `image/${uuidv4()}.jpeg`);\r\n            // Upload the file and metadata            \r\n            const uploadTask = uploadBytes(storageRef, e.target.files[0], metadata).then(()=>{\r\n                getDownloadURL(storageRef).then((x)=>{      \r\n                debugger               \r\n                this.listImage.push(x);\r\n                this.hasImage = true;\r\n                })            \r\n            });\r\n            // getMetadata(storageRef).then((metadata)=>{\r\n            //     debugger\r\n            // })\r\n\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Chỉnh sửa bài viết\r\n         */\r\n        async editPost(){\r\n            let me = this;\r\n            if(!me.currentItem.post_content && !me.listImage) return; //nếu bài viết ko nội dung hoặc ko có ảnh nào thì ko cho lưu      \r\n            me.$commonFunc.load();\r\n            let obj = {\r\n                post_id: me.currentItem.post_id,\r\n                post_content: me.currentItem.post_content,\r\n                author: me.$session.get('UserID'),                \r\n                post_image: JSON.stringify(this.listImage),                \r\n            }\r\n            let res = await PostAPI.request(PostAPI.urlName, 'PUT', obj);\r\n            if(res && res.data){\r\n                if(res.data.StatusCode == 200){\r\n                    console.log(\"Sua thành công\");\r\n                    //clear dữ liệu trong form và đóng popup\r\n                    me.afterInsert();\r\n                }else{\r\n                    console.log(\"Thêm mới thất bại\");\r\n                }\r\n            }\r\n            me.$commonFunc.unload();\r\n        },\r\n\r\n        /**\r\n         * Thêm mới bài viết\r\n         */\r\n        async savePost(){\r\n            let me = this;\r\n            if(!me.currentItem.post_content && !me.listImage) return;    \r\n            if(me.editMode == 'Add'){\r\n                me.$commonFunc.load();\r\n                let obj = {\r\n                    post_content: me.currentItem.post_content,\r\n                    author: me.$session.get('UserID'),\r\n                    posted_date: new Date(),\r\n                    post_image: JSON.stringify(this.listImage),\r\n                }\r\n                let res = await PostAPI.request(PostAPI.urlName, 'POST', obj);\r\n                if(res && res.data){\r\n                    if(res.data.StatusCode == 201){\r\n                        console.log(\"Thêm mới thành công\");\r\n                        //clear dữ liệu trong form và đóng popup\r\n                        me.afterInsert();\r\n                    }else{\r\n                        console.log(\"Thêm mới thất bại\");\r\n                    }\r\n                }\r\n                me.$commonFunc.unload();                           \r\n            }else{\r\n                me.editPost();\r\n            }        \r\n        },\r\n\r\n        /**\r\n         * Hàm thêm mới có cả danh mục\r\n         */\r\n        async saveFull(){\r\n            let me = this;\r\n            if(!me.currentItem.post_content && !me.listImage) return;    \r\n            if(me.editMode == 'Add'){\r\n                me.$commonFunc.load();\r\n                let obj = {\r\n                    post:{\r\n                        post_content: me.currentItem.post_content,\r\n                        author: me.$session.get('UserID'),\r\n                        posted_date: me.$commonFunc.setTimeZone(new Date()),\r\n                        post_image: JSON.stringify(this.listImage)\r\n                    },\r\n                    categories:this.listCategory\r\n                }\r\n                let res = await PostAPI.request(PostAPI.urlName+\"/save_full\", 'POST', obj);\r\n                if(res && res.data){\r\n                    if(res.data.StatusCode == 201){\r\n                        console.log(\"Thêm mới thành công\");\r\n                        //clear dữ liệu trong form và đóng popup\r\n                        me.afterInsert();\r\n                    }else{\r\n                        console.log(\"Thêm mới thất bại\");\r\n                    }\r\n                }\r\n                me.$commonFunc.unload();                           \r\n            }else{\r\n                me.editFull();\r\n            } \r\n        },\r\n\r\n        async editFull(){\r\n            let me = this;\r\n            me.$commonFunc.load();\r\n            let obj = {\r\n                post:Object.assign(this.currentItem,{\r\n                    post_content: me.currentItem.post_content,\r\n                    post_image: JSON.stringify(this.listImage)\r\n                }),\r\n                categories:this.listCategory\r\n            }\r\n            let res = await PostAPI.request(PostAPI.urlName+\"/save_full\", 'PUT', obj);\r\n            if(res && res.data){\r\n                debugger\r\n                if(res.data.StatusCode == 200){\r\n                    console.log(\"Sửa thành công\");\r\n                    //clear dữ liệu trong form và đóng popup\r\n                    me.afterInsert();\r\n                }else{\r\n                    console.log(\"Sửa thất bại\");\r\n                }\r\n            }\r\n            me.$commonFunc.unload();  \r\n        },\r\n\r\n        hide(){            \r\n            this.isShow = false;\r\n            if(this.editMode =='Edit'){\r\n                this.resetForm();\r\n            }\r\n        },\r\n\r\n        show(){\r\n            this.isShow = true;\r\n             this.editMode = 'Add';\r\n             this.formTitle = \"Tạo bài viết\";\r\n             this.listCategory = [];\r\n             this.initNewItem();\r\n            this.$nextTick(()=>{\r\n                this.$refs.content.focus();\r\n            })\r\n        },\r\n\r\n        /**\r\n         * Show edit\r\n         * @param {Object} post : thông tin bài viết\r\n         * @param {Array} listCategory : category của bài viết này\r\n         */\r\n        showEdit(object, listCategory){\r\n            this.isShow = true;\r\n            this.editMode = 'Edit';\r\n            this.$nextTick(()=>{\r\n                this.$refs.content.focus();\r\n            });            \r\n            this.formTitle = \"Chỉnh sửa bài viết\";\r\n            if(object){\r\n                this.currentItem = JSON.parse(JSON.stringify(object));\r\n                this.currentItem.post_content = object.post_content;\r\n                this.starClick('Beauty', this.currentItem.beauty_star);\r\n                this.starClick('Service', this.currentItem.service_star);\r\n                this.listImage = object.post_image? JSON.parse(object.post_image) : [];                                \r\n                this.listCategory = listCategory;\r\n            }\r\n        },\r\n\r\n        afterInsert(){            \r\n            this.currentItem = {};\r\n            this.currentItem.post_content = '';\r\n            this.hide();\r\n            //gọi parent load lại data\r\n            this.$parent.loadData(); \r\n            this.$eventBus.emit(\"gotoTop\");           \r\n        },\r\n\r\n        resetForm(){\r\n            this.currentItem = {};\r\n            this.currentItem.post_content = '';\r\n            this.listImage = [];\r\n            this.editMode = 'Add';\r\n        },\r\n\r\n        getSrc(src){\r\n            return src;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import url(\"/src/style/common/dialog.css\");\r\n.form-container{\r\n    overflow: auto;\r\n    padding-right: 5px;\r\n    .attachment{\r\n        cursor: pointer;\r\n    }\r\n\r\n    .rating{\r\n        .rating-component{\r\n            display: flex;\r\n            align-items:center;\r\n            height: 40px;\r\n            .rating-title{\r\n                width: 70px;\r\n            }\r\n            .rating-star{\r\n                font-size: 24px;       \r\n                color: var(--warning-color);       \r\n                cursor: pointer;                  \r\n            }\r\n            .rating-star.unselected{\r\n                font-size: 24px;      \r\n                color: var(--disabled-color);                                     \r\n            }\r\n            .rating-description{\r\n                color: var(--warning-color);                         \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.form-container .fa-images{\r\n  color: var(--default-color);\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-container .choose-image{\r\n    cursor: pointer;\r\n}\r\n.form-container .more-info{\r\n    align-items: center;\r\n}\r\n.form-container .more-info .attachment-plus{\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;    \r\n    margin-left: 2px;\r\n    margin-right: 2px;\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    background: var(--bg-main);\r\n}\r\n.form-container .more-info .attachment-plus:hover{\r\n    background: var(--input-border);\r\n}\r\n\r\n.attachment-plus.category{\r\n    color: var(--info-color);\r\n}\r\n\r\n.attachment-plus.location{\r\n    color: var(--warning-color);\r\n}\r\n.image-upload{\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n}\r\n.choose-image-button{\r\n    cursor: pointer;\r\n}\r\n.choose-image-button:hover{\r\n    background: var(--disabled-color);\r\n}\r\n.image-preview-container{\r\n    height: 100%;\r\n    width:100%;\r\n}\r\n.image-preview-container .img-slide{\r\n    height: 230px!important;\r\n}\r\n.image-preview-container .carousel{\r\n    height: 100%;\r\n}\r\n.image-preview-container .carousel .carousel_viewport{\r\n    height: calc(100% - 15px);\r\n}\r\n.image-preview-container .carousel .carousel_viewport .carousel__slide{\r\n    width: fit-content;\r\n}\r\n.category-container{\r\n    margin-bottom: 3px;\r\n}\r\n.category-container .post-category-item{\r\n    border-radius: 3px;\r\n    background: #e5e5e5;\r\n    font-size: 11px;\r\n    cursor: pointer;\r\n    padding: 3px 5px 3px 5px;\r\n    margin-right: 2px;\r\n}\r\n.header-post{\r\n    height: 35px!important;\r\n}\r\n.delete-button{\r\n    position: absolute;\r\n    top: 0;\r\n    right: 10px;\r\n}\r\n.delete-button .fa-times-circle{\r\n    font-size: 24px;\r\n    color: red;\r\n    cursor: pointer;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
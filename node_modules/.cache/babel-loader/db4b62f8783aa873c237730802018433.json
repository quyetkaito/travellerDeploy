{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"location-list\"\n};\nconst _hoisted_2 = {\n  class: \"filter\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"flex align-center\"\n};\nconst _hoisted_4 = {\n  class: \"filter-combo\"\n};\nconst _hoisted_5 = {\n  class: \"filter-combo\"\n};\nconst _hoisted_6 = {\n  class: \"filter-combo\"\n};\nconst _hoisted_7 = {\n  class: \"content-grid\"\n};\nconst _hoisted_8 = {\n  class: \"table-container\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"m-paging\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_m_input = _resolveComponent(\"m-input\");\n\n  const _component_v_multiselect = _resolveComponent(\"v-multiselect\");\n\n  const _component_m_grid = _resolveComponent(\"m-grid\");\n\n  const _component_m_pagination = _resolveComponent(\"m-pagination\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_m_input, {\n    showLabel: false,\n    modelValue: $data.textSearch,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textSearch = $event),\n    onInput: $options.searchData,\n    placeholder: \"Tìm kiếm\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"onInput\"]), _createElementVNode(\"div\", {\n    class: \"filter-button\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.filterButtonClick(0))\n  }, \"Miền Bắc\"), _createElementVNode(\"div\", {\n    class: \"filter-button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.filterButtonClick(1))\n  }, \"Miền Trung\"), _createElementVNode(\"div\", {\n    class: \"filter-button\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.filterButtonClick(2))\n  }, \"Miền Nam\"), true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_v_multiselect, {\n    ref: \"province\",\n    modelValue: $data.provinceValue,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.provinceValue = $event),\n    options: $data.storeProvince,\n    label: \"label\",\n    \"close-on-select\": true,\n    clearOnSelect: true,\n    searchable: true,\n    placeholder: \"Chọn tỉnh\",\n    noResultsText: \"Không có kết quả\",\n    noOptionsText: \"Không có dữ liệu\",\n    canClear: false,\n    canDeselect: false,\n    onSelect: $options.comboProvinceSelected,\n    onOpen: $options.comboProvinceBeforeExpand\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\", \"onSelect\", \"onOpen\"])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_v_multiselect, {\n    ref: \"district\",\n    modelValue: $data.districtValue,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.districtValue = $event),\n    options: $data.storeDistrict,\n    label: \"label\",\n    \"close-on-select\": true,\n    clearOnSelect: true,\n    searchable: true,\n    placeholder: \"Chọn huyện\",\n    noResultsText: \"Không có kết quả\",\n    noOptionsText: \"Không có dữ liệu\",\n    canClear: false,\n    canDeselect: false,\n    onSelect: $options.comboDistrictSelected,\n    onOpen: $options.comboDistrictBeforeExpand\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\", \"onSelect\", \"onOpen\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_v_multiselect, {\n    ref: \"ward\",\n    modelValue: $data.wardValue,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.wardValue = $event),\n    options: $data.storeWard,\n    label: \"label\",\n    \"close-on-select\": true,\n    clearOnSelect: true,\n    searchable: true,\n    placeholder: \"Chọn xã\",\n    noResultsText: \"Không có kết quả\",\n    noOptionsText: \"Không có dữ liệu\",\n    canClear: false,\n    canDeselect: false,\n    onSelect: $options.comboWardSelected,\n    onOpen: $options.comboWardBeforeExpand\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"options\", \"onSelect\", \"onOpen\"])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_m_grid, {\n    listData: $data.storeLocation,\n    columns: _ctx.columns,\n    onDblClick: $options.handleDoubleClick,\n    tableFunction: _ctx.tableFunction,\n    onEMainButtonClick: $options.handleFunctionClick,\n    onEDoubleClick: $options.handleDoubleClick,\n    multiSelect: false\n  }, null, 8\n  /* PROPS */\n  , [\"listData\", \"columns\", \"onDblClick\", \"tableFunction\", \"onEMainButtonClick\", \"onEDoubleClick\"])]), $data.showPaging ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_m_pagination, {\n    totalPage: $data.totalPage,\n    currentPage: $data.pageNumber,\n    pageSize: $data.pageSize,\n    onChangeCurrentPage: $options.setCurrentPage\n  }, null, 8\n  /* PROPS */\n  , [\"totalPage\", \"currentPage\", \"pageSize\", \"onChangeCurrentPage\"])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_createElementVNode","_createVNode","_component_m_input","showLabel","$data","$event","onInput","$options","placeholder","onClick","_component_v_multiselect","ref","options","label","clearOnSelect","searchable","noResultsText","noOptionsText","canClear","canDeselect","onSelect","onOpen","_component_m_grid","listData","columns","_ctx","onDblClick","tableFunction","onEMainButtonClick","onEDoubleClick","multiSelect","_component_m_pagination","totalPage","currentPage","pageSize","onChangeCurrentPage"],"sourceRoot":"","sources":["D:\\Traveller\\Traveller-Frontend\\traveller-ui\\src\\views\\location\\LocationList.vue"],"sourcesContent":["<template>\r\n<div class=\"location-list\">\r\n  <div class=\"filter\">\r\n    <m-input :showLabel=\"false\" v-model=\"textSearch\" @input=\"searchData\" placeholder=\"Tìm kiếm\"/>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(0)\">Miền Bắc</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(1)\">Miền Trung</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(2)\">Miền Nam</div> \r\n    <div class=\"flex align-center\" v-if=\"true\">\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"province\"        \r\n          v-model=\"provinceValue\"\r\n          :options=\"storeProvince\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn tỉnh\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboProvinceSelected\"   \r\n          @open=\"comboProvinceBeforeExpand\"     \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"district\"        \r\n          v-model=\"districtValue\"\r\n          :options=\"storeDistrict\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn huyện\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboDistrictSelected\"  \r\n          @open=\"comboDistrictBeforeExpand\"      \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"ward\"        \r\n          v-model=\"wardValue\"\r\n          :options=\"storeWard\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn xã\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboWardSelected\"  \r\n          @open=\"comboWardBeforeExpand\"  \r\n        />\r\n      </div>\r\n    </div>     \r\n  </div>\r\n  <div class=\"content-grid\">\r\n    <div class=\"table-container\">\r\n      <m-grid\r\n        :listData=\"storeLocation\"\r\n        :columns=\"columns\"\r\n        @dblClick=\"handleDoubleClick\"\r\n        :tableFunction=\"tableFunction\"\r\n        @eMainButtonClick=\"handleFunctionClick\"\r\n        @eDoubleClick=\"handleDoubleClick\"\r\n        :multiSelect=\"false\"\r\n      />      \r\n    </div>\r\n    <div class=\"m-paging\" v-if=\"showPaging\">\r\n      <m-pagination\r\n        :totalPage=\"totalPage\"\r\n        :currentPage=\"pageNumber\"\r\n        :pageSize=\"pageSize\"\r\n        @changeCurrentPage=\"setCurrentPage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\nimport LocationAPI from \"@/api/LocationAPI\";\r\nimport locationConfigCode from \"@/config/locationConfig\";\r\n// Khởi tạo một số hằng sử dụng nhiều lần\r\nconst dbName = \"myDB\";\r\nconst collection = \"locations\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textSearch: null,\r\n      storeLocation: [], //danh sách\r\n      storeLocationAll: [],\r\n      db: null, //indexedDB\r\n      locations: [],            \r\n      pageNumber: 1,\r\n      pageSize: 10,\r\n      totalPage: 0,\r\n      showPaging: true,\r\n      provinceValue: null,\r\n      storeProvince: [],     \r\n      districtValue: null,\r\n      storeDistrict: [],\r\n      wardValue: null,\r\n      storeWard: [], \r\n    };\r\n  },\r\n  created() {\r\n    let me = this;   \r\n    this.initStaticData(); \r\n  },\r\n  mounted(){        \r\n    // Kết nối DB\r\n    var request = window.indexedDB.open(dbName, 1);\r\n     // Nếu thành công. Tiến hành lấy notes về\r\n    request.onsuccess = async event => {\r\n      this.db = request.result;      \r\n      await this.getCacheLocation();      \r\n    };\r\n\r\n    // Kết nối lần đầu. Tiến hành khởi tạo objectStore với tên collection\r\n    request.onupgradeneeded = event => {\r\n      this.db = event.target.result;\r\n      this.db.createObjectStore(collection, {\r\n        autoIncrement: true\r\n      });\r\n    };  \r\n  },\r\n  methods: {\r\n    comboProvinceBeforeExpand(){\r\n        debugger\r\n    },\r\n\r\n    comboProvinceSelected(option){\r\n        debugger\r\n        this.districtValue = null; //xóa huyện, xã đi\r\n        this.wardValue = null;\r\n    },\r\n\r\n    comboDistrictBeforeExpand(){\r\n        debugger\r\n        if(!this.provinceValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.provinceValue)?.location_code;\r\n          this.storeDistrict = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboDistrictSelected(){\r\n        debugger\r\n       this.wardValue = null;\r\n    },\r\n\r\n    comboWardBeforeExpand(){\r\n       if(!this.districtValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.districtValue)?.location_code;\r\n          this.storeWard = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboWardSelected(){\r\n      debugger\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n     * Hàm xử lý khi click filter tỉnh thành\r\n     * @created : quyetkaio\r\n     * @param {Number} filterOption: 0- bắc, 1 trung, 2 nam\r\n     */\r\n    filterButtonClick(filterOption){\r\n      if(filterOption != null){\r\n        let locations = [];\r\n         switch (filterOption) {\r\n          case 0:{\r\n            //filter miền bắc\r\n            debugger\r\n            locations = locationConfigCode.bacLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          }\r\n          case 1: \r\n            //filter miền trung\r\n            locations = locationConfigCode.trungLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          case 2:\r\n            //filter miền nam\r\n            locations = locationConfigCode.namLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n         \r\n          default:\r\n            break;\r\n         }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Hàm xử lý khi số trang thay đổi\r\n     */\r\n    setCurrentPage(page){\r\n      if(this.pageNumber == page) return;\r\n      this.pageNumber = page;\r\n      //thực hiện filter lại\r\n      this.filterData(this.pageNumber);\r\n    },\r\n\r\n    /**\r\n     * Hàm tìm kiếm(local)\r\n     */\r\n    filterData(pageNumber){\r\n        if(this.textSearch){              \r\n              let _textSearch = this.textSearch.toLowerCase();\r\n              this.storeLocation = this.storeLocationAll.filter((x,index) => \r\n                index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize\r\n                && (x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch))\r\n                );  \r\n              this.showPaging = true; \r\n        }else{\r\n           this.storeLocation = this.storeLocationAll.filter((x,index) => index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize);\r\n           this.showPaging = true;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Lấy dữ liệu trong indexDB ra\r\n     */\r\n    async getCacheLocation() {\r\n      this.locations = [];\r\n      var objectStore = await this.db.transaction(collection).objectStore(collection);      \r\n      // Sử dụng cursor để lấy lần lượt dữ liệu\r\n      // objectStore.openCursor().onsuccess = async event => {\r\n      //   var cursor = event.target.result;        \r\n      //   if (cursor) {\r\n      //     // Nếu có cursor. Push dữ liệu và tiếp tục với record tiếp theo\r\n      //     this.locations.push({\r\n      //       id: cursor.key,\r\n      //       value: cursor.value\r\n      //     });\r\n      //     cursor.continue();\r\n      //   }\r\n      //   if(!this.locations || this.locations?.length == 0){\r\n      //     this.getFreshLocation();\r\n      //   }else{\r\n      //     debugger\r\n      //     this.storeLocation = this.locations[0].value.filter((x,index)=> index<=10);\r\n      //     this.storeLocationAll = this.locations[0].value;\r\n      //   }\r\n      // };\r\n\r\n      let cacheLocations = objectStore.get(\"locations\"); //get theo key\r\n      cacheLocations.onsuccess = ()=>{\r\n        if(cacheLocations.result && cacheLocations.result.length > 0){\r\n          this.storeLocation = cacheLocations.result.filter((x,index)=> index<10);\r\n          this.storeLocationAll = cacheLocations.result;\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n        }else{\r\n          this.getFreshLocation();\r\n        }                 \r\n      }      \r\n    },\r\n\r\n    /**\r\n     * Thêm mới vào db\r\n     * @param {Object|Array} data - dữ liệu cần lưu vào indexedDB\r\n     */\r\n    async addLocation(data) {\r\n      // Tạo transaction với mode readwrite      \r\n      var request = await this.db\r\n        .transaction(collection, \"readwrite\")\r\n        .objectStore(collection)\r\n        .add(data, \"locations\");       \r\n      request.onsuccess = event => {\r\n        // Lấy lại danh sách sau khi đã thêm giá trị mới thành công\r\n        this.getCacheLocation();\r\n      };\r\n    },\r\n\r\n    searchData: _.debounce(function () {\r\n        let me = this;\r\n        if(me.textSearch){\r\n            let _textSearch = me.textSearch.toLowerCase();        \r\n            me.storeLocation = me.storeLocationAll.filter(x=>x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch));            \r\n        }else{\r\n            me.storeLocation = me.storeLocationAll.filter(x=>me.storeLocationAll.indexOf(x) < 10);            \r\n        }\r\n        // if(me.storeLocation && me.storeLocation.length == 0) this.showPaging = false;\r\n        // else{\r\n        //    if(me.storeLocation && me.storeLocation.length > 0){\r\n        //       me.totalPage = Math.round(me.storeLocationAll.length/10) ? Math.round(me.storeLocationAll.length/10) : 1;\r\n        //       this.showPaging = true;\r\n        //    }\r\n        // }\r\n    }, 1000),\r\n    \r\n\r\n    /**------------------------------------------\r\n        * Nhận sự kiện khi button của function được click\r\n        * @created : quyetkaito (26/06/2022)\r\n        --------------------------------------------*/\r\n    handleFunctionClick(object) {\r\n      let me = this;\r\n      if (object) {\r\n        //kiểm tra xem nó là loại gì sửa hay xem hay xóa..\r\n        switch (me.tableFunction.mainFunction) {\r\n          case \"Edit\": {\r\n            // me.showDialog(object);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    handleDoubleClick() {},\r\n\r\n    async initStaticData() {\r\n      //gọi api lấy tất cả danh sách tỉnh huyện xã, lưu vào cache\r\n      let me = this;\r\n      me.tableFunction = {\r\n        mainButtonText: \"Sửa\",\r\n        mainFunction: \"Edit\",\r\n        isShow: false,\r\n      };\r\n      me.columns = [\r\n        {\r\n          title: \"Tên địa điểm\",\r\n          key: \"location_name\",\r\n          width: 200,\r\n        },\r\n        {\r\n          title: \"Mã\",\r\n          key: \"location_code\",\r\n          width: 200,\r\n        },\r\n      ];     \r\n    \r\n    },\r\n\r\n    /**\r\n     * Hàm lấy mới danh sách địa chỉ\r\n     */\r\n    async getFreshLocation(){\r\n      let me = this;      \r\n      let res = await LocationAPI.request(LocationAPI.urlName, \"get\");\r\n      if (res && res.data && res.data.length > 0) {\r\n          me.storeLocation = res.data.filter(x=>x.parent_code == null);    \r\n          me.storeLocationAll  = res.data;\r\n          this.addLocation(res.data); //lưu vào indexedDB\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n      }\r\n    },\r\n\r\n    initDataLocation(){\r\n      if(this.storeLocationAll && this.storeLocationAll.length > 0){\r\n        this.storeProvince = (this.storeLocationAll.filter(x=>x.parent_code == null)).map(x=>x.location_name);          \r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.location-list{\r\n  .filter{\r\n    margin: 10px;    \r\n    display: flex;\r\n    .filter-button{\r\n      height: 40px;\r\n      width: fit-content;\r\n      white-space: nowrap;\r\n      background: white;\r\n      color: black;\r\n      border-radius: 5px;\r\n      margin-right: 5px;\r\n      margin-left: 5px;\r\n      padding: 5px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n    }\r\n    .filter-button:hover{\r\n      background: var(--info-color);\r\n      color: white;\r\n    }\r\n    .filter-button.active{\r\n        background: var(--info-color);\r\n        color: white;\r\n    }\r\n    .filter-combo{\r\n      width: 200px;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .content-grid{\r\n    // .paging-container{\r\n    //   margin-top: 5px;\r\n    //   margin-left: 5px;\r\n    // }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
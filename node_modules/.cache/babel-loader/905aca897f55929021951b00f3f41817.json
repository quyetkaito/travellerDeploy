{"ast":null,"code":"/**-------------------------------------------\r\n * Hàm chuyển format định dạng ngày tháng hiện cho người dùng\r\n * @param {Datetime} date\r\n * Author: quyetkaito (21/02/2022)\r\n ---------------------------------------------*/\nfunction formatDate(date, format) {\n  try {\n    if (!date) {\n      return \"\";\n    }\n\n    var newDate = new Date(date);\n    var dateString = newDate.getDate();\n\n    if (dateString < 10) {\n      dateString = \"0\" + dateString;\n    }\n\n    var monthString = newDate.getMonth() + 1;\n\n    if (monthString < 10) {\n      monthString = \"0\" + monthString;\n    }\n\n    var yearString = newDate.getFullYear();\n\n    if (format) {\n      if (format === \"DD/MM/YYYY\") {\n        return `${dateString}/${monthString}/${yearString}`;\n      }\n\n      if (format === \"MM/DD/YYYY\") {\n        return `${monthString}/${dateString}/${yearString}`;\n      }\n\n      if (format === \"YYYY/MM/DD\") {\n        return `${yearString}/${monthString}/${dateString}`;\n      }\n    } else {\n      return `${dateString}/${monthString}/${yearString}`;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n/**----------------------------------\r\n * Hàm set timezone cho ngày tháng\r\n * @param {Date} date \r\n * Author: quyetkaito (18/03/2022)\r\n ----------------------------------*/\n\n\nfunction setTimeZone(date) {\n  try {\n    if (date) {\n      var newDate = date;\n      newDate.setTime(newDate.getTime() - new Date().getTimezoneOffset() * 60 * 1000);\n      return newDate.toISOString();\n    } else {\n      return \"\";\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n/**--------------------------------------\r\n     * Hàm format định dạng tiền tệ Việt Nam. => 123.123.123,4869\r\n     * @param {String} money dạng chuỗi, có thể chứa cả dấu chấm dấu phẩy, ký tự chữ\r\n     * @returns: kết quả dạng String.\r\n     * Author: quyetkaito (27/03/2022)\r\n     ----------------------------------------*/\n\n\nfunction formatCurrency(money) {\n  try {\n    let moneyFormatted; //nếu money có giá trị\n\n    if (money) {\n      //nếu không phải là số (Not A Number)\n      if (isNaN(money)) {\n        //khi có 2 dấu '.' trở lên thì không phải là số nữa\n        // loại bỏ kí tự không phải số\n        money = money.replaceAll(\".\", \"\"); //nếu có dấu phẩy => đang nhập số thập phân\n\n        money = money.replaceAll(\",\", \".\");\n        money = money.replaceAll(/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\"); //format lại\n\n        moneyFormatted = new Intl.NumberFormat(\"vi-VN\", {\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 4 //phần thập phân tối đa 4 số\n\n        }).format(money);\n        return moneyFormatted;\n      } else {\n        //nếu đã là số rồi (có 1 dấu '.' vẫn là số)\n        money = money.replaceAll(\".\", \"\"); //format lại\n\n        moneyFormatted = new Intl.NumberFormat(\"vi-VN\", {\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 4\n        }).format(money);\n        return moneyFormatted;\n      }\n    } else {\n      return \"\";\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n/**---------------------------------------------------------------\r\n * Hàm convert lại giá trị tiền đã được format trở lại thành số.\r\n * @param {String} money : tiền đã được format dấu chấm dấu phẩy\r\n * @returns giá tiền dạng số\r\n * Author: quyetkaito (27/03/2022)\r\n -----------------------------------------------------------------*/\n\n\nfunction formatCurrencyToSave(money) {\n  try {\n    if (money) {\n      //bỏ hết dấu '.'\n      money = money.replaceAll(\".\", \"\"); //thay dấu ',' bằng dấu '.' để lấy phần thập phân\n\n      money = money.replaceAll(\",\", \".\"); //convert về dạng số\n\n      money = Number(money);\n      return money;\n    } else {\n      return 0;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n/**------------------------------------------------\r\n * Hàm thực hiện format định dạng số 123.456,789\r\n * @param {Number} n - số tiền cần chuyển dạng số.\r\n * Author: quyetkaito (25/02/2022)\r\n --------------------------------------------------*/\n\n\nfunction formatNumber(n) {\n  return new Intl.NumberFormat(\"vi-VN\").format(n);\n}\n/**-----------------------------------------------------------\r\n * Hàm thực hiện format định dạng số ngay trong khi nhập liệu.\r\n * @param {Event} event \r\n * Author: quyetkaito (27/03/2022).\r\n -----------------------------------*/\n\n\nfunction onNumberInput(event) {\n  try {\n    //lấy ra giá trị của ô input hiện tại\n    let value = event.target.value; // console.log(\"ô input hiện tại: \", value);\n\n    if (event.data == \",\") {\n      //nếu người dùng nhập dấu ',' và không có dấu ',' nào đã tồn tại => đang nhập số thập phân\n      if ((value.match(/,/g) || []).length <= 1) {\n        // console.log(\"chưa phải số thập phân\");\n        return; //cho nhập liệu tiếp\n      }\n    } //format số\n\n\n    event.target.value = formatCurrency(value);\n  } catch (error) {\n    console.error(error);\n  }\n}\n/**------------------------------------------\r\n    *Hàm chuyển chuỗi camelCase sang snake_case\r\n    @param {String} key-chuỗi đầu vào\r\n    *Author: quyetkaito (07/04/2022)\r\n    --------------------------------------------*/\n\n\nfunction camelToUnderscore(key) {\n  var result = key.replace(/([A-Z])/g, \" $1\");\n  result = result.trim();\n  return result.split(\" \").join(\"_\").toLowerCase();\n}\n/**------------------------------------------\r\n*Hàm kiểm tra xem một chuỗi có phải là số hay không.\r\n*@param {String} value: chuỗi kiểm tra\r\n*Author: quyetkaito (17/04/2022)\r\n--------------------------------------------*/\n\n\nfunction isNumeric(value) {\n  return /^-?\\d+$/.test(value);\n}\n/**------------------------------------------\r\n*Hàm so sánh hai ngày\r\n*@param {Date} d1 ngày thứ nhất\r\n*@param {Date} d2 ngày thứ 2\r\n*@returns (-1: d1 nhỏ hơn d2), (0: d1==d2), (1: d1>d2)\r\n*Author: quyetkaito (23/04/2022)\r\n--------------------------------------------*/\n\n\nfunction compareDate(d1, d2) {\n  //lấy các giá trị ngày tháng năm.\n  var date_1 = d1.getDate();\n  var mon_1 = d1.getMonth();\n  var y_1 = d1.getFullYear();\n  var date_2 = d2.getDate();\n  var mon_2 = d2.getMonth();\n  var y_2 = d2.getFullYear(); //so sánh năm\n\n  if (y_1 > y_2) return 1;\n  if (y_1 < y_2) return -1;\n\n  if (y_1 == y_2) {\n    //so sánh tháng\n    if (mon_1 > mon_2) return 1;\n    if (mon_1 < mon_2) return -1;\n\n    if (mon_1 == mon_2) {\n      //so sánh ngày\n      if (date_1 > date_2) return 1;\n      if (date_1 < date_2) return -1;\n      if (date_1 == date_2) return 0;\n    }\n  }\n}\n\nexport { formatDate, formatCurrency, formatNumber, setTimeZone, formatCurrencyToSave, onNumberInput, camelToUnderscore, isNumeric, compareDate };","map":{"version":3,"names":["formatDate","date","format","newDate","Date","dateString","getDate","monthString","getMonth","yearString","getFullYear","error","console","setTimeZone","setTime","getTime","getTimezoneOffset","toISOString","formatCurrency","money","moneyFormatted","isNaN","replaceAll","replace","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatCurrencyToSave","Number","formatNumber","n","onNumberInput","event","value","target","data","match","length","camelToUnderscore","key","result","trim","split","join","toLowerCase","isNumeric","test","compareDate","d1","d2","date_1","mon_1","y_1","date_2","mon_2","y_2"],"sources":["D:/Traveller/Traveller-Frontend/traveller-ui/src/script/base.js"],"sourcesContent":["/**-------------------------------------------\r\n * Hàm chuyển format định dạng ngày tháng hiện cho người dùng\r\n * @param {Datetime} date\r\n * Author: quyetkaito (21/02/2022)\r\n ---------------------------------------------*/\r\nfunction formatDate(date, format) {\r\n    try {\r\n        if (!date) {\r\n            return \"\";\r\n        }\r\n        var newDate = new Date(date);\r\n        var dateString = newDate.getDate();\r\n        if (dateString < 10) {\r\n            dateString = \"0\" + dateString;\r\n        }\r\n        var monthString = newDate.getMonth() + 1;\r\n        if (monthString < 10) {\r\n            monthString = \"0\" + monthString;\r\n        }\r\n        var yearString = newDate.getFullYear();\r\n        if (format) {\r\n            if (format === \"DD/MM/YYYY\") {\r\n                return `${dateString}/${monthString}/${yearString}`;\r\n            }\r\n            if (format === \"MM/DD/YYYY\") {\r\n                return `${monthString}/${dateString}/${yearString}`;\r\n            }\r\n            if (format === \"YYYY/MM/DD\") {\r\n                return `${yearString}/${monthString}/${dateString}`;\r\n            }\r\n        } else {\r\n            return `${dateString}/${monthString}/${yearString}`;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**----------------------------------\r\n * Hàm set timezone cho ngày tháng\r\n * @param {Date} date \r\n * Author: quyetkaito (18/03/2022)\r\n ----------------------------------*/\r\nfunction setTimeZone(date) {\r\n    try {\r\n        if (date) {\r\n            var newDate = date;\r\n            newDate.setTime(\r\n                newDate.getTime() - new Date().getTimezoneOffset() * 60 * 1000\r\n            );\r\n            return newDate.toISOString();\r\n        } else {\r\n            return \"\";\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**--------------------------------------\r\n     * Hàm format định dạng tiền tệ Việt Nam. => 123.123.123,4869\r\n     * @param {String} money dạng chuỗi, có thể chứa cả dấu chấm dấu phẩy, ký tự chữ\r\n     * @returns: kết quả dạng String.\r\n     * Author: quyetkaito (27/03/2022)\r\n     ----------------------------------------*/\r\nfunction formatCurrency(money) {\r\n    try {\r\n        let moneyFormatted;\r\n        //nếu money có giá trị\r\n        if (money) {\r\n            //nếu không phải là số (Not A Number)\r\n            if (isNaN(money)) {\r\n                //khi có 2 dấu '.' trở lên thì không phải là số nữa\r\n                // loại bỏ kí tự không phải số\r\n                money = money.replaceAll(\".\", \"\");\r\n                //nếu có dấu phẩy => đang nhập số thập phân\r\n                money = money.replaceAll(\",\", \".\");\r\n                money = money.replaceAll(/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\");\r\n                //format lại\r\n                moneyFormatted = new Intl.NumberFormat(\"vi-VN\", {\r\n                    minimumFractionDigits: 0,\r\n                    maximumFractionDigits: 4, //phần thập phân tối đa 4 số\r\n                }).format(money);\r\n                return moneyFormatted;\r\n            } else {\r\n                //nếu đã là số rồi (có 1 dấu '.' vẫn là số)\r\n                money = money.replaceAll(\".\", \"\");\r\n                //format lại\r\n                moneyFormatted = new Intl.NumberFormat(\"vi-VN\", {\r\n                    minimumFractionDigits: 0,\r\n                    maximumFractionDigits: 4,\r\n                }).format(money);\r\n                return moneyFormatted;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**---------------------------------------------------------------\r\n * Hàm convert lại giá trị tiền đã được format trở lại thành số.\r\n * @param {String} money : tiền đã được format dấu chấm dấu phẩy\r\n * @returns giá tiền dạng số\r\n * Author: quyetkaito (27/03/2022)\r\n -----------------------------------------------------------------*/\r\nfunction formatCurrencyToSave(money) {\r\n    try {\r\n        if (money) {\r\n            //bỏ hết dấu '.'\r\n            money = money.replaceAll(\".\", \"\");\r\n            //thay dấu ',' bằng dấu '.' để lấy phần thập phân\r\n            money = money.replaceAll(\",\", \".\");\r\n            //convert về dạng số\r\n            money = Number(money);\r\n            return money;\r\n        } else {\r\n            return 0;\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**------------------------------------------------\r\n * Hàm thực hiện format định dạng số 123.456,789\r\n * @param {Number} n - số tiền cần chuyển dạng số.\r\n * Author: quyetkaito (25/02/2022)\r\n --------------------------------------------------*/\r\nfunction formatNumber(n) {\r\n    return new Intl.NumberFormat(\"vi-VN\").format(n);\r\n}\r\n\r\n/**-----------------------------------------------------------\r\n * Hàm thực hiện format định dạng số ngay trong khi nhập liệu.\r\n * @param {Event} event \r\n * Author: quyetkaito (27/03/2022).\r\n -----------------------------------*/\r\nfunction onNumberInput(event) {\r\n    try {\r\n        //lấy ra giá trị của ô input hiện tại\r\n        let value = event.target.value;\r\n        // console.log(\"ô input hiện tại: \", value);\r\n        if (event.data == \",\") {\r\n            //nếu người dùng nhập dấu ',' và không có dấu ',' nào đã tồn tại => đang nhập số thập phân\r\n            if ((value.match(/,/g) || []).length <= 1) {\r\n                // console.log(\"chưa phải số thập phân\");\r\n                return; //cho nhập liệu tiếp\r\n            }\r\n        }\r\n        //format số\r\n        event.target.value = formatCurrency(value);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n/**------------------------------------------\r\n    *Hàm chuyển chuỗi camelCase sang snake_case\r\n    @param {String} key-chuỗi đầu vào\r\n    *Author: quyetkaito (07/04/2022)\r\n    --------------------------------------------*/\r\nfunction camelToUnderscore(key) {\r\n    var result = key.replace(/([A-Z])/g, \" $1\");\r\n    result = result.trim();\r\n    return result.split(\" \").join(\"_\").toLowerCase();\r\n}\r\n\r\n/**------------------------------------------\r\n*Hàm kiểm tra xem một chuỗi có phải là số hay không.\r\n*@param {String} value: chuỗi kiểm tra\r\n*Author: quyetkaito (17/04/2022)\r\n--------------------------------------------*/\r\nfunction isNumeric(value) {\r\n    return /^-?\\d+$/.test(value);\r\n}\r\n\r\n/**------------------------------------------\r\n*Hàm so sánh hai ngày\r\n*@param {Date} d1 ngày thứ nhất\r\n*@param {Date} d2 ngày thứ 2\r\n*@returns (-1: d1 nhỏ hơn d2), (0: d1==d2), (1: d1>d2)\r\n*Author: quyetkaito (23/04/2022)\r\n--------------------------------------------*/\r\nfunction compareDate(d1, d2) {\r\n    //lấy các giá trị ngày tháng năm.\r\n    var date_1 = d1.getDate();\r\n    var mon_1 = d1.getMonth();\r\n    var y_1 = d1.getFullYear();\r\n    var date_2 = d2.getDate();\r\n    var mon_2 = d2.getMonth();\r\n    var y_2 = d2.getFullYear();\r\n\r\n    //so sánh năm\r\n    if (y_1 > y_2) return 1;\r\n    if (y_1 < y_2) return -1;\r\n    if (y_1 == y_2) {\r\n        //so sánh tháng\r\n        if (mon_1 > mon_2) return 1;\r\n        if (mon_1 < mon_2) return -1;\r\n        if (mon_1 == mon_2) {\r\n            //so sánh ngày\r\n            if (date_1 > date_2) return 1;\r\n            if (date_1 < date_2) return -1;\r\n            if (date_1 == date_2) return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    formatDate,\r\n    formatCurrency,\r\n    formatNumber,\r\n    setTimeZone,\r\n    formatCurrencyToSave,\r\n    onNumberInput,\r\n    camelToUnderscore,\r\n    isNumeric,\r\n    compareDate\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;EAC9B,IAAI;IACA,IAAI,CAACD,IAAL,EAAW;MACP,OAAO,EAAP;IACH;;IACD,IAAIE,OAAO,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAd;IACA,IAAII,UAAU,GAAGF,OAAO,CAACG,OAAR,EAAjB;;IACA,IAAID,UAAU,GAAG,EAAjB,EAAqB;MACjBA,UAAU,GAAG,MAAMA,UAAnB;IACH;;IACD,IAAIE,WAAW,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAvC;;IACA,IAAID,WAAW,GAAG,EAAlB,EAAsB;MAClBA,WAAW,GAAG,MAAMA,WAApB;IACH;;IACD,IAAIE,UAAU,GAAGN,OAAO,CAACO,WAAR,EAAjB;;IACA,IAAIR,MAAJ,EAAY;MACR,IAAIA,MAAM,KAAK,YAAf,EAA6B;QACzB,OAAQ,GAAEG,UAAW,IAAGE,WAAY,IAAGE,UAAW,EAAlD;MACH;;MACD,IAAIP,MAAM,KAAK,YAAf,EAA6B;QACzB,OAAQ,GAAEK,WAAY,IAAGF,UAAW,IAAGI,UAAW,EAAlD;MACH;;MACD,IAAIP,MAAM,KAAK,YAAf,EAA6B;QACzB,OAAQ,GAAEO,UAAW,IAAGF,WAAY,IAAGF,UAAW,EAAlD;MACH;IACJ,CAVD,MAUO;MACH,OAAQ,GAAEA,UAAW,IAAGE,WAAY,IAAGE,UAAW,EAAlD;IACH;EACJ,CA3BD,CA2BE,OAAOE,KAAP,EAAc;IACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,WAAT,CAAqBZ,IAArB,EAA2B;EACvB,IAAI;IACA,IAAIA,IAAJ,EAAU;MACN,IAAIE,OAAO,GAAGF,IAAd;MACAE,OAAO,CAACW,OAAR,CACIX,OAAO,CAACY,OAAR,KAAoB,IAAIX,IAAJ,GAAWY,iBAAX,KAAiC,EAAjC,GAAsC,IAD9D;MAGA,OAAOb,OAAO,CAACc,WAAR,EAAP;IACH,CAND,MAMO;MACH,OAAO,EAAP;IACH;EACJ,CAVD,CAUE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,cAAT,CAAwBC,KAAxB,EAA+B;EAC3B,IAAI;IACA,IAAIC,cAAJ,CADA,CAEA;;IACA,IAAID,KAAJ,EAAW;MACP;MACA,IAAIE,KAAK,CAACF,KAAD,CAAT,EAAkB;QACd;QACA;QACAA,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,CAAR,CAHc,CAId;;QACAH,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,GAAtB,CAAR;QACAH,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,UAAjB,EAA6B,EAA7B,EAAiCC,OAAjC,CAAyC,WAAzC,EAAsD,IAAtD,CAAR,CANc,CAOd;;QACAH,cAAc,GAAG,IAAII,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;UAC5CC,qBAAqB,EAAE,CADqB;UAE5CC,qBAAqB,EAAE,CAFqB,CAElB;;QAFkB,CAA/B,EAGdzB,MAHc,CAGPiB,KAHO,CAAjB;QAIA,OAAOC,cAAP;MACH,CAbD,MAaO;QACH;QACAD,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,CAAR,CAFG,CAGH;;QACAF,cAAc,GAAG,IAAII,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;UAC5CC,qBAAqB,EAAE,CADqB;UAE5CC,qBAAqB,EAAE;QAFqB,CAA/B,EAGdzB,MAHc,CAGPiB,KAHO,CAAjB;QAIA,OAAOC,cAAP;MACH;IACJ,CAzBD,MAyBO;MACH,OAAO,EAAP;IACH;EACJ,CA/BD,CA+BE,OAAOT,KAAP,EAAc;IACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiB,oBAAT,CAA8BT,KAA9B,EAAqC;EACjC,IAAI;IACA,IAAIA,KAAJ,EAAW;MACP;MACAA,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,CAAR,CAFO,CAGP;;MACAH,KAAK,GAAGA,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,GAAtB,CAAR,CAJO,CAKP;;MACAH,KAAK,GAAGU,MAAM,CAACV,KAAD,CAAd;MACA,OAAOA,KAAP;IACH,CARD,MAQO;MACH,OAAO,CAAP;IACH;EACJ,CAZD,CAYE,OAAOR,KAAP,EAAc;IACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASmB,YAAT,CAAsBC,CAAtB,EAAyB;EACrB,OAAO,IAAIP,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+BvB,MAA/B,CAAsC6B,CAAtC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC1B,IAAI;IACA;IACA,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB,CAFA,CAGA;;IACA,IAAID,KAAK,CAACG,IAAN,IAAc,GAAlB,EAAuB;MACnB;MACA,IAAI,CAACF,KAAK,CAACG,KAAN,CAAY,IAAZ,KAAqB,EAAtB,EAA0BC,MAA1B,IAAoC,CAAxC,EAA2C;QACvC;QACA,OAFuC,CAE/B;MACX;IACJ,CAVD,CAWA;;;IACAL,KAAK,CAACE,MAAN,CAAaD,KAAb,GAAqBhB,cAAc,CAACgB,KAAD,CAAnC;EACH,CAbD,CAaE,OAAOvB,KAAP,EAAc;IACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAS4B,iBAAT,CAA2BC,GAA3B,EAAgC;EAC5B,IAAIC,MAAM,GAAGD,GAAG,CAACjB,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,CAAb;EACAkB,MAAM,GAAGA,MAAM,CAACC,IAAP,EAAT;EACA,OAAOD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,GAAvB,EAA4BC,WAA5B,EAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAmBZ,KAAnB,EAA0B;EACtB,OAAO,UAAUa,IAAV,CAAeb,KAAf,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASc,WAAT,CAAqBC,EAArB,EAAyBC,EAAzB,EAA6B;EACzB;EACA,IAAIC,MAAM,GAAGF,EAAE,CAAC3C,OAAH,EAAb;EACA,IAAI8C,KAAK,GAAGH,EAAE,CAACzC,QAAH,EAAZ;EACA,IAAI6C,GAAG,GAAGJ,EAAE,CAACvC,WAAH,EAAV;EACA,IAAI4C,MAAM,GAAGJ,EAAE,CAAC5C,OAAH,EAAb;EACA,IAAIiD,KAAK,GAAGL,EAAE,CAAC1C,QAAH,EAAZ;EACA,IAAIgD,GAAG,GAAGN,EAAE,CAACxC,WAAH,EAAV,CAPyB,CASzB;;EACA,IAAI2C,GAAG,GAAGG,GAAV,EAAe,OAAO,CAAP;EACf,IAAIH,GAAG,GAAGG,GAAV,EAAe,OAAO,CAAC,CAAR;;EACf,IAAIH,GAAG,IAAIG,GAAX,EAAgB;IACZ;IACA,IAAIJ,KAAK,GAAGG,KAAZ,EAAmB,OAAO,CAAP;IACnB,IAAIH,KAAK,GAAGG,KAAZ,EAAmB,OAAO,CAAC,CAAR;;IACnB,IAAIH,KAAK,IAAIG,KAAb,EAAoB;MAChB;MACA,IAAIJ,MAAM,GAAGG,MAAb,EAAqB,OAAO,CAAP;MACrB,IAAIH,MAAM,GAAGG,MAAb,EAAqB,OAAO,CAAC,CAAR;MACrB,IAAIH,MAAM,IAAIG,MAAd,EAAsB,OAAO,CAAP;IACzB;EACJ;AACJ;;AAED,SACItD,UADJ,EAEIkB,cAFJ,EAGIY,YAHJ,EAIIjB,WAJJ,EAKIe,oBALJ,EAMII,aANJ,EAOIO,iBAPJ,EAQIO,SARJ,EASIE,WATJ"},"metadata":{},"sourceType":"module"}
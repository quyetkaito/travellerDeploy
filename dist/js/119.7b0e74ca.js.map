{"version":3,"file":"js/119.7b0e74ca.js","mappings":"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","sources":["webpack://traveller/./src/views/location/LocationList.vue","webpack://traveller/./src/api/LocationAPI.js","webpack://traveller/./src/config/locationConfig.js","webpack://traveller/./src/views/location/LocationList.vue?1c21"],"sourcesContent":["<template>\r\n<div class=\"location-list\">\r\n  <div class=\"filter\">\r\n    <m-input :showLabel=\"false\" v-model=\"textSearch\" @input=\"searchData\" placeholder=\"Tìm kiếm\"/>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(0)\">Miền Bắc</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(1)\">Miền Trung</div>   \r\n    <div class=\"filter-button\" @click=\"filterButtonClick(2)\">Miền Nam</div> \r\n    <div class=\"flex align-center\" v-if=\"true\">\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"province\"        \r\n          v-model=\"provinceValue\"\r\n          :options=\"storeProvince\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn tỉnh\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboProvinceSelected\"   \r\n          @open=\"comboProvinceBeforeExpand\"     \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"district\"        \r\n          v-model=\"districtValue\"\r\n          :options=\"storeDistrict\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn huyện\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboDistrictSelected\"  \r\n          @open=\"comboDistrictBeforeExpand\"      \r\n        />\r\n      </div>\r\n      <div class=\"filter-combo\">\r\n        <v-multiselect\r\n          ref=\"ward\"        \r\n          v-model=\"wardValue\"\r\n          :options=\"storeWard\"\r\n          label=\"label\"\r\n          :close-on-select=\"true\"\r\n          :clearOnSelect=\"true\"\r\n          :searchable=\"true\"\r\n          placeholder=\"Chọn xã\"\r\n          noResultsText=\"Không có kết quả\"  \r\n          noOptionsText=\"Không có dữ liệu\"                                \r\n          :canClear=\"false\"\r\n          :canDeselect=\"false\"\r\n          @select=\"comboWardSelected\"  \r\n          @open=\"comboWardBeforeExpand\"  \r\n        />\r\n      </div>\r\n    </div>     \r\n  </div>\r\n  <div class=\"content-grid\">\r\n    <div class=\"table-container\">\r\n      <m-grid\r\n        :listData=\"storeLocation\"\r\n        :columns=\"columns\"\r\n        @dblClick=\"handleDoubleClick\"\r\n        :tableFunction=\"tableFunction\"\r\n        @eMainButtonClick=\"handleFunctionClick\"\r\n        @eDoubleClick=\"handleDoubleClick\"\r\n        :multiSelect=\"false\"\r\n      />      \r\n    </div>\r\n    <div class=\"m-paging\" v-if=\"showPaging\">\r\n      <m-pagination\r\n        :totalPage=\"totalPage\"\r\n        :currentPage=\"pageNumber\"\r\n        :pageSize=\"pageSize\"\r\n        @changeCurrentPage=\"setCurrentPage\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\nimport LocationAPI from \"@/api/LocationAPI\";\r\nimport locationConfigCode from \"@/config/locationConfig\";\r\n// Khởi tạo một số hằng sử dụng nhiều lần\r\nconst dbName = \"myDB\";\r\nconst collection = \"locations\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      textSearch: null,\r\n      storeLocation: [], //danh sách\r\n      storeLocationAll: [],\r\n      db: null, //indexedDB\r\n      locations: [],            \r\n      pageNumber: 1,\r\n      pageSize: 10,\r\n      totalPage: 0,\r\n      showPaging: true,\r\n      provinceValue: null,\r\n      storeProvince: [],     \r\n      districtValue: null,\r\n      storeDistrict: [],\r\n      wardValue: null,\r\n      storeWard: [], \r\n    };\r\n  },\r\n  created() {\r\n    let me = this;   \r\n    this.initStaticData(); \r\n  },\r\n  mounted(){        \r\n    // Kết nối DB\r\n    var request = window.indexedDB.open(dbName, 1);\r\n     // Nếu thành công. Tiến hành lấy notes về\r\n    request.onsuccess = async event => {\r\n      this.db = request.result;      \r\n      await this.getCacheLocation();      \r\n    };\r\n\r\n    // Kết nối lần đầu. Tiến hành khởi tạo objectStore với tên collection\r\n    request.onupgradeneeded = event => {\r\n      this.db = event.target.result;\r\n      this.db.createObjectStore(collection, {\r\n        autoIncrement: true\r\n      });\r\n    };  \r\n  },\r\n  methods: {\r\n    comboProvinceBeforeExpand(){\r\n        debugger\r\n    },\r\n\r\n    comboProvinceSelected(option){\r\n        debugger\r\n        this.districtValue = null; //xóa huyện, xã đi\r\n        this.wardValue = null;\r\n    },\r\n\r\n    comboDistrictBeforeExpand(){\r\n        debugger\r\n        if(!this.provinceValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.provinceValue)?.location_code;\r\n          this.storeDistrict = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboDistrictSelected(){\r\n        debugger\r\n       this.wardValue = null;\r\n    },\r\n\r\n    comboWardBeforeExpand(){\r\n       if(!this.districtValue) return;\r\n        else{\r\n          let code = this.storeLocationAll.find(x=>x.location_name == this.districtValue)?.location_code;\r\n          this.storeWard = (this.storeLocationAll.filter(x=>x.parent_code == code)).map(x=>x.location_name);\r\n        }\r\n    },\r\n\r\n    comboWardSelected(){\r\n      debugger\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n     * Hàm xử lý khi click filter tỉnh thành\r\n     * @created : quyetkaio\r\n     * @param {Number} filterOption: 0- bắc, 1 trung, 2 nam\r\n     */\r\n    filterButtonClick(filterOption){\r\n      if(filterOption != null){\r\n        let locations = [];\r\n         switch (filterOption) {\r\n          case 0:{\r\n            //filter miền bắc\r\n            debugger\r\n            locations = locationConfigCode.bacLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          }\r\n          case 1: \r\n            //filter miền trung\r\n            locations = locationConfigCode.trungLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n          case 2:\r\n            //filter miền nam\r\n            locations = locationConfigCode.namLocation;\r\n            this.storeLocation = this.storeLocationAll.filter(x=> locations.includes(x.location_code));\r\n            this.showPaging = false;\r\n            break;\r\n         \r\n          default:\r\n            break;\r\n         }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Hàm xử lý khi số trang thay đổi\r\n     */\r\n    setCurrentPage(page){\r\n      if(this.pageNumber == page) return;\r\n      this.pageNumber = page;\r\n      //thực hiện filter lại\r\n      this.filterData(this.pageNumber);\r\n    },\r\n\r\n    /**\r\n     * Hàm tìm kiếm(local)\r\n     */\r\n    filterData(pageNumber){\r\n        if(this.textSearch){              \r\n              let _textSearch = this.textSearch.toLowerCase();\r\n              this.storeLocation = this.storeLocationAll.filter((x,index) => \r\n                index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize\r\n                && (x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch))\r\n                );  \r\n              this.showPaging = true; \r\n        }else{\r\n           this.storeLocation = this.storeLocationAll.filter((x,index) => index >= (pageNumber-1)*this.pageSize && index < pageNumber*this.pageSize);\r\n           this.showPaging = true;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Lấy dữ liệu trong indexDB ra\r\n     */\r\n    async getCacheLocation() {\r\n      this.locations = [];\r\n      var objectStore = await this.db.transaction(collection).objectStore(collection);      \r\n      // Sử dụng cursor để lấy lần lượt dữ liệu\r\n      // objectStore.openCursor().onsuccess = async event => {\r\n      //   var cursor = event.target.result;        \r\n      //   if (cursor) {\r\n      //     // Nếu có cursor. Push dữ liệu và tiếp tục với record tiếp theo\r\n      //     this.locations.push({\r\n      //       id: cursor.key,\r\n      //       value: cursor.value\r\n      //     });\r\n      //     cursor.continue();\r\n      //   }\r\n      //   if(!this.locations || this.locations?.length == 0){\r\n      //     this.getFreshLocation();\r\n      //   }else{\r\n      //     debugger\r\n      //     this.storeLocation = this.locations[0].value.filter((x,index)=> index<=10);\r\n      //     this.storeLocationAll = this.locations[0].value;\r\n      //   }\r\n      // };\r\n\r\n      let cacheLocations = objectStore.get(\"locations\"); //get theo key\r\n      cacheLocations.onsuccess = ()=>{\r\n        if(cacheLocations.result && cacheLocations.result.length > 0){\r\n          this.storeLocation = cacheLocations.result.filter((x,index)=> index<10);\r\n          this.storeLocationAll = cacheLocations.result;\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n        }else{\r\n          this.getFreshLocation();\r\n        }                 \r\n      }      \r\n    },\r\n\r\n    /**\r\n     * Thêm mới vào db\r\n     * @param {Object|Array} data - dữ liệu cần lưu vào indexedDB\r\n     */\r\n    async addLocation(data) {\r\n      // Tạo transaction với mode readwrite      \r\n      var request = await this.db\r\n        .transaction(collection, \"readwrite\")\r\n        .objectStore(collection)\r\n        .add(data, \"locations\");       \r\n      request.onsuccess = event => {\r\n        // Lấy lại danh sách sau khi đã thêm giá trị mới thành công\r\n        this.getCacheLocation();\r\n      };\r\n    },\r\n\r\n    searchData: _.debounce(function () {\r\n        let me = this;\r\n        if(me.textSearch){\r\n            let _textSearch = me.textSearch.toLowerCase();        \r\n            me.storeLocation = me.storeLocationAll.filter(x=>x.location_code.toLowerCase().includes(_textSearch) || x.location_name.toLowerCase().includes(_textSearch));            \r\n        }else{\r\n            me.storeLocation = me.storeLocationAll.filter(x=>me.storeLocationAll.indexOf(x) < 10);            \r\n        }\r\n        // if(me.storeLocation && me.storeLocation.length == 0) this.showPaging = false;\r\n        // else{\r\n        //    if(me.storeLocation && me.storeLocation.length > 0){\r\n        //       me.totalPage = Math.round(me.storeLocationAll.length/10) ? Math.round(me.storeLocationAll.length/10) : 1;\r\n        //       this.showPaging = true;\r\n        //    }\r\n        // }\r\n    }, 1000),\r\n    \r\n\r\n    /**------------------------------------------\r\n        * Nhận sự kiện khi button của function được click\r\n        * @created : quyetkaito (26/06/2022)\r\n        --------------------------------------------*/\r\n    handleFunctionClick(object) {\r\n      let me = this;\r\n      if (object) {\r\n        //kiểm tra xem nó là loại gì sửa hay xem hay xóa..\r\n        switch (me.tableFunction.mainFunction) {\r\n          case \"Edit\": {\r\n            // me.showDialog(object);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    handleDoubleClick() {},\r\n\r\n    async initStaticData() {\r\n      //gọi api lấy tất cả danh sách tỉnh huyện xã, lưu vào cache\r\n      let me = this;\r\n      me.tableFunction = {\r\n        mainButtonText: \"Sửa\",\r\n        mainFunction: \"Edit\",\r\n        isShow: false,\r\n      };\r\n      me.columns = [\r\n        {\r\n          title: \"Tên địa điểm\",\r\n          key: \"location_name\",\r\n          width: 200,\r\n        },\r\n        {\r\n          title: \"Mã\",\r\n          key: \"location_code\",\r\n          width: 200,\r\n        },\r\n      ];     \r\n    \r\n    },\r\n\r\n    /**\r\n     * Hàm lấy mới danh sách địa chỉ\r\n     */\r\n    async getFreshLocation(){\r\n      let me = this;      \r\n      let res = await LocationAPI.request(LocationAPI.urlName, \"get\");\r\n      if (res && res.data && res.data.length > 0) {\r\n          me.storeLocation = res.data.filter(x=>x.parent_code == null);    \r\n          me.storeLocationAll  = res.data;\r\n          this.addLocation(res.data); //lưu vào indexedDB\r\n          this.totalPage = Math.round(this.storeLocationAll.length/10);\r\n          this.initDataLocation();\r\n      }\r\n    },\r\n\r\n    initDataLocation(){\r\n      if(this.storeLocationAll && this.storeLocationAll.length > 0){\r\n        this.storeProvince = (this.storeLocationAll.filter(x=>x.parent_code == null)).map(x=>x.location_name);          \r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.location-list{\r\n  .filter{\r\n    margin: 10px;    \r\n    display: flex;\r\n    .filter-button{\r\n      height: 40px;\r\n      width: fit-content;\r\n      white-space: nowrap;\r\n      background: white;\r\n      color: black;\r\n      border-radius: 5px;\r\n      margin-right: 5px;\r\n      margin-left: 5px;\r\n      padding: 5px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n    }\r\n    .filter-button:hover{\r\n      background: var(--info-color);\r\n      color: white;\r\n    }\r\n    .filter-button.active{\r\n        background: var(--info-color);\r\n        color: white;\r\n    }\r\n    .filter-combo{\r\n      width: 200px;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .content-grid{\r\n    // .paging-container{\r\n    //   margin-top: 5px;\r\n    //   margin-left: 5px;\r\n    // }\r\n  }\r\n}\r\n</style>","import apiConfig from \"./apiConfig\";\r\nimport BaseAPI from \"./BaseAPI\";\r\n\r\nclass LocationAPI extends BaseAPI {\r\n    constructor() {\r\n        super();\r\n    }\r\n    urlName = apiConfig.location;\r\n}\r\n\r\nexport default new LocationAPI();","// class locationConfig {\r\n//     //25 tỉnh miền bắc\r\n//     bacLocation = [\r\n//         \"Lào Cai\",\r\n//         \"Yên Bái\",\r\n//         \"Điện Biên\",\r\n//         \"Hoà Bình\",\r\n//         \"Lai Châu\",\r\n//         \"Sơn La\",\r\n//         \"Hà Giang\",\r\n//         \"Cao Bằng\",\r\n//         \"Bắc Kạn\",\r\n//         \"Lạng Sơn\",\r\n//         \"Tuyên Quang\",\r\n//         \"Thái Nguyên\",\r\n//         \"Phú Thọ\",\r\n//         \"Bắc Giang\",\r\n//         \"Quảng Ninh\",\r\n//         \"Bắc Ninh\",\r\n//         \"Hà Nam\",\r\n//         \"Hà Nội\",\r\n//         \"Hải Dương\",\r\n//         \"Hải Phòng\",\r\n//         \"Hưng Yên\",\r\n//         \"Nam Định\",\r\n//         \"Ninh Bình\",\r\n//         \"Thái Bình\",\r\n//         \"Vĩnh Phúc\",\r\n//     ];\r\n\r\n//     //19 tỉnh miền trung\r\n//     trungLocation = [\r\n//         \"Thanh Hoá\",\r\n//         \"Nghệ An\",\r\n//         \"Hà Tĩnh\",\r\n//         \"Quảng Bình\",\r\n//         \"Quảng Trị\",\r\n//         \"Thừa Thiên Huế\",\r\n//         \"Kon Tum\",\r\n//         \"Gia Lai\",\r\n//         \"Đắk Lắk\",\r\n//         \"Đắc Nông\",\r\n//         \"Lâm Đồng\",\r\n//         \"Đà Nẵng\",\r\n//         \"Quảng Nam\",\r\n//         \"Quảng Ngãi\",\r\n//         \"Bình Định\",\r\n//         \"Phú Yên\",\r\n//         \"Khánh Hoà\",\r\n//         \"Ninh Thuận\",\r\n//         \"Bình Thuận\",\r\n//     ];\r\n\r\n//     namLocation = [\r\n//         \"Long An\",\r\n//         \"Đồng Tháp\",\r\n//         \"Tiền Giang\",\r\n//         \"An Giang\",\r\n//         \"Bến Tre\",\r\n//         \"Vĩnh Long\",\r\n//         \"Trà Vinh\",\r\n//         \"Hậu Giang\",\r\n//         \"Kiên Giang\",\r\n//         \"Sóc Trăng\",\r\n//         \"Bạc Liêu\",\r\n//         \"Cà Mau\",\r\n//         \"Cần Thơ\",\r\n//     ];\r\n// }\r\n\r\nclass locationConfigCode {\r\n    //25 tỉnh miền bắc\r\n    bacLocation = [\r\n        \"LAOCAI\",\r\n        \"YENBAI\",\r\n        \"DIENBIEN\",\r\n        \"HOABINH\",\r\n        \"LAICHAU\",\r\n        \"SONLA\",\r\n        \"HAGIANG\",\r\n        \"CAOBANG\",\r\n        \"BACKAN\",\r\n        \"LANGSON\",\r\n        \"TUYENQUANG\",\r\n        \"THAINGUYEN\",\r\n        \"PHUTHO\",\r\n        \"BACGIANG\",\r\n        \"QUANGNINH\",\r\n        \"BACNINH\",\r\n        \"HANAM\",\r\n        \"HANOI\",\r\n        \"HAIDUONG\",\r\n        \"HAIPHONG\",\r\n        \"HUNGYEN\",\r\n        \"NAMDINH\",\r\n        \"NINHBINH\",\r\n        \"THAIBINH\",\r\n        \"VINHPHUC\",\r\n    ];\r\n\r\n    //19 tỉnh miền trung\r\n    trungLocation = [\r\n        \"THANHHOA\",\r\n        \"NGHEAN\",\r\n        \"HATINH\",\r\n        \"QUANGBINH\",\r\n        \"QUANGTRI\",\r\n        \"THUATHIENHUE\",\r\n        \"KONTUM\",\r\n        \"GIALAI\",\r\n        \"DAKLAK\",\r\n        \"DAKNONG\",\r\n        \"LAMDONG\",\r\n        \"DANANG\",\r\n        \"QUANGNAM\",\r\n        \"QUANGNGAI\",\r\n        \"BINHDINH\",\r\n        \"PHUYEN\",\r\n        \"KHANHHOA\",\r\n        \"NINHTHUAN\",\r\n        \"BINHTHUAN\"\r\n    ];\r\n\r\n    //19\r\n    namLocation = [\r\n        \"LONGAN\",\r\n        \"DONGTHAP\",\r\n        \"TIENGIANG\",\r\n        \"ANGIANG\",\r\n        \"BENTRE\",\r\n        \"VINHLONG\",\r\n        \"TRAVINH\",\r\n        \"HAUGIANG\",\r\n        \"KIENGIANG\",\r\n        \"SOCTRANG\",\r\n        \"BACLIEU\",\r\n        \"CAMAU\",\r\n        \"CANTHO\",\r\n        \"HCM\",\r\n        \"BINHPHUOC\",\r\n        \"BINHDUONG\",\r\n        \"DONGNAI\",\r\n        \"TAYNINH\",\r\n        \"BARIAVUNGTAU\"\r\n    ];\r\n}\r\nexport default new locationConfigCode();\r\n// export { locationConfigCode, locationConfig };","import { render } from \"./LocationList.vue?vue&type=template&id=6eb2e6b1\"\nimport script from \"./LocationList.vue?vue&type=script&lang=js\"\nexport * from \"./LocationList.vue?vue&type=script&lang=js\"\n\nimport \"./LocationList.vue?vue&type=style&index=0&id=6eb2e6b1&lang=scss\"\n\nimport exportComponent from \"D:\\\\Traveller\\\\Traveller-Frontend\\\\traveller-ui\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createElementVNode","_createVNode","_component_m_input","showLabel","$data","$event","onInput","$options","placeholder","onClick","_component_v_multiselect","ref","options","label","clearOnSelect","searchable","noResultsText","noOptionsText","canClear","canDeselect","onSelect","onOpen","_component_m_grid","listData","columns","_ctx","onDblClick","tableFunction","onEMainButtonClick","onEDoubleClick","multiSelect","_component_m_pagination","totalPage","currentPage","pageSize","onChangeCurrentPage","LocationAPI","BaseAPI","constructor","super","apiConfig","locationConfigCode","dbName","collection","data","textSearch","storeLocation","storeLocationAll","db","locations","pageNumber","showPaging","provinceValue","storeProvince","districtValue","storeDistrict","wardValue","storeWard","created","this","initStaticData","mounted","request","window","indexedDB","open","onsuccess","async","result","getCacheLocation","onupgradeneeded","event","target","createObjectStore","autoIncrement","methods","comboProvinceBeforeExpand","comboProvinceSelected","option","comboDistrictBeforeExpand","code","find","x","location_name","location_code","filter","parent_code","map","comboDistrictSelected","comboWardBeforeExpand","comboWardSelected","filterButtonClick","filterOption","includes","setCurrentPage","page","filterData","_textSearch","toLowerCase","index","objectStore","transaction","cacheLocations","get","length","Math","round","initDataLocation","getFreshLocation","add","searchData","_","me","indexOf","handleFunctionClick","object","mainFunction","handleDoubleClick","mainButtonText","isShow","title","key","width","res","addLocation","__exports__","render"],"sourceRoot":""}